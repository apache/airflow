# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
---
version: "3.7"
services:
  airflow:
    stdin_open: true  # docker run -i
    tty: true  # docker run -t
    # We need to mount files and directories individually because some files
    # such apache_airflow.egg-info should not be mounted from host
    # we only mount those files, so that it makes sense to edit while developing
    # or those that might be useful to see in the host as output of the
    # tests (such as logs)
    volumes:
      # START automatically generated volumes from VOLUMES_FOR_SELECTED_MOUNTS in docker_command_utils.py
      - type: bind
        source: ../../../.bash_aliases
        target: /root/.bash_aliases
      - type: bind
        source: ../../../.bash_history
        target: /root/.bash_history
      - type: bind
        source: ../../../.coveragerc
        target: /opt/airflow/.coveragerc
      - type: bind
        source: ../../../.dockerignore
        target: /opt/airflow/.dockerignore
      - type: bind
        source: ../../../.flake8
        target: /opt/airflow/.flake8
      - type: bind
        source: ../../../.github
        target: /opt/airflow/.github
      - type: bind
        source: ../../../.inputrc
        target: /root/.inputrc
      - type: bind
        source: ../../../.rat-excludes
        target: /opt/airflow/.rat-excludes
      - type: bind
        source: ../../../BREEZE.rst
        target: /opt/airflow/BREEZE.rst
      - type: bind
        source: ../../../LICENSE
        target: /opt/airflow/LICENSE
      - type: bind
        source: ../../../MANIFEST.in
        target: /opt/airflow/MANIFEST.in
      - type: bind
        source: ../../../NOTICE
        target: /opt/airflow/NOTICE
      - type: bind
        source: ../../../RELEASE_NOTES.rst
        target: /opt/airflow/RELEASE_NOTES.rst
      - type: bind
        source: ../../../airflow
        target: /opt/airflow/airflow
      - type: bind
        source: ../../../provider_packages
        target: /opt/airflow/provider_packages
      - type: bind
        source: ../../../dags
        target: /opt/airflow/dags
      - type: bind
        source: ../../../dev
        target: /opt/airflow/dev
      - type: bind
        source: ../../../docs
        target: /opt/airflow/docs
      - type: bind
        source: ../../../generated
        target: /opt/airflow/generated
      - type: bind
        source: ../../../hooks
        target: /opt/airflow/hooks
      - type: bind
        source: ../../../images
        target: /opt/airflow/images
      - type: bind
        source: ../../../logs
        target: /root/airflow/logs
      - type: bind
        source: ../../../pyproject.toml
        target: /opt/airflow/pyproject.toml
      - type: bind
        source: ../../../pytest.ini
        target: /opt/airflow/pytest.ini
      - type: bind
        source: ../../../scripts
        target: /opt/airflow/scripts
      - type: bind
        source: ../../../scripts/docker/entrypoint_ci.sh
        target: /entrypoint
      - type: bind
        source: ../../../setup.cfg
        target: /opt/airflow/setup.cfg
      - type: bind
        source: ../../../setup.py
        target: /opt/airflow/setup.py
      - type: bind
        source: ../../../tests
        target: /opt/airflow/tests
      - type: bind
        source: ../../../kubernetes_tests
        target: /opt/airflow/kubernetes_tests
      - type: bind
        source: ../../../docker_tests
        target: /opt/airflow/docker_tests
      - type: bind
        source: ../../../chart
        target: /opt/airflow/chart
      - type: bind
        source: ../../../metastore_browser
        target: /opt/airflow/metastore_browser
        # END automatically generated volumes from VOLUMES_FOR_SELECTED_MOUNTS in docker_command_utils.py
