# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

################################
## Airflow Pgbouncer Deployment
#################################
{{- if .Values.pgbouncer.enabled }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-pgbouncer
  labels:
    tier: airflow
    component: pgbouncer
    release: {{ .Release.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service }}
{{- with .Values.labels }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      tier: airflow
      component: pgbouncer
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        tier: airflow
        component: pgbouncer
        release: {{ .Release.Name }}
{{- with .Values.labels }}
{{ toYaml . | indent 8 }}
{{- end }}
      annotations:
        checksum/pgbouncer-config-secret: {{ include (print $.Template.BasePath "/secrets/pgbouncer-config-secret.yaml") . | sha256sum }}
    spec:
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      restartPolicy: Always
      containers:
        - name: pgbouncer
          image: {{ template "pgbouncer_image" . }}
          imagePullPolicy: {{ .Values.images.pgbouncer.pullPolicy }}
          command:
            - pgbouncer
            - -u
            - pgbouncer
            - /etc/pgbouncer/pgbouncer.ini
          resources:
{{ toYaml .Values.pgbouncer.resources | indent 12 }}
          ports:
            - name: pgbouncer
              containerPort: {{ .Values.ports.pgbouncer }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.ports.pgbouncer }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.ports.pgbouncer }}
          volumeMounts:
            - name: pgbouncer-config
              subPath: pgbouncer.ini
              mountPath: /etc/pgbouncer/pgbouncer.ini
              readOnly: true
            - name: pgbouncer-config
              subPath: users.txt
              mountPath: /etc/pgbouncer/users.txt
              readOnly: true
          lifecycle:
            preStop:
              exec:
                # Allow existing queries clients to complete within 120 seconds
                command: ["/bin/sh", "-c", "killall -INT pgbouncer && sleep 120"]
        - name: metrics-exporter
          image: {{ template "pgbouncer_exporter_image" . }}
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ template "pgbouncer_stats_secret" . }}
                  key: connection
          ports:
            - name: metrics
              containerPort: {{ .Values.ports.pgbouncerScrape }}
          livenessProbe:
            exec:
              command:
                - pgbouncer_exporter
                - health
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - pgbouncer_exporter
                - health
            initialDelaySeconds: 10
            periodSeconds: 10
      volumes:
        - name: pgbouncer-config
          secret:
            secretName: {{ template "pgbouncer_config_secret" . }}
{{- end }}
