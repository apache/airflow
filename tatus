[1mdiff --git a/airflow-core/src/airflow/ui/src/layouts/Details/Grid/GridTI.tsx b/airflow-core/src/airflow/ui/src/layouts/Details/Grid/GridTI.tsx[m
[1mindex 645728236d..fe411e1528 100644[m
[1m--- a/airflow-core/src/airflow/ui/src/layouts/Details/Grid/GridTI.tsx[m
[1m+++ b/airflow-core/src/airflow/ui/src/layouts/Details/Grid/GridTI.tsx[m
[36m@@ -41,7 +41,7 @@[m [mconst handleMouseEnter =[m
   };[m
 [m
 const handleMouseLeave = (taskId: string, setHoveredTaskId: HoverContextType["setHoveredTaskId"]) => () => {[m
[31m-  const tasks = document.querySelectorAll<HTMLDivElement>(`#${taskId.replaceAll(".", "-")}`);[m
[32m+[m[32m  const tasks = document.querySelectorAll<HTMLDivElement>(`#task-${taskId.replaceAll(".", "-")}`);[m
 [m
   tasks.forEach((task) => {[m
     task.style.backgroundColor = "";[m
[36m@@ -89,7 +89,7 @@[m [mconst Instance = ({ dagId, instance, isGroup, isMapped, onClick, runId, search,[m
       alignItems="center"[m
       bg={selectedTaskId === taskId || selectedGroupId === taskId ? "info.muted" : undefined}[m
       height="20px"[m
[31m-      id={taskId.replaceAll(".", "-")}[m
[32m+[m[32m      id={`task-${taskId.replaceAll(".", "-")}`}[m
       justifyContent="center"[m
       key={taskId}[m
       onMouseEnter={onMouseEnter}[m
[1mdiff --git a/airflow-core/src/airflow/ui/src/layouts/Details/Grid/TaskNames.tsx b/airflow-core/src/airflow/ui/src/layouts/Details/Grid/TaskNames.tsx[m
[1mindex da76cfc859..21b4c6af05 100644[m
[1m--- a/airflow-core/src/airflow/ui/src/layouts/Details/Grid/TaskNames.tsx[m
[1m+++ b/airflow-core/src/airflow/ui/src/layouts/Details/Grid/TaskNames.tsx[m
[36m@@ -51,7 +51,7 @@[m [mconst onMouseEnter = ([m
 };[m
 [m
 const onMouseLeave = (nodeId: string, setHoveredTaskId: HoverContextType["setHoveredTaskId"]) => {[m
[31m-  const tasks = document.querySelectorAll<HTMLDivElement>(`#${nodeId.replaceAll(".", "-")}`);[m
[32m+[m[32m  const tasks = document.querySelectorAll<HTMLDivElement>(`#task-${nodeId.replaceAll(".", "-")}`);[m
 [m
   tasks.forEach((task) => {[m
     task.style.backgroundColor = "";[m
[36m@@ -74,7 +74,7 @@[m [mexport const TaskNames = ({ nodes, onRowClick }: Props) => {[m
       borderColor={node.isGroup ? "border.emphasized" : "border"}[m
       borderTopWidth={index === 0 ? 1 : 0}[m
       cursor="pointer"[m
[31m-      id={node.id.replaceAll(".", "-")}[m
[32m+[m[32m      id={`task-${node.id.replaceAll(".", "-")}`}[m
       key={node.id}[m
       maxHeight="20px"[m
       onMouseEnter={(event) => onMouseEnter(event, node.id, setHoveredTaskId)}[m
