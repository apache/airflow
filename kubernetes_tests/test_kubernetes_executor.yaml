# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

################################
## Airflow Worker Deployment
#################################
---
apiVersion: v1
kind: Pod
metadata:
  name: will-be-overwritten
  namespace: airflow
spec:
  containers:
    - name: base
      env:
        - name: AIRFLOW__CORE__EXECUTOR
          value: LocalExecutor
        - name: AIRFLOW_HOME
          value: /opt/airflow
        - name: AIRFLOW__CORE__DAGS_FOLDER
          value: /opt/airflow/dags
        - name: AIRFLOW__CORE__FERNET_KEY
          valueFrom:
            secretKeyRef:
              key: fernet-key
              name: airflow-fernet-key
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          valueFrom:
            secretKeyRef:
              key: connection
              name: airflow-airflow-metadata
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /opt/airflow/logs
          name: airflow-logs
        - mountPath: /opt/airflow/airflow.cfg
          name: airflow-config
          readOnly: true
          subPath: airflow.cfg
        - mountPath: /opt/airflow/config/airflow_local_settings.py
          name: airflow-config
          readOnly: true
          subPath: airflow_local_settings.py
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  imagePullSecrets:
    - name: airflow-registry
  restartPolicy: Never
  securityContext:
    fsGroup: 50000
    runAsUser: 50000
  serviceAccount: airflow-worker-serviceaccount
  serviceAccountName: airflow-worker-serviceaccount
  terminationGracePeriodSeconds: 30
  volumes:
    - emptyDir: {}
      name: airflow-logs
    - configMap:
        defaultMode: 420
        name: airflow-airflow-config
      name: airflow-config
    - name: airflow-worker-serviceaccount-token-g7m4t
      secret:
        defaultMode: 420
        secretName: airflow-worker-serviceaccount-token-g7m4t
