# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
---
default_stages: [commit, push]
default_language_version:
  python: python3
  node: 18.6.0
minimum_pre_commit_version: '2.0.0'
repos:
  - repo: meta
    hooks:
      - id: identity
        name: Print input to the static check hooks for troubleshooting
      - id: check-hooks-apply
        name: Check if all hooks apply to the repository
  - repo: https://github.com/thlorenz/doctoc.git
    rev: v2.2.0
    hooks:
      - id: doctoc
        name: Add TOC for Markdown and RST files
        files:
          ^CONTRIBUTING\.md$|^README\.md$|^UPDATING.*\.md$|^chart/UPDATING.*\.md$|^dev/.*\.md$|^dev/.*\.rst$
        exclude: ^.*/.*_vendor/
        args:
          - "--maxlevel"
          - "2"
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.3.1
    hooks:
      - id: insert-license
        name: Add license for all SQL files
        files: \.sql$
        exclude: |
          (?x)
          ^\.github/|
          ^.*/.*_vendor/
        args:
          - --comment-style
          - "/*||*/"
          - --license-filepath
          - license-templates/LICENSE.txt
          - --fuzzy-match-generates-todo
      - id: insert-license
        name: Add license for all RST files
        exclude: ^\.github/.*$|^.*/.*_vendor/|newsfragments/.*\.rst$
        args:
          - --comment-style
          - "||"
          - --license-filepath
          - license-templates/LICENSE.rst
          - --fuzzy-match-generates-todo
        files: \.rst$
      - id: insert-license
        name: Add license for all CSS/JS/JSX/PUML/TS/TSX files
        files: \.(css|jsx?|puml|tsx?)$
        exclude: ^\.github/.*$|^.*/.*_vendor/
        args:
          - --comment-style
          - "/*!| *| */"
          - --license-filepath
          - license-templates/LICENSE.txt
          - --fuzzy-match-generates-todo
      - id: insert-license
        name: Add license for all JINJA template files
        files: ^airflow/www/templates/.*\.html$
        exclude: ^\.github/.*$|^.*/.*_vendor/
        args:
          - --comment-style
          - "{#||#}"
          - --license-filepath
          - license-templates/LICENSE.txt
          - --fuzzy-match-generates-todo
      - id: insert-license
        name: Add license for all Shell files
        exclude: ^\.github/.*$|^.*/.*_vendor/|^dev/breeze/autocomplete/.*$
        files: \.bash$|\.sh$
        args:
          - --comment-style
          - "|#|"
          - --license-filepath
          - license-templates/LICENSE.txt
          - --fuzzy-match-generates-todo
      - id: insert-license
        name: Add license for all Python files
        exclude: ^\.github/.*$|^.*/.*_vendor/
        files: \.py$|\.pyi$
        args:
          - --comment-style
          - "|#|"
          - --license-filepath
          - license-templates/LICENSE.txt
          - --fuzzy-match-generates-todo
      - id: insert-license
        name: Add license for all XML files
        exclude: ^\.github/.*$|^.*/.*_vendor/
        files: \.xml$
        args:
          - --comment-style
          - "<!--||-->"
          - --license-filepath
          - license-templates/LICENSE.txt
          - --fuzzy-match-generates-todo
      - id: insert-license
        name: Add license for all Helm template files
        files: ^chart/templates/.*
        args:
          - --comment-style
          - "{{/*||*/}}"
          - --license-filepath
          - license-templates/LICENSE.txt
          - --fuzzy-match-generates-todo
      - id: insert-license
        name: Add license for all YAML files except Helm templates
        exclude: ^\.github/.*$|^.*/.*_vendor/|^chart/templates/.*
        types: [yaml]
        files: \.ya?ml$
        args:
          - --comment-style
          - "|#|"
          - --license-filepath
          - license-templates/LICENSE.txt
          - --fuzzy-match-generates-todo
      - id: insert-license
        name: Add license for all Markdown files
        files: \.md$
        exclude: ^\.github/.*$|PROVIDER_CHANGES.*\.md$|^.*/.*_vendor/
        args:
          - --comment-style
          - "<!--|| -->"
          - --license-filepath
          - license-templates/LICENSE.txt
          - --fuzzy-match-generates-todo
      - id: insert-license
        name: Add license for all other files
        exclude: ^\.github/.*$|^.*/.*_vendor/
        args:
          - --comment-style
          - "|#|"
          - --license-filepath
          - license-templates/LICENSE.txt
          - --fuzzy-match-generates-todo
        files: >
          \.cfg$|\.conf$|\.ini$|\.ldif$|\.properties$|\.readthedocs$|\.service$|\.tf$|Dockerfile.*$
  - repo: https://github.com/psf/black
    rev: 22.12.0
    hooks:
      - id: black
        name: Run black (Python formatter)
        args: [--config=./pyproject.toml]
        exclude: ^.*/.*_vendor/|^airflow/contrib/
  - repo: local
    hooks:
      - id: update-common-sql-api-stubs
        name: Check and update common.sql API stubs
        entry: ./scripts/ci/pre_commit/pre_commit_update_common_sql_api_stubs.py
        language: python
        files: ^scripts/ci/pre_commit/pre_commit_update_common_sql_api\.py|^airflow/providers/common/sql/.*\.pyi?$
        additional_dependencies: ['rich>=12.4.4', 'mypy==1.2.0', 'black==22.12.0', 'jinja2']
        pass_filenames: false
        require_serial: true
      - id: update-black-version
        name: Update black versions everywhere
        entry: ./scripts/ci/pre_commit/pre_commit_update_black_version.py
        language: python
        files: ^.pre-commit-config.yaml$
        additional_dependencies: ['pyyaml']
        pass_filenames: false
        require_serial: true
      - id: ruff
        name: ruff
        language: python
        require_serial: true
        pass_filenames: true
        # Since ruff makes use of multiple cores we _purposefully_ don't run this in docker so it can use the
        # host CPU to it's fullest
        entry: ruff --fix --no-update-check --force-exclude
        additional_dependencies: ['ruff==0.0.265']
        files: \.pyi?$
        exclude: ^.*/.*_vendor/|^tests/dags/test_imports.py
  - repo: https://github.com/asottile/blacken-docs
    rev: 1.13.0
    hooks:
      - id: blacken-docs
        name: Run black on Python code blocks in documentation files
        args:
          - --line-length=110
          - --target-version=py37
          - --target-version=py38
          - --target-version=py39
          - --target-version=py310
        alias: black
        additional_dependencies: [black==22.12.0]
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-merge-conflict
        name: Check that merge conflicts are not being committed
      - id: debug-statements
        name: Detect accidentally committed debug statements
      - id: check-builtin-literals
        name: Require literal syntax when initializing Python builtin types
        exclude: ^.*/.*_vendor/
      - id: detect-private-key
        name: Detect if private key is added to the repository
        exclude: ^docs/apache-airflow-providers-ssh/connections/ssh.rst$
      - id: end-of-file-fixer
        name: Make sure that there is an empty line at the end
        exclude: ^.*/.*_vendor/|^docs/apache-airflow/img/.*\.dot|^docs/apache-airflow/img/.*\.sha256
      - id: mixed-line-ending
        name: Detect if mixed line ending is used (\r vs. \r\n)
        exclude: ^.*/.*_vendor/
      - id: check-executables-have-shebangs
        name: Check that executables have shebang
        exclude: ^.*/.*_vendor/
      - id: check-xml
        name: Check XML files with xmllint
        exclude: ^.*/.*_vendor/
      - id: trailing-whitespace
        name: Remove trailing whitespace at end of line
        exclude: ^.*/.*_vendor/|^docs/apache-airflow/img/.*\.dot|^images/breeze/output.*$
      - id: fix-encoding-pragma
        name: Remove encoding header from Python files
        exclude: ^.*/.*_vendor/
        args:
          - --remove
      - id: pretty-format-json
        name: Format JSON files
        args:
          - --autofix
          - --no-sort-keys
          - --indent
          - "4"
        files: ^chart/values\.schema\.json$|^chart/values_schema\.schema\.json$
        pass_filenames: true
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: rst-backticks
        name: Check if RST files use double backticks for code
        exclude: ^.*/.*_vendor/
      - id: python-no-log-warn
        name: Check if there are no deprecate log warn
        exclude: ^.*/.*_vendor/
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.29.0
    hooks:
      - id: yamllint
        name: Check YAML files with yamllint
        entry: yamllint -c yamllint-config.yml --strict
        types: [yaml]
        exclude: ^.*airflow\.template\.yaml$|^.*init_git_sync\.template\.yaml$|^.*/.*_vendor/|^chart/(?:templates|files)/.*\.yaml$|openapi/.*\.yaml$|^\.pre-commit-config\.yaml$
  - repo: https://github.com/ikamensh/flynt
    rev: '0.77'
    hooks:
      - id: flynt
        name: Run flynt string format converter for Python
        exclude: |
          (?x)
          ^.*/.*_vendor/
        args:
         # If flynt detects too long text it ignores it. So we set a very large limit to make it easy
         # to split the text by hand. Too long lines are detected by flake8 (below),
         # so the user is informed to take action.
         - --line-length
         - '99999'
  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.2
    hooks:
      - id: codespell
        name: Run codespell to check for common misspellings in files
        entry: bash -c 'echo "If you think that this failure is an error, consider adding the word(s)
          to the codespell dictionary at docs/spelling_wordlist.txt.
          The word(s) should be in lowercase." && exec codespell "$@"' --
        language: python
        types: [text]
        exclude: ^.*/.*_vendor/|^airflow/www/static/css/material-icons\.css$|^images/.*$|^RELEASE_NOTES\.txt$|^.*package-lock\.json$
        args:
          - --ignore-words=docs/spelling_wordlist.txt
          - --skip=airflow/providers/*/*.rst,airflow/www/*.log,docs/*/commits.rst,docs/apache-airflow/tutorial/pipeline_example.csv,*.min.js,*.lock,INTHEWILD.md
          - --exclude-file=.codespellignorelines
  - repo: local
    # Note that this is the 2nd "local" repo group in the .pre-commit-config.yaml file. This is because
    # we try to minimise the number of passes that must happen in order to apply some of the changes
    # done by pre-commits. Some of the pre-commits not only check for errors but also fix them. This means
    # that output from an earlier pre-commit becomes input to another pre-commit. Splitting the local
    # scripts of our and adding some other non-local pre-commit in-between allows us to handle such
    # changes quickly - especially when we want the early modifications from the first local group
    # to be applied before the non-local pre-commits are run
    hooks:
      - id: lint-openapi
        name: Lint OpenAPI using openapi-spec-validator
        entry: pip list
        language: python
        additional_dependencies: ['openapi-spec-validator']
        files: airflow/api_connexion/openapi/v1.yaml
