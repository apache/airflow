openapi: 3.1.0
info:
  title: FastAPI
  description: Airflow API. All endpoints located under ``/public`` can be used safely,
    are stable and backward compatible. Endpoints located under ``/ui`` are dedicated
    to the UI and are subject to breaking change depending on the need of the frontend.
    Users should not rely on those but use the public ones instead.
  version: 0.1.0
paths:
  /ui/next_run_datasets/{dag_id}:
    get:
      tags:
      - Asset
      summary: Next Run Assets
      operationId: next_run_assets_ui_next_run_datasets__dag_id__get
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Next Run Assets Ui Next Run Datasets  Dag Id  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/dags:
    get:
      tags:
      - DAG
      summary: Get Dags
      description: Get all DAGs.
      operationId: get_dags_public_dags_get
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: tags
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          title: Tags
      - name: owners
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          title: Owners
      - name: dag_id_pattern
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Dag Id Pattern
      - name: dag_display_name_pattern
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Dag Display Name Pattern
      - name: only_active
        in: query
        required: false
        schema:
          type: boolean
          default: true
          title: Only Active
      - name: paused
        in: query
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Paused
      - name: last_dag_run_state
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/DagRunState'
          - type: 'null'
          title: Last Dag Run State
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          default: dag_id
          title: Order By
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DAGCollectionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
      - DAG
      summary: Patch Dags
      description: Patch multiple DAGs.
      operationId: patch_dags_public_dags_patch
      parameters:
      - name: update_mask
        in: query
        required: false
        schema:
          anyOf:
          - type: array
            items:
              type: string
          - type: 'null'
          title: Update Mask
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: tags
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          title: Tags
      - name: owners
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          title: Owners
      - name: dag_id_pattern
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Dag Id Pattern
      - name: only_active
        in: query
        required: false
        schema:
          type: boolean
          default: true
          title: Only Active
      - name: paused
        in: query
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Paused
      - name: last_dag_run_state
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/DagRunState'
          - type: 'null'
          title: Last Dag Run State
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DAGPatchBody'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DAGCollectionResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/dags/{dag_id}:
    patch:
      tags:
      - DAG
      summary: Patch Dag
      description: Patch the specific DAG.
      operationId: patch_dag_public_dags__dag_id__patch
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Id
      - name: update_mask
        in: query
        required: false
        schema:
          anyOf:
          - type: array
            items:
              type: string
          - type: 'null'
          title: Update Mask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DAGPatchBody'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DAGResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    DAGCollectionResponse:
      properties:
        dags:
          items:
            $ref: '#/components/schemas/DAGResponse'
          type: array
          title: Dags
        total_entries:
          type: integer
          title: Total Entries
      type: object
      required:
      - dags
      - total_entries
      title: DAGCollectionResponse
      description: DAG Collection serializer for responses.
    DAGPatchBody:
      properties:
        is_paused:
          type: boolean
          title: Is Paused
      type: object
      required:
      - is_paused
      title: DAGPatchBody
      description: Dag Serializer for updatable body.
    DAGResponse:
      properties:
        dag_id:
          type: string
          title: Dag Id
        dag_display_name:
          type: string
          title: Dag Display Name
        is_paused:
          type: boolean
          title: Is Paused
        is_active:
          type: boolean
          title: Is Active
        last_parsed_time:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Parsed Time
        last_pickled:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Pickled
        last_expired:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Expired
        scheduler_lock:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Scheduler Lock
        pickle_id:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Pickle Id
        default_view:
          anyOf:
          - type: string
          - type: 'null'
          title: Default View
        fileloc:
          type: string
          title: Fileloc
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        timetable_summary:
          anyOf:
          - type: string
          - type: 'null'
          title: Timetable Summary
        timetable_description:
          anyOf:
          - type: string
          - type: 'null'
          title: Timetable Description
        tags:
          items:
            $ref: '#/components/schemas/DagTagPydantic'
          type: array
          title: Tags
        max_active_tasks:
          type: integer
          title: Max Active Tasks
        max_active_runs:
          anyOf:
          - type: integer
          - type: 'null'
          title: Max Active Runs
        max_consecutive_failed_dag_runs:
          type: integer
          title: Max Consecutive Failed Dag Runs
        has_task_concurrency_limits:
          type: boolean
          title: Has Task Concurrency Limits
        has_import_errors:
          type: boolean
          title: Has Import Errors
        next_dagrun:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Next Dagrun
        next_dagrun_data_interval_start:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Next Dagrun Data Interval Start
        next_dagrun_data_interval_end:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Next Dagrun Data Interval End
        next_dagrun_create_after:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Next Dagrun Create After
        owners:
          items:
            type: string
          type: array
          title: Owners
        file_token:
          type: string
          title: File Token
          description: Return file token.
          readOnly: true
      type: object
      required:
      - dag_id
      - dag_display_name
      - is_paused
      - is_active
      - last_parsed_time
      - last_pickled
      - last_expired
      - scheduler_lock
      - pickle_id
      - default_view
      - fileloc
      - description
      - timetable_summary
      - timetable_description
      - tags
      - max_active_tasks
      - max_active_runs
      - max_consecutive_failed_dag_runs
      - has_task_concurrency_limits
      - has_import_errors
      - next_dagrun
      - next_dagrun_data_interval_start
      - next_dagrun_data_interval_end
      - next_dagrun_create_after
      - owners
      - file_token
      title: DAGResponse
      description: DAG serializer for responses.
    DagRunState:
      type: string
      enum:
      - queued
      - running
      - success
      - failed
      title: DagRunState
      description: 'All possible states that a DagRun can be in.


        These are "shared" with TaskInstanceState in some parts of the code,

        so please ensure that their values always match the ones with the

        same name in TaskInstanceState.'
    DagTagPydantic:
      properties:
        name:
          type: string
          title: Name
        dag_id:
          type: string
          title: Dag Id
      type: object
      required:
      - name
      - dag_id
      title: DagTagPydantic
      description: Serializable representation of the DagTag ORM SqlAlchemyModel used
        by internal API.
    HTTPExceptionResponse:
      properties:
        detail:
          anyOf:
          - type: string
          - type: object
          title: Detail
      type: object
      required:
      - detail
      title: HTTPExceptionResponse
      description: HTTPException Model used for error response.
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
