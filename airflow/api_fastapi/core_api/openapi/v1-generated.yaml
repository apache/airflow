openapi: 3.1.0
info:
  title: Airflow API
  description: Airflow API. All endpoints located under ``/public`` can be used safely,
    are stable and backward compatible. Endpoints located under ``/ui`` are dedicated
    to the UI and are subject to breaking change depending on the need of the frontend.
    Users should not rely on those but use the public ones instead.
  version: 0.1.0
paths:
  /ui/next_run_assets/{dag_id}:
    get:
      tags:
      - Asset
      summary: Next Run Assets
      operationId: next_run_assets
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Next Run Assets
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /ui/dashboard/historical_metrics_data:
    get:
      tags:
      - Dashboard
      summary: Historical Metrics
      description: Return cluster activity historical metrics.
      operationId: historical_metrics
      parameters:
      - name: start_date
        in: query
        required: true
        schema:
          type: string
          title: Start Date
      - name: end_date
        in: query
        required: true
        schema:
          type: string
          title: End Date
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricalMetricDataResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /ui/dags/recent_dag_runs:
    get:
      tags:
      - Dags
      summary: Recent Dag Runs
      description: Get recent DAG runs.
      operationId: recent_dag_runs
      parameters:
      - name: dag_runs_limit
        in: query
        required: false
        schema:
          type: integer
          default: 10
          title: Dag Runs Limit
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: tags
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          title: Tags
      - name: owners
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          title: Owners
      - name: dag_id_pattern
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Dag Id Pattern
      - name: dag_display_name_pattern
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Dag Display Name Pattern
      - name: only_active
        in: query
        required: false
        schema:
          type: boolean
          default: true
          title: Only Active
      - name: paused
        in: query
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Paused
      - name: last_dag_run_state
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/DagRunState'
          - type: 'null'
          title: Last Dag Run State
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DAGWithLatestDagRunsCollectionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/backfills/:
    get:
      tags:
      - Backfill
      summary: List Backfills
      operationId: list_backfills
      parameters:
      - name: dag_id
        in: query
        required: true
        schema:
          type: string
          title: Dag Id
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          default: id
          title: Order By
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - Backfill
      summary: Create Backfill
      operationId: create_backfill
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackfillPostBody'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Conflict
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/backfills/{backfill_id}:
    get:
      tags:
      - Backfill
      summary: Get Backfill
      operationId: get_backfill
      parameters:
      - name: backfill_id
        in: path
        required: true
        schema:
          type: string
          title: Backfill Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/backfills/{backfill_id}/pause:
    put:
      tags:
      - Backfill
      summary: Pause Backfill
      operationId: pause_backfill
      parameters:
      - name: backfill_id
        in: path
        required: true
        schema:
          title: Backfill Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Conflict
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/backfills/{backfill_id}/unpause:
    put:
      tags:
      - Backfill
      summary: Unpause Backfill
      operationId: unpause_backfill
      parameters:
      - name: backfill_id
        in: path
        required: true
        schema:
          title: Backfill Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Conflict
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/backfills/{backfill_id}/cancel:
    put:
      tags:
      - Backfill
      summary: Cancel Backfill
      operationId: cancel_backfill
      parameters:
      - name: backfill_id
        in: path
        required: true
        schema:
          title: Backfill Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Conflict
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/dags/:
    get:
      tags:
      - DAG
      summary: Get Dags
      description: Get all DAGs.
      operationId: get_dags
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: tags
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          title: Tags
      - name: owners
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          title: Owners
      - name: dag_id_pattern
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Dag Id Pattern
      - name: dag_display_name_pattern
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Dag Display Name Pattern
      - name: only_active
        in: query
        required: false
        schema:
          type: boolean
          default: true
          title: Only Active
      - name: paused
        in: query
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Paused
      - name: last_dag_run_state
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/DagRunState'
          - type: 'null'
          title: Last Dag Run State
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          default: dag_id
          title: Order By
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DAGCollectionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
      - DAG
      summary: Patch Dags
      description: Patch multiple DAGs.
      operationId: patch_dags
      parameters:
      - name: update_mask
        in: query
        required: false
        schema:
          anyOf:
          - type: array
            items:
              type: string
          - type: 'null'
          title: Update Mask
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: tags
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          title: Tags
      - name: owners
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          title: Owners
      - name: dag_id_pattern
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Dag Id Pattern
      - name: only_active
        in: query
        required: false
        schema:
          type: boolean
          default: true
          title: Only Active
      - name: paused
        in: query
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Paused
      - name: last_dag_run_state
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/DagRunState'
          - type: 'null'
          title: Last Dag Run State
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DAGPatchBody'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DAGCollectionResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/dags/tags:
    get:
      tags:
      - DAG
      summary: Get Dag Tags
      description: Get all DAG tags.
      operationId: get_dag_tags
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          default: name
          title: Order By
      - name: tag_name_pattern
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Tag Name Pattern
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DAGTagCollectionResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/dags/{dag_id}:
    get:
      tags:
      - DAG
      summary: Get Dag
      description: Get basic information about a DAG.
      operationId: get_dag
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DAGResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unprocessable Entity
    patch:
      tags:
      - DAG
      summary: Patch Dag
      description: Patch the specific DAG.
      operationId: patch_dag
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Id
      - name: update_mask
        in: query
        required: false
        schema:
          anyOf:
          - type: array
            items:
              type: string
          - type: 'null'
          title: Update Mask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DAGPatchBody'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DAGResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - DAG
      summary: Delete Dag
      description: Delete the specific DAG.
      operationId: delete_dag
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unprocessable Entity
  /public/dags/{dag_id}/details:
    get:
      tags:
      - DAG
      summary: Get Dag Details
      description: Get details of DAG.
      operationId: get_dag_details
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DAGDetailsResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/connections/{connection_id}:
    delete:
      tags:
      - Connection
      summary: Delete Connection
      description: Delete a connection entry.
      operationId: delete_connection
      parameters:
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          title: Connection Id
      responses:
        '204':
          description: Successful Response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - Connection
      summary: Get Connection
      description: Get a connection entry.
      operationId: get_connection
      parameters:
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          title: Connection Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
      - Connection
      summary: Patch Connection
      description: Update a connection entry.
      operationId: patch_connection
      parameters:
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          title: Connection Id
      - name: update_mask
        in: query
        required: false
        schema:
          anyOf:
          - type: array
            items:
              type: string
          - type: 'null'
          title: Update Mask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionBody'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/connections/:
    get:
      tags:
      - Connection
      summary: Get Connections
      description: Get all connection entries.
      operationId: get_connections
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          default: id
          title: Order By
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionCollectionResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - Connection
      summary: Post Connection
      description: Create connection entry.
      operationId: post_connection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionBody'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Conflict
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/dags/{dag_id}/dagRuns/{dag_run_id}:
    get:
      tags:
      - DagRun
      summary: Get Dag Run
      operationId: get_dag_run
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Id
      - name: dag_run_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Run Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DAGRunResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - DagRun
      summary: Delete Dag Run
      description: Delete a DAG Run entry.
      operationId: delete_dag_run
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Id
      - name: dag_run_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Run Id
      responses:
        '204':
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
      - DagRun
      summary: Patch Dag Run State
      description: Modify a DAG Run.
      operationId: patch_dag_run_state
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Id
      - name: dag_run_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Run Id
      - name: update_mask
        in: query
        required: false
        schema:
          anyOf:
          - type: array
            items:
              type: string
          - type: 'null'
          title: Update Mask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DAGRunPatchBody'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DAGRunResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/dagSources/{file_token}:
    get:
      tags:
      - DagSource
      summary: Get Dag Source
      description: Get source code using file token.
      operationId: get_dag_source
      parameters:
      - name: file_token
        in: path
        required: true
        schema:
          type: string
          title: File Token
      - name: accept
        in: header
        required: false
        schema:
          type: string
          default: '*/*'
          title: Accept
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DAGSourceResponse'
            text/plain:
              schema:
                type: string
                example: dag code
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Acceptable
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/eventLogs/{event_log_id}:
    get:
      tags:
      - Event Log
      summary: Get Event Log
      operationId: get_event_log
      parameters:
      - name: event_log_id
        in: path
        required: true
        schema:
          type: integer
          title: Event Log Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventLogResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/eventLogs/:
    get:
      tags:
      - Event Log
      summary: Get Event Logs
      description: Get all Event Logs.
      operationId: get_event_logs
      parameters:
      - name: dag_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Dag Id
      - name: task_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Task Id
      - name: run_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Run Id
      - name: map_index
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Map Index
      - name: try_number
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Try Number
      - name: owner
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Owner
      - name: event
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Event
      - name: excluded_events
        in: query
        required: false
        schema:
          anyOf:
          - type: array
            items:
              type: string
          - type: 'null'
          title: Excluded Events
      - name: included_events
        in: query
        required: false
        schema:
          anyOf:
          - type: array
            items:
              type: string
          - type: 'null'
          title: Included Events
      - name: before
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Before
      - name: after
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: After
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          default: id
          title: Order By
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventLogCollectionResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/importErrors/{import_error_id}:
    get:
      tags:
      - Import Error
      summary: Get Import Error
      description: Get an import error.
      operationId: get_import_error
      parameters:
      - name: import_error_id
        in: path
        required: true
        schema:
          type: integer
          title: Import Error Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportErrorResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/importErrors/:
    get:
      tags:
      - Import Error
      summary: Get Import Errors
      description: Get all import errors.
      operationId: get_import_errors
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          default: id
          title: Order By
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportErrorCollectionResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/monitor/health:
    get:
      tags:
      - Monitor
      summary: Get Health
      operationId: get_health
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthInfoSchema'
  /public/dagWarnings:
    get:
      tags:
      - DagWarning
      summary: List Dag Warnings
      description: Get a list of DAG warnings.
      operationId: list_dag_warnings
      parameters:
      - name: dag_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Dag Id
      - name: warning_type
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/DagWarningType'
          - type: 'null'
          title: Warning Type
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          default: dag_id
          title: Order By
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DAGWarningCollectionResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/plugins/:
    get:
      tags:
      - Plugin
      summary: Get Plugins
      operationId: get_plugins
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginCollectionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/pools/{pool_name}:
    delete:
      tags:
      - Pool
      summary: Delete Pool
      description: Delete a pool entry.
      operationId: delete_pool
      parameters:
      - name: pool_name
        in: path
        required: true
        schema:
          type: string
          title: Pool Name
      responses:
        '204':
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - Pool
      summary: Get Pool
      description: Get a pool.
      operationId: get_pool
      parameters:
      - name: pool_name
        in: path
        required: true
        schema:
          type: string
          title: Pool Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
      - Pool
      summary: Patch Pool
      description: Update a Pool.
      operationId: patch_pool
      parameters:
      - name: pool_name
        in: path
        required: true
        schema:
          type: string
          title: Pool Name
      - name: update_mask
        in: query
        required: false
        schema:
          anyOf:
          - type: array
            items:
              type: string
          - type: 'null'
          title: Update Mask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoolPatchBody'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/pools/:
    get:
      tags:
      - Pool
      summary: Get Pools
      description: Get all pools entries.
      operationId: get_pools
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          default: id
          title: Order By
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolCollectionResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - Pool
      summary: Post Pool
      description: Create a Pool.
      operationId: post_pool
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoolPostBody'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/providers/:
    get:
      tags:
      - Provider
      summary: Get Providers
      description: Get providers.
      operationId: get_providers
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderCollectionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}:
    get:
      tags:
      - Task Instance
      summary: Get Task Instance
      description: Get task instance.
      operationId: get_task_instance
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Id
      - name: dag_run_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Run Id
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          title: Task Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskInstanceResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/listMapped:
    get:
      tags:
      - Task Instance
      summary: Get Mapped Task Instances
      description: Get list of mapped task instances.
      operationId: get_mapped_task_instances
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Id
      - name: dag_run_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Run Id
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          title: Task Id
      - name: logical_date_gte
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Logical Date Gte
      - name: logical_date_lte
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Logical Date Lte
      - name: start_date_gte
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Start Date Gte
      - name: start_date_lte
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Start Date Lte
      - name: end_date_gte
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: End Date Gte
      - name: end_date_lte
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: End Date Lte
      - name: updated_at_gte
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Updated At Gte
      - name: updated_at_lte
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Updated At Lte
      - name: duration_gte
        in: query
        required: false
        schema:
          anyOf:
          - type: number
          - type: 'null'
          title: Duration Gte
      - name: duration_lte
        in: query
        required: false
        schema:
          anyOf:
          - type: number
          - type: 'null'
          title: Duration Lte
      - name: state
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          title: State
      - name: pool
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          title: Pool
      - name: queue
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          title: Queue
      - name: executor
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          title: Executor
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          default: map_index
          title: Order By
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskInstanceCollectionResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/{map_index}/dependencies:
    get:
      tags:
      - Task Instance
      summary: Get Task Instance Dependencies
      description: Get dependencies blocking task from getting scheduled.
      operationId: get_task_instance_dependencies
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Id
      - name: dag_run_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Run Id
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          title: Task Id
      - name: map_index
        in: path
        required: true
        schema:
          type: integer
          title: Map Index
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDependencyCollectionResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/dependencies:
    get:
      tags:
      - Task Instance
      summary: Get Task Instance Dependencies
      description: Get dependencies blocking task from getting scheduled.
      operationId: get_task_instance_dependencies
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Id
      - name: dag_run_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Run Id
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          title: Task Id
      - name: map_index
        in: query
        required: false
        schema:
          type: integer
          default: -1
          title: Map Index
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDependencyCollectionResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/{map_index}:
    get:
      tags:
      - Task Instance
      summary: Get Mapped Task Instance
      description: Get task instance.
      operationId: get_mapped_task_instance
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Id
      - name: dag_run_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Run Id
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          title: Task Id
      - name: map_index
        in: path
        required: true
        schema:
          type: integer
          title: Map Index
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskInstanceResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/:
    get:
      tags:
      - Task Instance
      summary: Get Task Instances
      description: 'Get list of task instances.


        This endpoint allows specifying `~` as the dag_id, dag_run_id to retrieve
        Task Instances for all DAGs

        and DAG runs.'
      operationId: get_task_instances
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Id
      - name: dag_run_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Run Id
      - name: logical_date_gte
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Logical Date Gte
      - name: logical_date_lte
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Logical Date Lte
      - name: start_date_gte
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Start Date Gte
      - name: start_date_lte
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Start Date Lte
      - name: end_date_gte
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: End Date Gte
      - name: end_date_lte
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: End Date Lte
      - name: updated_at_gte
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Updated At Gte
      - name: updated_at_lte
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Updated At Lte
      - name: duration_gte
        in: query
        required: false
        schema:
          anyOf:
          - type: number
          - type: 'null'
          title: Duration Gte
      - name: duration_lte
        in: query
        required: false
        schema:
          anyOf:
          - type: number
          - type: 'null'
          title: Duration Lte
      - name: state
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          title: State
      - name: pool
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          title: Pool
      - name: queue
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          title: Queue
      - name: executor
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          title: Executor
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          default: map_index
          title: Order By
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskInstanceCollectionResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/variables/{variable_key}:
    delete:
      tags:
      - Variable
      summary: Delete Variable
      description: Delete a variable entry.
      operationId: delete_variable
      parameters:
      - name: variable_key
        in: path
        required: true
        schema:
          type: string
          title: Variable Key
      responses:
        '204':
          description: Successful Response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - Variable
      summary: Get Variable
      description: Get a variable entry.
      operationId: get_variable
      parameters:
      - name: variable_key
        in: path
        required: true
        schema:
          type: string
          title: Variable Key
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
      - Variable
      summary: Patch Variable
      description: Update a variable by key.
      operationId: patch_variable
      parameters:
      - name: variable_key
        in: path
        required: true
        schema:
          type: string
          title: Variable Key
      - name: update_mask
        in: query
        required: false
        schema:
          anyOf:
          - type: array
            items:
              type: string
          - type: 'null'
          title: Update Mask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableBody'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/variables/:
    get:
      tags:
      - Variable
      summary: Get Variables
      description: Get all Variables entries.
      operationId: get_variables
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          default: id
          title: Order By
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableCollectionResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - Variable
      summary: Post Variable
      description: Create a variable.
      operationId: post_variable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableBody'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/version/:
    get:
      tags:
      - Version
      summary: Get Version
      description: Get version information.
      operationId: get_version
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionInfo'
  /public/dagStats/:
    get:
      tags:
      - DagStats
      summary: Get Dag Stats
      description: Get Dag statistics.
      operationId: get_dag_stats
      parameters:
      - name: dag_ids
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          title: Dag Ids
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DagStatsCollectionResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    AppBuilderMenuItemResponse:
      properties:
        name:
          type: string
          title: Name
        href:
          anyOf:
          - type: string
          - type: 'null'
          title: Href
        category:
          anyOf:
          - type: string
          - type: 'null'
          title: Category
      additionalProperties: true
      type: object
      required:
      - name
      title: AppBuilderMenuItemResponse
      description: Serializer for AppBuilder Menu Item responses.
    AppBuilderViewResponse:
      properties:
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        category:
          anyOf:
          - type: string
          - type: 'null'
          title: Category
        view:
          anyOf:
          - type: string
          - type: 'null'
          title: View
        label:
          anyOf:
          - type: string
          - type: 'null'
          title: Label
      additionalProperties: true
      type: object
      title: AppBuilderViewResponse
      description: Serializer for AppBuilder View responses.
    BackfillPostBody:
      properties:
        dag_id:
          type: string
          title: Dag Id
        from_date:
          type: string
          format: date-time
          title: From Date
        to_date:
          type: string
          format: date-time
          title: To Date
        run_backwards:
          type: boolean
          title: Run Backwards
          default: false
        dag_run_conf:
          type: object
          title: Dag Run Conf
          default: {}
        reprocess_behavior:
          $ref: '#/components/schemas/ReprocessBehavior'
          default: none
        max_active_runs:
          type: integer
          title: Max Active Runs
          default: 10
      type: object
      required:
      - dag_id
      - from_date
      - to_date
      title: BackfillPostBody
      description: Object used for create backfill request.
    BaseInfoSchema:
      properties:
        status:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
      type: object
      required:
      - status
      title: BaseInfoSchema
      description: Base status field for metadatabase and scheduler.
    ConnectionBody:
      properties:
        connection_id:
          type: string
          title: Connection Id
        conn_type:
          type: string
          title: Conn Type
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        host:
          anyOf:
          - type: string
          - type: 'null'
          title: Host
        login:
          anyOf:
          - type: string
          - type: 'null'
          title: Login
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Schema
        port:
          anyOf:
          - type: integer
          - type: 'null'
          title: Port
        password:
          anyOf:
          - type: string
          - type: 'null'
          title: Password
        extra:
          anyOf:
          - type: string
          - type: 'null'
          title: Extra
      type: object
      required:
      - connection_id
      - conn_type
      title: ConnectionBody
      description: Connection Serializer for requests body.
    ConnectionCollectionResponse:
      properties:
        connections:
          items:
            $ref: '#/components/schemas/ConnectionResponse'
          type: array
          title: Connections
        total_entries:
          type: integer
          title: Total Entries
      type: object
      required:
      - connections
      - total_entries
      title: ConnectionCollectionResponse
      description: Connection Collection serializer for responses.
    ConnectionResponse:
      properties:
        connection_id:
          type: string
          title: Connection Id
        conn_type:
          type: string
          title: Conn Type
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        host:
          anyOf:
          - type: string
          - type: 'null'
          title: Host
        login:
          anyOf:
          - type: string
          - type: 'null'
          title: Login
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Schema
        port:
          anyOf:
          - type: integer
          - type: 'null'
          title: Port
        password:
          anyOf:
          - type: string
          - type: 'null'
          title: Password
        extra:
          anyOf:
          - type: string
          - type: 'null'
          title: Extra
      type: object
      required:
      - connection_id
      - conn_type
      - description
      - host
      - login
      - schema
      - port
      - password
      - extra
      title: ConnectionResponse
      description: Connection serializer for responses.
    DAGCollectionResponse:
      properties:
        dags:
          items:
            $ref: '#/components/schemas/DAGResponse'
          type: array
          title: Dags
        total_entries:
          type: integer
          title: Total Entries
      type: object
      required:
      - dags
      - total_entries
      title: DAGCollectionResponse
      description: DAG Collection serializer for responses.
    DAGDetailsResponse:
      properties:
        dag_id:
          type: string
          title: Dag Id
        dag_display_name:
          type: string
          title: Dag Display Name
        is_paused:
          type: boolean
          title: Is Paused
        is_active:
          type: boolean
          title: Is Active
        last_parsed_time:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Parsed Time
        last_expired:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Expired
        default_view:
          anyOf:
          - type: string
          - type: 'null'
          title: Default View
        fileloc:
          type: string
          title: Fileloc
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        timetable_summary:
          anyOf:
          - type: string
          - type: 'null'
          title: Timetable Summary
        timetable_description:
          anyOf:
          - type: string
          - type: 'null'
          title: Timetable Description
        tags:
          items:
            $ref: '#/components/schemas/DagTagPydantic'
          type: array
          title: Tags
        max_active_tasks:
          type: integer
          title: Max Active Tasks
        max_active_runs:
          anyOf:
          - type: integer
          - type: 'null'
          title: Max Active Runs
        max_consecutive_failed_dag_runs:
          type: integer
          title: Max Consecutive Failed Dag Runs
        has_task_concurrency_limits:
          type: boolean
          title: Has Task Concurrency Limits
        has_import_errors:
          type: boolean
          title: Has Import Errors
        next_dagrun:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Next Dagrun
        next_dagrun_data_interval_start:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Next Dagrun Data Interval Start
        next_dagrun_data_interval_end:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Next Dagrun Data Interval End
        next_dagrun_create_after:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Next Dagrun Create After
        owners:
          items:
            type: string
          type: array
          title: Owners
        catchup:
          type: boolean
          title: Catchup
        dag_run_timeout:
          anyOf:
          - type: string
            format: duration
          - type: 'null'
          title: Dag Run Timeout
        asset_expression:
          anyOf:
          - type: object
          - type: 'null'
          title: Asset Expression
        doc_md:
          anyOf:
          - type: string
          - type: 'null'
          title: Doc Md
        start_date:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Start Date
        end_date:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: End Date
        is_paused_upon_creation:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Paused Upon Creation
        params:
          anyOf:
          - type: object
          - type: 'null'
          title: Params
        render_template_as_native_obj:
          type: boolean
          title: Render Template As Native Obj
        template_search_path:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Template Search Path
        timezone:
          anyOf:
          - type: string
          - type: 'null'
          title: Timezone
        last_parsed:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Parsed
        file_token:
          type: string
          title: File Token
          description: Return file token.
          readOnly: true
        concurrency:
          type: integer
          title: Concurrency
          description: Return max_active_tasks as concurrency.
          readOnly: true
      type: object
      required:
      - dag_id
      - dag_display_name
      - is_paused
      - is_active
      - last_parsed_time
      - last_expired
      - default_view
      - fileloc
      - description
      - timetable_summary
      - timetable_description
      - tags
      - max_active_tasks
      - max_active_runs
      - max_consecutive_failed_dag_runs
      - has_task_concurrency_limits
      - has_import_errors
      - next_dagrun
      - next_dagrun_data_interval_start
      - next_dagrun_data_interval_end
      - next_dagrun_create_after
      - owners
      - catchup
      - dag_run_timeout
      - asset_expression
      - doc_md
      - start_date
      - end_date
      - is_paused_upon_creation
      - params
      - render_template_as_native_obj
      - template_search_path
      - timezone
      - last_parsed
      - file_token
      - concurrency
      title: DAGDetailsResponse
      description: Specific serializer for DAG Details responses.
    DAGPatchBody:
      properties:
        is_paused:
          type: boolean
          title: Is Paused
      type: object
      required:
      - is_paused
      title: DAGPatchBody
      description: Dag Serializer for updatable bodies.
    DAGResponse:
      properties:
        dag_id:
          type: string
          title: Dag Id
        dag_display_name:
          type: string
          title: Dag Display Name
        is_paused:
          type: boolean
          title: Is Paused
        is_active:
          type: boolean
          title: Is Active
        last_parsed_time:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Parsed Time
        last_expired:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Expired
        default_view:
          anyOf:
          - type: string
          - type: 'null'
          title: Default View
        fileloc:
          type: string
          title: Fileloc
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        timetable_summary:
          anyOf:
          - type: string
          - type: 'null'
          title: Timetable Summary
        timetable_description:
          anyOf:
          - type: string
          - type: 'null'
          title: Timetable Description
        tags:
          items:
            $ref: '#/components/schemas/DagTagPydantic'
          type: array
          title: Tags
        max_active_tasks:
          type: integer
          title: Max Active Tasks
        max_active_runs:
          anyOf:
          - type: integer
          - type: 'null'
          title: Max Active Runs
        max_consecutive_failed_dag_runs:
          type: integer
          title: Max Consecutive Failed Dag Runs
        has_task_concurrency_limits:
          type: boolean
          title: Has Task Concurrency Limits
        has_import_errors:
          type: boolean
          title: Has Import Errors
        next_dagrun:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Next Dagrun
        next_dagrun_data_interval_start:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Next Dagrun Data Interval Start
        next_dagrun_data_interval_end:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Next Dagrun Data Interval End
        next_dagrun_create_after:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Next Dagrun Create After
        owners:
          items:
            type: string
          type: array
          title: Owners
        file_token:
          type: string
          title: File Token
          description: Return file token.
          readOnly: true
      type: object
      required:
      - dag_id
      - dag_display_name
      - is_paused
      - is_active
      - last_parsed_time
      - last_expired
      - default_view
      - fileloc
      - description
      - timetable_summary
      - timetable_description
      - tags
      - max_active_tasks
      - max_active_runs
      - max_consecutive_failed_dag_runs
      - has_task_concurrency_limits
      - has_import_errors
      - next_dagrun
      - next_dagrun_data_interval_start
      - next_dagrun_data_interval_end
      - next_dagrun_create_after
      - owners
      - file_token
      title: DAGResponse
      description: DAG serializer for responses.
    DAGRunPatchBody:
      properties:
        state:
          $ref: '#/components/schemas/DAGRunPatchStates'
      type: object
      required:
      - state
      title: DAGRunPatchBody
      description: DAG Run Serializer for PATCH requests.
    DAGRunPatchStates:
      type: string
      enum:
      - queued
      - success
      - failed
      title: DAGRunPatchStates
      description: Enum for DAG Run states when updating a DAG Run.
    DAGRunResponse:
      properties:
        run_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Run Id
        dag_id:
          type: string
          title: Dag Id
        logical_date:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Logical Date
        start_date:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Start Date
        end_date:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: End Date
        data_interval_start:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Data Interval Start
        data_interval_end:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Data Interval End
        last_scheduling_decision:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Scheduling Decision
        run_type:
          $ref: '#/components/schemas/DagRunType'
        state:
          $ref: '#/components/schemas/DagRunState'
        external_trigger:
          type: boolean
          title: External Trigger
        triggered_by:
          $ref: '#/components/schemas/DagRunTriggeredByType'
        conf:
          type: object
          title: Conf
        note:
          anyOf:
          - type: string
          - type: 'null'
          title: Note
      type: object
      required:
      - run_id
      - dag_id
      - logical_date
      - start_date
      - end_date
      - data_interval_start
      - data_interval_end
      - last_scheduling_decision
      - run_type
      - state
      - external_trigger
      - triggered_by
      - conf
      - note
      title: DAGRunResponse
      description: DAG Run serializer for responses.
    DAGRunStates:
      properties:
        queued:
          type: integer
          title: Queued
        running:
          type: integer
          title: Running
        success:
          type: integer
          title: Success
        failed:
          type: integer
          title: Failed
      type: object
      required:
      - queued
      - running
      - success
      - failed
      title: DAGRunStates
      description: DAG Run States for responses.
    DAGRunTypes:
      properties:
        backfill:
          type: integer
          title: Backfill
        scheduled:
          type: integer
          title: Scheduled
        manual:
          type: integer
          title: Manual
        asset_triggered:
          type: integer
          title: Asset Triggered
      type: object
      required:
      - backfill
      - scheduled
      - manual
      - asset_triggered
      title: DAGRunTypes
      description: DAG Run Types for responses.
    DAGSourceResponse:
      properties:
        content:
          anyOf:
          - type: string
          - type: 'null'
          title: Content
      type: object
      required:
      - content
      title: DAGSourceResponse
      description: DAG Source serializer for responses.
    DAGTagCollectionResponse:
      properties:
        tags:
          items:
            type: string
          type: array
          title: Tags
        total_entries:
          type: integer
          title: Total Entries
      type: object
      required:
      - tags
      - total_entries
      title: DAGTagCollectionResponse
      description: DAG Tags Collection serializer for responses.
    DAGWarningCollectionResponse:
      properties:
        dag_warnings:
          items:
            $ref: '#/components/schemas/DAGWarningResponse'
          type: array
          title: Dag Warnings
        total_entries:
          type: integer
          title: Total Entries
      type: object
      required:
      - dag_warnings
      - total_entries
      title: DAGWarningCollectionResponse
      description: DAG warning collection serializer for responses.
    DAGWarningResponse:
      properties:
        dag_id:
          type: string
          title: Dag Id
        warning_type:
          $ref: '#/components/schemas/DagWarningType'
        message:
          type: string
          title: Message
        timestamp:
          type: string
          format: date-time
          title: Timestamp
      type: object
      required:
      - dag_id
      - warning_type
      - message
      - timestamp
      title: DAGWarningResponse
      description: DAG Warning serializer for responses.
    DAGWithLatestDagRunsCollectionResponse:
      properties:
        total_entries:
          type: integer
          title: Total Entries
        dags:
          items:
            $ref: '#/components/schemas/DAGWithLatestDagRunsResponse'
          type: array
          title: Dags
      type: object
      required:
      - total_entries
      - dags
      title: DAGWithLatestDagRunsCollectionResponse
      description: DAG with latest dag runs collection response serializer.
    DAGWithLatestDagRunsResponse:
      properties:
        dag_id:
          type: string
          title: Dag Id
        dag_display_name:
          type: string
          title: Dag Display Name
        is_paused:
          type: boolean
          title: Is Paused
        is_active:
          type: boolean
          title: Is Active
        last_parsed_time:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Parsed Time
        last_expired:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Expired
        default_view:
          anyOf:
          - type: string
          - type: 'null'
          title: Default View
        fileloc:
          type: string
          title: Fileloc
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        timetable_summary:
          anyOf:
          - type: string
          - type: 'null'
          title: Timetable Summary
        timetable_description:
          anyOf:
          - type: string
          - type: 'null'
          title: Timetable Description
        tags:
          items:
            $ref: '#/components/schemas/DagTagPydantic'
          type: array
          title: Tags
        max_active_tasks:
          type: integer
          title: Max Active Tasks
        max_active_runs:
          anyOf:
          - type: integer
          - type: 'null'
          title: Max Active Runs
        max_consecutive_failed_dag_runs:
          type: integer
          title: Max Consecutive Failed Dag Runs
        has_task_concurrency_limits:
          type: boolean
          title: Has Task Concurrency Limits
        has_import_errors:
          type: boolean
          title: Has Import Errors
        next_dagrun:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Next Dagrun
        next_dagrun_data_interval_start:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Next Dagrun Data Interval Start
        next_dagrun_data_interval_end:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Next Dagrun Data Interval End
        next_dagrun_create_after:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Next Dagrun Create After
        owners:
          items:
            type: string
          type: array
          title: Owners
        latest_dag_runs:
          items:
            $ref: '#/components/schemas/DAGRunResponse'
          type: array
          title: Latest Dag Runs
        file_token:
          type: string
          title: File Token
          description: Return file token.
          readOnly: true
      type: object
      required:
      - dag_id
      - dag_display_name
      - is_paused
      - is_active
      - last_parsed_time
      - last_expired
      - default_view
      - fileloc
      - description
      - timetable_summary
      - timetable_description
      - tags
      - max_active_tasks
      - max_active_runs
      - max_consecutive_failed_dag_runs
      - has_task_concurrency_limits
      - has_import_errors
      - next_dagrun
      - next_dagrun_data_interval_start
      - next_dagrun_data_interval_end
      - next_dagrun_create_after
      - owners
      - latest_dag_runs
      - file_token
      title: DAGWithLatestDagRunsResponse
      description: DAG with latest dag runs response serializer.
    DagProcessorInfoSchema:
      properties:
        status:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
        latest_dag_processor_heartbeat:
          anyOf:
          - type: string
          - type: 'null'
          title: Latest Dag Processor Heartbeat
      type: object
      required:
      - status
      - latest_dag_processor_heartbeat
      title: DagProcessorInfoSchema
      description: Schema for DagProcessor info.
    DagRunState:
      type: string
      enum:
      - queued
      - running
      - success
      - failed
      title: DagRunState
      description: 'All possible states that a DagRun can be in.


        These are "shared" with TaskInstanceState in some parts of the code,

        so please ensure that their values always match the ones with the

        same name in TaskInstanceState.'
    DagRunTriggeredByType:
      type: string
      enum:
      - cli
      - operator
      - rest_api
      - ui
      - test
      - timetable
      - asset
      - backfill
      title: DagRunTriggeredByType
      description: Class with TriggeredBy types for DagRun.
    DagRunType:
      type: string
      enum:
      - backfill
      - scheduled
      - manual
      - asset_triggered
      title: DagRunType
      description: Class with DagRun types.
    DagStatsCollectionResponse:
      properties:
        dags:
          items:
            $ref: '#/components/schemas/DagStatsResponse'
          type: array
          title: Dags
        total_entries:
          type: integer
          title: Total Entries
      type: object
      required:
      - dags
      - total_entries
      title: DagStatsCollectionResponse
      description: DAG Stats Collection serializer for responses.
    DagStatsResponse:
      properties:
        dag_id:
          type: string
          title: Dag Id
        stats:
          items:
            $ref: '#/components/schemas/DagStatsStateResponse'
          type: array
          title: Stats
      type: object
      required:
      - dag_id
      - stats
      title: DagStatsResponse
      description: DAG Stats serializer for responses.
    DagStatsStateResponse:
      properties:
        state:
          $ref: '#/components/schemas/DagRunState'
        count:
          type: integer
          title: Count
      type: object
      required:
      - state
      - count
      title: DagStatsStateResponse
      description: DagStatsState serializer for responses.
    DagTagPydantic:
      properties:
        name:
          type: string
          title: Name
        dag_id:
          type: string
          title: Dag Id
      type: object
      required:
      - name
      - dag_id
      title: DagTagPydantic
      description: Serializable representation of the DagTag ORM SqlAlchemyModel used
        by internal API.
    DagWarningType:
      type: string
      enum:
      - asset conflict
      - non-existent pool
      title: DagWarningType
      description: 'Enum for DAG warning types.


        This is the set of allowable values for the ``warning_type`` field

        in the DagWarning model.'
    EventLogCollectionResponse:
      properties:
        event_logs:
          items:
            $ref: '#/components/schemas/EventLogResponse'
          type: array
          title: Event Logs
        total_entries:
          type: integer
          title: Total Entries
      type: object
      required:
      - event_logs
      - total_entries
      title: EventLogCollectionResponse
      description: Event Log Collection Response.
    EventLogResponse:
      properties:
        event_log_id:
          type: integer
          title: Event Log Id
        when:
          type: string
          format: date-time
          title: When
        dag_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Dag Id
        task_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Task Id
        run_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Run Id
        map_index:
          anyOf:
          - type: integer
          - type: 'null'
          title: Map Index
        try_number:
          anyOf:
          - type: integer
          - type: 'null'
          title: Try Number
        event:
          type: string
          title: Event
        logical_date:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Logical Date
        owner:
          anyOf:
          - type: string
          - type: 'null'
          title: Owner
        extra:
          anyOf:
          - type: string
          - type: 'null'
          title: Extra
      type: object
      required:
      - event_log_id
      - when
      - dag_id
      - task_id
      - run_id
      - map_index
      - try_number
      - event
      - logical_date
      - owner
      - extra
      title: EventLogResponse
      description: Event Log Response.
    FastAPIAppResponse:
      properties:
        app:
          type: string
          title: App
        url_prefix:
          type: string
          title: Url Prefix
        name:
          type: string
          title: Name
      additionalProperties: true
      type: object
      required:
      - app
      - url_prefix
      - name
      title: FastAPIAppResponse
      description: Serializer for Plugin FastAPI App responses.
    HTTPExceptionResponse:
      properties:
        detail:
          anyOf:
          - type: string
          - type: object
          title: Detail
      type: object
      required:
      - detail
      title: HTTPExceptionResponse
      description: HTTPException Model used for error response.
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    HealthInfoSchema:
      properties:
        metadatabase:
          $ref: '#/components/schemas/BaseInfoSchema'
        scheduler:
          $ref: '#/components/schemas/SchedulerInfoSchema'
        triggerer:
          $ref: '#/components/schemas/TriggererInfoSchema'
        dag_processor:
          $ref: '#/components/schemas/DagProcessorInfoSchema'
      type: object
      required:
      - metadatabase
      - scheduler
      - triggerer
      - dag_processor
      title: HealthInfoSchema
      description: Schema for the Health endpoint.
    HistoricalMetricDataResponse:
      properties:
        dag_run_types:
          $ref: '#/components/schemas/DAGRunTypes'
        dag_run_states:
          $ref: '#/components/schemas/DAGRunStates'
        task_instance_states:
          $ref: '#/components/schemas/airflow__api_fastapi__core_api__serializers__ui__dashboard__TaskInstanceState'
      type: object
      required:
      - dag_run_types
      - dag_run_states
      - task_instance_states
      title: HistoricalMetricDataResponse
      description: Historical Metric Data serializer for responses.
    ImportErrorCollectionResponse:
      properties:
        import_errors:
          items:
            $ref: '#/components/schemas/ImportErrorResponse'
          type: array
          title: Import Errors
        total_entries:
          type: integer
          title: Total Entries
      type: object
      required:
      - import_errors
      - total_entries
      title: ImportErrorCollectionResponse
      description: Import Error Collection Response.
    ImportErrorResponse:
      properties:
        import_error_id:
          type: integer
          title: Import Error Id
        timestamp:
          type: string
          format: date-time
          title: Timestamp
        filename:
          type: string
          title: Filename
        stack_trace:
          type: string
          title: Stack Trace
      type: object
      required:
      - import_error_id
      - timestamp
      - filename
      - stack_trace
      title: ImportErrorResponse
      description: Import Error Response.
    JobResponse:
      properties:
        id:
          type: integer
          title: Id
        dag_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Dag Id
        state:
          anyOf:
          - type: string
          - type: 'null'
          title: State
        job_type:
          anyOf:
          - type: string
          - type: 'null'
          title: Job Type
        start_date:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Start Date
        end_date:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: End Date
        latest_heartbeat:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Latest Heartbeat
        executor_class:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Executor Class
        hostname:
          anyOf:
          - type: string
          - type: 'null'
          title: Hostname
        unixname:
          anyOf:
          - type: string
          - type: 'null'
          title: Unixname
      type: object
      required:
      - id
      - dag_id
      - state
      - job_type
      - start_date
      - end_date
      - latest_heartbeat
      - executor_class
      - hostname
      - unixname
      title: JobResponse
      description: Job serializer for responses.
    PluginCollectionResponse:
      properties:
        plugins:
          items:
            $ref: '#/components/schemas/PluginResponse'
          type: array
          title: Plugins
        total_entries:
          type: integer
          title: Total Entries
      type: object
      required:
      - plugins
      - total_entries
      title: PluginCollectionResponse
      description: Plugin Collection serializer.
    PluginResponse:
      properties:
        name:
          type: string
          title: Name
        macros:
          items:
            type: string
          type: array
          title: Macros
        flask_blueprints:
          items:
            type: string
          type: array
          title: Flask Blueprints
        fastapi_apps:
          items:
            $ref: '#/components/schemas/FastAPIAppResponse'
          type: array
          title: Fastapi Apps
        appbuilder_views:
          items:
            $ref: '#/components/schemas/AppBuilderViewResponse'
          type: array
          title: Appbuilder Views
        appbuilder_menu_items:
          items:
            $ref: '#/components/schemas/AppBuilderMenuItemResponse'
          type: array
          title: Appbuilder Menu Items
        global_operator_extra_links:
          items:
            type: string
          type: array
          title: Global Operator Extra Links
        operator_extra_links:
          items:
            type: string
          type: array
          title: Operator Extra Links
        source:
          type: string
          title: Source
        ti_deps:
          items:
            type: string
          type: array
          title: Ti Deps
        listeners:
          items:
            type: string
          type: array
          title: Listeners
        timetables:
          items:
            type: string
          type: array
          title: Timetables
      type: object
      required:
      - name
      - macros
      - flask_blueprints
      - fastapi_apps
      - appbuilder_views
      - appbuilder_menu_items
      - global_operator_extra_links
      - operator_extra_links
      - source
      - ti_deps
      - listeners
      - timetables
      title: PluginResponse
      description: Plugin serializer.
    PoolCollectionResponse:
      properties:
        pools:
          items:
            $ref: '#/components/schemas/PoolResponse'
          type: array
          title: Pools
        total_entries:
          type: integer
          title: Total Entries
      type: object
      required:
      - pools
      - total_entries
      title: PoolCollectionResponse
      description: Pool Collection serializer for responses.
    PoolPatchBody:
      properties:
        pool:
          anyOf:
          - type: string
          - type: 'null'
          title: Pool
        slots:
          anyOf:
          - type: integer
          - type: 'null'
          title: Slots
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        include_deferred:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Include Deferred
      type: object
      title: PoolPatchBody
      description: Pool serializer for patch bodies.
    PoolPostBody:
      properties:
        name:
          type: string
          title: Name
        slots:
          type: integer
          title: Slots
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        include_deferred:
          type: boolean
          title: Include Deferred
          default: false
      type: object
      required:
      - name
      - slots
      title: PoolPostBody
      description: Pool serializer for post bodies.
    PoolResponse:
      properties:
        name:
          type: string
          title: Name
        slots:
          type: integer
          title: Slots
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        include_deferred:
          type: boolean
          title: Include Deferred
        occupied_slots:
          type: integer
          title: Occupied Slots
        running_slots:
          type: integer
          title: Running Slots
        queued_slots:
          type: integer
          title: Queued Slots
        scheduled_slots:
          type: integer
          title: Scheduled Slots
        open_slots:
          type: integer
          title: Open Slots
        deferred_slots:
          type: integer
          title: Deferred Slots
      type: object
      required:
      - name
      - slots
      - description
      - include_deferred
      - occupied_slots
      - running_slots
      - queued_slots
      - scheduled_slots
      - open_slots
      - deferred_slots
      title: PoolResponse
      description: Pool serializer for responses.
    ProviderCollectionResponse:
      properties:
        providers:
          items:
            $ref: '#/components/schemas/ProviderResponse'
          type: array
          title: Providers
        total_entries:
          type: integer
          title: Total Entries
      type: object
      required:
      - providers
      - total_entries
      title: ProviderCollectionResponse
      description: Provider Collection serializer for responses.
    ProviderResponse:
      properties:
        package_name:
          type: string
          title: Package Name
        description:
          type: string
          title: Description
        version:
          type: string
          title: Version
      type: object
      required:
      - package_name
      - description
      - version
      title: ProviderResponse
      description: Provider serializer for responses.
    ReprocessBehavior:
      type: string
      enum:
      - failed
      - completed
      - none
      title: ReprocessBehavior
      description: 'Internal enum for setting reprocess behavior in a backfill.


        :meta private:'
    SchedulerInfoSchema:
      properties:
        status:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
        latest_scheduler_heartbeat:
          anyOf:
          - type: string
          - type: 'null'
          title: Latest Scheduler Heartbeat
      type: object
      required:
      - status
      - latest_scheduler_heartbeat
      title: SchedulerInfoSchema
      description: Schema for Scheduler info.
    TaskDependencyCollectionResponse:
      properties:
        dependencies:
          items:
            $ref: '#/components/schemas/TaskDependencyResponse'
          type: array
          title: Dependencies
      type: object
      required:
      - dependencies
      title: TaskDependencyCollectionResponse
      description: Task scheduling dependencies collection serializer for responses.
    TaskDependencyResponse:
      properties:
        name:
          type: string
          title: Name
        reason:
          type: string
          title: Reason
      type: object
      required:
      - name
      - reason
      title: TaskDependencyResponse
      description: Task Dependency serializer for responses.
    TaskInstanceCollectionResponse:
      properties:
        task_instances:
          items:
            $ref: '#/components/schemas/TaskInstanceResponse'
          type: array
          title: Task Instances
        total_entries:
          type: integer
          title: Total Entries
      type: object
      required:
      - task_instances
      - total_entries
      title: TaskInstanceCollectionResponse
      description: Task Instance Collection serializer for responses.
    TaskInstanceResponse:
      properties:
        id:
          type: string
          title: Id
        task_id:
          type: string
          title: Task Id
        dag_id:
          type: string
          title: Dag Id
        dag_run_id:
          type: string
          title: Dag Run Id
        map_index:
          type: integer
          title: Map Index
        logical_date:
          type: string
          format: date-time
          title: Logical Date
        start_date:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Start Date
        end_date:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: End Date
        duration:
          anyOf:
          - type: number
          - type: 'null'
          title: Duration
        state:
          anyOf:
          - $ref: '#/components/schemas/airflow__utils__state__TaskInstanceState'
          - type: 'null'
        try_number:
          type: integer
          title: Try Number
        max_tries:
          type: integer
          title: Max Tries
        task_display_name:
          type: string
          title: Task Display Name
        hostname:
          anyOf:
          - type: string
          - type: 'null'
          title: Hostname
        unixname:
          anyOf:
          - type: string
          - type: 'null'
          title: Unixname
        pool:
          type: string
          title: Pool
        pool_slots:
          type: integer
          title: Pool Slots
        queue:
          anyOf:
          - type: string
          - type: 'null'
          title: Queue
        priority_weight:
          anyOf:
          - type: integer
          - type: 'null'
          title: Priority Weight
        operator:
          anyOf:
          - type: string
          - type: 'null'
          title: Operator
        queued_when:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Queued When
        pid:
          anyOf:
          - type: integer
          - type: 'null'
          title: Pid
        executor:
          anyOf:
          - type: string
          - type: 'null'
          title: Executor
        executor_config:
          type: string
          title: Executor Config
        note:
          anyOf:
          - type: string
          - type: 'null'
          title: Note
        rendered_map_index:
          anyOf:
          - type: string
          - type: 'null'
          title: Rendered Map Index
        rendered_fields:
          type: object
          title: Rendered Fields
          default: {}
        trigger:
          anyOf:
          - $ref: '#/components/schemas/TriggerResponse'
          - type: 'null'
        triggerer_job:
          anyOf:
          - $ref: '#/components/schemas/JobResponse'
          - type: 'null'
      type: object
      required:
      - id
      - task_id
      - dag_id
      - dag_run_id
      - map_index
      - logical_date
      - start_date
      - end_date
      - duration
      - state
      - try_number
      - max_tries
      - task_display_name
      - hostname
      - unixname
      - pool
      - pool_slots
      - queue
      - priority_weight
      - operator
      - queued_when
      - pid
      - executor
      - executor_config
      - note
      - rendered_map_index
      - trigger
      - triggerer_job
      title: TaskInstanceResponse
      description: TaskInstance serializer for responses.
    TriggerResponse:
      properties:
        id:
          type: integer
          title: Id
        classpath:
          type: string
          title: Classpath
        kwargs:
          type: string
          title: Kwargs
        created_date:
          type: string
          format: date-time
          title: Created Date
        triggerer_id:
          anyOf:
          - type: integer
          - type: 'null'
          title: Triggerer Id
      type: object
      required:
      - id
      - classpath
      - kwargs
      - created_date
      - triggerer_id
      title: TriggerResponse
      description: Trigger serializer for responses.
    TriggererInfoSchema:
      properties:
        status:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
        latest_triggerer_heartbeat:
          anyOf:
          - type: string
          - type: 'null'
          title: Latest Triggerer Heartbeat
      type: object
      required:
      - status
      - latest_triggerer_heartbeat
      title: TriggererInfoSchema
      description: Schema for Triggerer info.
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
    VariableBody:
      properties:
        key:
          type: string
          title: Key
        value:
          anyOf:
          - type: string
          - type: 'null'
          title: Value
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
      type: object
      required:
      - key
      - value
      title: VariableBody
      description: Variable serializer for bodies.
    VariableCollectionResponse:
      properties:
        variables:
          items:
            $ref: '#/components/schemas/VariableResponse'
          type: array
          title: Variables
        total_entries:
          type: integer
          title: Total Entries
      type: object
      required:
      - variables
      - total_entries
      title: VariableCollectionResponse
      description: Variable Collection serializer for responses.
    VariableResponse:
      properties:
        key:
          type: string
          title: Key
        value:
          anyOf:
          - type: string
          - type: 'null'
          title: Value
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
      type: object
      required:
      - key
      - value
      - description
      title: VariableResponse
      description: Variable serializer for responses.
    VersionInfo:
      properties:
        version:
          type: string
          title: Version
        git_version:
          anyOf:
          - type: string
          - type: 'null'
          title: Git Version
      type: object
      required:
      - version
      - git_version
      title: VersionInfo
      description: Version information serializer for responses.
    airflow__api_fastapi__core_api__serializers__ui__dashboard__TaskInstanceState:
      properties:
        no_status:
          type: integer
          title: No Status
        removed:
          type: integer
          title: Removed
        scheduled:
          type: integer
          title: Scheduled
        queued:
          type: integer
          title: Queued
        running:
          type: integer
          title: Running
        success:
          type: integer
          title: Success
        restarting:
          type: integer
          title: Restarting
        failed:
          type: integer
          title: Failed
        up_for_retry:
          type: integer
          title: Up For Retry
        up_for_reschedule:
          type: integer
          title: Up For Reschedule
        upstream_failed:
          type: integer
          title: Upstream Failed
        skipped:
          type: integer
          title: Skipped
        deferred:
          type: integer
          title: Deferred
      type: object
      required:
      - no_status
      - removed
      - scheduled
      - queued
      - running
      - success
      - restarting
      - failed
      - up_for_retry
      - up_for_reschedule
      - upstream_failed
      - skipped
      - deferred
      title: TaskInstanceState
      description: TaskInstance serializer for responses.
    airflow__utils__state__TaskInstanceState:
      type: string
      enum:
      - removed
      - scheduled
      - queued
      - running
      - success
      - restarting
      - failed
      - up_for_retry
      - up_for_reschedule
      - upstream_failed
      - skipped
      - deferred
      title: TaskInstanceState
      description: 'All possible states that a Task Instance can be in.


        Note that None is also allowed, so always use this in a type hint with Optional.'
