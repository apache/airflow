openapi: 3.1.0
info:
  title: Airflow API
  description: Airflow API. All endpoints located under ``/public`` can be used safely,
    are stable and backward compatible. Endpoints located under ``/ui`` are dedicated
    to the UI and are subject to breaking change depending on the need of the frontend.
    Users should not rely on those but use the public ones instead.
  version: 0.1.0
paths:
  /ui/next_run_assets/{dag_id}:
    get:
      tags:
      - Asset
      summary: Next Run Assets
      operationId: next_run_assets
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Next Run Assets
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /ui/dashboard/historical_metrics_data:
    get:
      tags:
      - Dashboard
      summary: Historical Metrics
      description: Return cluster activity historical metrics.
      operationId: historical_metrics
      parameters:
      - name: start_date
        in: query
        required: true
        schema:
          type: string
          title: Start Date
      - name: end_date
        in: query
        required: true
        schema:
          type: string
          title: End Date
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricalMetricDataResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/dags/:
    get:
      tags:
      - DAG
      summary: Get Dags
      description: Get all DAGs.
      operationId: get_dags
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: tags
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          title: Tags
      - name: owners
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          title: Owners
      - name: dag_id_pattern
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Dag Id Pattern
      - name: dag_display_name_pattern
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Dag Display Name Pattern
      - name: only_active
        in: query
        required: false
        schema:
          type: boolean
          default: true
          title: Only Active
      - name: paused
        in: query
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Paused
      - name: last_dag_run_state
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/DagRunState'
          - type: 'null'
          title: Last Dag Run State
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          default: dag_id
          title: Order By
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DAGCollectionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
      - DAG
      summary: Patch Dags
      description: Patch multiple DAGs.
      operationId: patch_dags
      parameters:
      - name: update_mask
        in: query
        required: false
        schema:
          anyOf:
          - type: array
            items:
              type: string
          - type: 'null'
          title: Update Mask
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: tags
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          title: Tags
      - name: owners
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          title: Owners
      - name: dag_id_pattern
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Dag Id Pattern
      - name: only_active
        in: query
        required: false
        schema:
          type: boolean
          default: true
          title: Only Active
      - name: paused
        in: query
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Paused
      - name: last_dag_run_state
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/DagRunState'
          - type: 'null'
          title: Last Dag Run State
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DAGPatchBody'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DAGCollectionResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/dags/{dag_id}:
    get:
      tags:
      - DAG
      summary: Get Dag
      description: Get basic information about a DAG.
      operationId: get_dag
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DAGResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unprocessable Entity
    patch:
      tags:
      - DAG
      summary: Patch Dag
      description: Patch the specific DAG.
      operationId: patch_dag
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Id
      - name: update_mask
        in: query
        required: false
        schema:
          anyOf:
          - type: array
            items:
              type: string
          - type: 'null'
          title: Update Mask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DAGPatchBody'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DAGResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - DAG
      summary: Delete Dag
      description: Delete the specific DAG.
      operationId: delete_dag
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unprocessable Entity
  /public/dags/{dag_id}/details:
    get:
      tags:
      - DAG
      summary: Get Dag Details
      description: Get details of DAG.
      operationId: get_dag_details
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DAGDetailsResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unprocessable Entity
  /public/connections/{connection_id}:
    delete:
      tags:
      - Connection
      summary: Delete Connection
      description: Delete a connection entry.
      operationId: delete_connection
      parameters:
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          title: Connection Id
      responses:
        '204':
          description: Successful Response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - Connection
      summary: Get Connection
      description: Get a connection entry.
      operationId: get_connection
      parameters:
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
          title: Connection Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/connections/:
    get:
      tags:
      - Connection
      summary: Get Connections
      description: Get all connection entries.
      operationId: get_connections
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          default: id
          title: Order By
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionCollectionResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/variables/{variable_key}:
    delete:
      tags:
      - Variable
      summary: Delete Variable
      description: Delete a variable entry.
      operationId: delete_variable
      parameters:
      - name: variable_key
        in: path
        required: true
        schema:
          type: string
          title: Variable Key
      responses:
        '204':
          description: Successful Response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - Variable
      summary: Get Variable
      description: Get a variable entry.
      operationId: get_variable
      parameters:
      - name: variable_key
        in: path
        required: true
        schema:
          type: string
          title: Variable Key
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
      - Variable
      summary: Patch Variable
      description: Update a variable by key.
      operationId: patch_variable
      parameters:
      - name: variable_key
        in: path
        required: true
        schema:
          type: string
          title: Variable Key
      - name: update_mask
        in: query
        required: false
        schema:
          anyOf:
          - type: array
            items:
              type: string
          - type: 'null'
          title: Update Mask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableBody'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/variables/:
    get:
      tags:
      - Variable
      summary: Get Variables
      description: Get all Variables entries.
      operationId: get_variables
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          default: id
          title: Order By
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableCollectionResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - Variable
      summary: Post Variable
      description: Create a variable.
      operationId: post_variable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableBody'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/dags/{dag_id}/dagRuns/{dag_run_id}:
    get:
      tags:
      - DagRun
      summary: Get Dag Run
      operationId: get_dag_run
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Id
      - name: dag_run_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Run Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DAGRunResponse'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - DagRun
      summary: Delete Dag Run
      description: Delete a DAG Run entry.
      operationId: delete_dag_run
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Id
      - name: dag_run_id
        in: path
        required: true
        schema:
          type: string
          title: Dag Run Id
      responses:
        '204':
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /public/monitor/health:
    get:
      tags:
      - Monitor
      summary: Get Health
      operationId: get_health
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthInfoSchema'
components:
  schemas:
    BaseInfoSchema:
      properties:
        status:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
      type: object
      required:
      - status
      title: BaseInfoSchema
      description: Base status field for metadatabase and scheduler.
    ConnectionCollectionResponse:
      properties:
        connections:
          items:
            $ref: '#/components/schemas/ConnectionResponse'
          type: array
          title: Connections
        total_entries:
          type: integer
          title: Total Entries
      type: object
      required:
      - connections
      - total_entries
      title: ConnectionCollectionResponse
      description: DAG Collection serializer for responses.
    ConnectionResponse:
      properties:
        connection_id:
          type: string
          title: Connection Id
        conn_type:
          type: string
          title: Conn Type
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        host:
          anyOf:
          - type: string
          - type: 'null'
          title: Host
        login:
          anyOf:
          - type: string
          - type: 'null'
          title: Login
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Schema
        port:
          anyOf:
          - type: integer
          - type: 'null'
          title: Port
        extra:
          anyOf:
          - type: string
          - type: 'null'
          title: Extra
      type: object
      required:
      - connection_id
      - conn_type
      - description
      - host
      - login
      - schema
      - port
      - extra
      title: ConnectionResponse
      description: Connection serializer for responses.
    DAGCollectionResponse:
      properties:
        dags:
          items:
            $ref: '#/components/schemas/DAGResponse'
          type: array
          title: Dags
        total_entries:
          type: integer
          title: Total Entries
      type: object
      required:
      - dags
      - total_entries
      title: DAGCollectionResponse
      description: DAG Collection serializer for responses.
    DAGDetailsResponse:
      properties:
        dag_id:
          type: string
          title: Dag Id
        dag_display_name:
          type: string
          title: Dag Display Name
        is_paused:
          type: boolean
          title: Is Paused
        is_active:
          type: boolean
          title: Is Active
        last_parsed_time:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Parsed Time
        last_pickled:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Pickled
        last_expired:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Expired
        scheduler_lock:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Scheduler Lock
        pickle_id:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Pickle Id
        default_view:
          anyOf:
          - type: string
          - type: 'null'
          title: Default View
        fileloc:
          type: string
          title: Fileloc
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        timetable_summary:
          anyOf:
          - type: string
          - type: 'null'
          title: Timetable Summary
        timetable_description:
          anyOf:
          - type: string
          - type: 'null'
          title: Timetable Description
        tags:
          items:
            $ref: '#/components/schemas/DagTagPydantic'
          type: array
          title: Tags
        max_active_tasks:
          type: integer
          title: Max Active Tasks
        max_active_runs:
          anyOf:
          - type: integer
          - type: 'null'
          title: Max Active Runs
        max_consecutive_failed_dag_runs:
          type: integer
          title: Max Consecutive Failed Dag Runs
        has_task_concurrency_limits:
          type: boolean
          title: Has Task Concurrency Limits
        has_import_errors:
          type: boolean
          title: Has Import Errors
        next_dagrun:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Next Dagrun
        next_dagrun_data_interval_start:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Next Dagrun Data Interval Start
        next_dagrun_data_interval_end:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Next Dagrun Data Interval End
        next_dagrun_create_after:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Next Dagrun Create After
        owners:
          items:
            type: string
          type: array
          title: Owners
        catchup:
          type: boolean
          title: Catchup
        dag_run_timeout:
          anyOf:
          - type: string
            format: duration
          - type: 'null'
          title: Dag Run Timeout
        dataset_expression:
          anyOf:
          - type: object
          - type: 'null'
          title: Dataset Expression
        doc_md:
          anyOf:
          - type: string
          - type: 'null'
          title: Doc Md
        start_date:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Start Date
        end_date:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: End Date
        is_paused_upon_creation:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Paused Upon Creation
        orientation:
          type: string
          title: Orientation
        params:
          anyOf:
          - type: object
          - type: 'null'
          title: Params
        render_template_as_native_obj:
          type: boolean
          title: Render Template As Native Obj
        template_search_path:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Template Search Path
        timezone:
          anyOf:
          - type: string
          - type: 'null'
          title: Timezone
        last_parsed:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Parsed
        file_token:
          type: string
          title: File Token
          description: Return file token.
          readOnly: true
        concurrency:
          type: integer
          title: Concurrency
          description: Return max_active_tasks as concurrency.
          readOnly: true
      type: object
      required:
      - dag_id
      - dag_display_name
      - is_paused
      - is_active
      - last_parsed_time
      - last_pickled
      - last_expired
      - scheduler_lock
      - pickle_id
      - default_view
      - fileloc
      - description
      - timetable_summary
      - timetable_description
      - tags
      - max_active_tasks
      - max_active_runs
      - max_consecutive_failed_dag_runs
      - has_task_concurrency_limits
      - has_import_errors
      - next_dagrun
      - next_dagrun_data_interval_start
      - next_dagrun_data_interval_end
      - next_dagrun_create_after
      - owners
      - catchup
      - dag_run_timeout
      - dataset_expression
      - doc_md
      - start_date
      - end_date
      - is_paused_upon_creation
      - orientation
      - params
      - render_template_as_native_obj
      - template_search_path
      - timezone
      - last_parsed
      - file_token
      - concurrency
      title: DAGDetailsResponse
      description: Specific serializer for DAG Details responses.
    DAGPatchBody:
      properties:
        is_paused:
          type: boolean
          title: Is Paused
      type: object
      required:
      - is_paused
      title: DAGPatchBody
      description: Dag Serializer for updatable bodies.
    DAGResponse:
      properties:
        dag_id:
          type: string
          title: Dag Id
        dag_display_name:
          type: string
          title: Dag Display Name
        is_paused:
          type: boolean
          title: Is Paused
        is_active:
          type: boolean
          title: Is Active
        last_parsed_time:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Parsed Time
        last_pickled:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Pickled
        last_expired:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Expired
        scheduler_lock:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Scheduler Lock
        pickle_id:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Pickle Id
        default_view:
          anyOf:
          - type: string
          - type: 'null'
          title: Default View
        fileloc:
          type: string
          title: Fileloc
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        timetable_summary:
          anyOf:
          - type: string
          - type: 'null'
          title: Timetable Summary
        timetable_description:
          anyOf:
          - type: string
          - type: 'null'
          title: Timetable Description
        tags:
          items:
            $ref: '#/components/schemas/DagTagPydantic'
          type: array
          title: Tags
        max_active_tasks:
          type: integer
          title: Max Active Tasks
        max_active_runs:
          anyOf:
          - type: integer
          - type: 'null'
          title: Max Active Runs
        max_consecutive_failed_dag_runs:
          type: integer
          title: Max Consecutive Failed Dag Runs
        has_task_concurrency_limits:
          type: boolean
          title: Has Task Concurrency Limits
        has_import_errors:
          type: boolean
          title: Has Import Errors
        next_dagrun:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Next Dagrun
        next_dagrun_data_interval_start:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Next Dagrun Data Interval Start
        next_dagrun_data_interval_end:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Next Dagrun Data Interval End
        next_dagrun_create_after:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Next Dagrun Create After
        owners:
          items:
            type: string
          type: array
          title: Owners
        file_token:
          type: string
          title: File Token
          description: Return file token.
          readOnly: true
      type: object
      required:
      - dag_id
      - dag_display_name
      - is_paused
      - is_active
      - last_parsed_time
      - last_pickled
      - last_expired
      - scheduler_lock
      - pickle_id
      - default_view
      - fileloc
      - description
      - timetable_summary
      - timetable_description
      - tags
      - max_active_tasks
      - max_active_runs
      - max_consecutive_failed_dag_runs
      - has_task_concurrency_limits
      - has_import_errors
      - next_dagrun
      - next_dagrun_data_interval_start
      - next_dagrun_data_interval_end
      - next_dagrun_create_after
      - owners
      - file_token
      title: DAGResponse
      description: DAG serializer for responses.
    DAGRunResponse:
      properties:
        run_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Run Id
        dag_id:
          type: string
          title: Dag Id
        logical_date:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Logical Date
        start_date:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Start Date
        end_date:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: End Date
        data_interval_start:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Data Interval Start
        data_interval_end:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Data Interval End
        last_scheduling_decision:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Scheduling Decision
        run_type:
          $ref: '#/components/schemas/DagRunType'
        state:
          $ref: '#/components/schemas/DagRunState'
        external_trigger:
          type: boolean
          title: External Trigger
        triggered_by:
          $ref: '#/components/schemas/DagRunTriggeredByType'
        conf:
          type: object
          title: Conf
        note:
          anyOf:
          - type: string
          - type: 'null'
          title: Note
      type: object
      required:
      - run_id
      - dag_id
      - logical_date
      - start_date
      - end_date
      - data_interval_start
      - data_interval_end
      - last_scheduling_decision
      - run_type
      - state
      - external_trigger
      - triggered_by
      - conf
      - note
      title: DAGRunResponse
      description: DAG Run serializer for responses.
    DAGRunStates:
      properties:
        queued:
          type: integer
          title: Queued
        running:
          type: integer
          title: Running
        success:
          type: integer
          title: Success
        failed:
          type: integer
          title: Failed
      type: object
      required:
      - queued
      - running
      - success
      - failed
      title: DAGRunStates
      description: DAG Run States for responses.
    DAGRunTypes:
      properties:
        backfill:
          type: integer
          title: Backfill
        scheduled:
          type: integer
          title: Scheduled
        manual:
          type: integer
          title: Manual
        dataset_triggered:
          type: integer
          title: Dataset Triggered
      type: object
      required:
      - backfill
      - scheduled
      - manual
      - dataset_triggered
      title: DAGRunTypes
      description: DAG Run Types for responses.
    DagProcessorInfoSchema:
      properties:
        status:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
        latest_dag_processor_heartbeat:
          anyOf:
          - type: string
          - type: 'null'
          title: Latest Dag Processor Heartbeat
      type: object
      required:
      - status
      - latest_dag_processor_heartbeat
      title: DagProcessorInfoSchema
      description: Schema for DagProcessor info.
    DagRunState:
      type: string
      enum:
      - queued
      - running
      - success
      - failed
      title: DagRunState
      description: 'All possible states that a DagRun can be in.


        These are "shared" with TaskInstanceState in some parts of the code,

        so please ensure that their values always match the ones with the

        same name in TaskInstanceState.'
    DagRunTriggeredByType:
      type: string
      enum:
      - cli
      - operator
      - rest_api
      - ui
      - test
      - timetable
      - dataset
      - backfill
      title: DagRunTriggeredByType
      description: Class with TriggeredBy types for DagRun.
    DagRunType:
      type: string
      enum:
      - backfill
      - scheduled
      - manual
      - dataset_triggered
      title: DagRunType
      description: Class with DagRun types.
    DagTagPydantic:
      properties:
        name:
          type: string
          title: Name
        dag_id:
          type: string
          title: Dag Id
      type: object
      required:
      - name
      - dag_id
      title: DagTagPydantic
      description: Serializable representation of the DagTag ORM SqlAlchemyModel used
        by internal API.
    HTTPExceptionResponse:
      properties:
        detail:
          anyOf:
          - type: string
          - type: object
          title: Detail
      type: object
      required:
      - detail
      title: HTTPExceptionResponse
      description: HTTPException Model used for error response.
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    HealthInfoSchema:
      properties:
        metadatabase:
          $ref: '#/components/schemas/BaseInfoSchema'
        scheduler:
          $ref: '#/components/schemas/SchedulerInfoSchema'
        triggerer:
          $ref: '#/components/schemas/TriggererInfoSchema'
        dag_processor:
          $ref: '#/components/schemas/DagProcessorInfoSchema'
      type: object
      required:
      - metadatabase
      - scheduler
      - triggerer
      - dag_processor
      title: HealthInfoSchema
      description: Schema for the Health endpoint.
    HistoricalMetricDataResponse:
      properties:
        dag_run_types:
          $ref: '#/components/schemas/DAGRunTypes'
        dag_run_states:
          $ref: '#/components/schemas/DAGRunStates'
        task_instance_states:
          $ref: '#/components/schemas/TaskInstanceState'
      type: object
      required:
      - dag_run_types
      - dag_run_states
      - task_instance_states
      title: HistoricalMetricDataResponse
      description: Historical Metric Data serializer for responses.
    SchedulerInfoSchema:
      properties:
        status:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
        latest_scheduler_heartbeat:
          anyOf:
          - type: string
          - type: 'null'
          title: Latest Scheduler Heartbeat
      type: object
      required:
      - status
      - latest_scheduler_heartbeat
      title: SchedulerInfoSchema
      description: Schema for Scheduler info.
    TaskInstanceState:
      properties:
        no_status:
          type: integer
          title: No Status
        removed:
          type: integer
          title: Removed
        scheduled:
          type: integer
          title: Scheduled
        queued:
          type: integer
          title: Queued
        running:
          type: integer
          title: Running
        success:
          type: integer
          title: Success
        restarting:
          type: integer
          title: Restarting
        failed:
          type: integer
          title: Failed
        up_for_retry:
          type: integer
          title: Up For Retry
        up_for_reschedule:
          type: integer
          title: Up For Reschedule
        upstream_failed:
          type: integer
          title: Upstream Failed
        skipped:
          type: integer
          title: Skipped
        deferred:
          type: integer
          title: Deferred
      type: object
      required:
      - no_status
      - removed
      - scheduled
      - queued
      - running
      - success
      - restarting
      - failed
      - up_for_retry
      - up_for_reschedule
      - upstream_failed
      - skipped
      - deferred
      title: TaskInstanceState
      description: TaskInstance serializer for responses.
    TriggererInfoSchema:
      properties:
        status:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
        latest_triggerer_heartbeat:
          anyOf:
          - type: string
          - type: 'null'
          title: Latest Triggerer Heartbeat
      type: object
      required:
      - status
      - latest_triggerer_heartbeat
      title: TriggererInfoSchema
      description: Schema for Triggerer info.
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
    VariableBody:
      properties:
        key:
          type: string
          title: Key
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        value:
          anyOf:
          - type: string
          - type: 'null'
          title: Value
      type: object
      required:
      - key
      - description
      - value
      title: VariableBody
      description: Variable serializer for bodies.
    VariableCollectionResponse:
      properties:
        variables:
          items:
            $ref: '#/components/schemas/VariableResponse'
          type: array
          title: Variables
        total_entries:
          type: integer
          title: Total Entries
      type: object
      required:
      - variables
      - total_entries
      title: VariableCollectionResponse
      description: Variable Collection serializer for responses.
    VariableResponse:
      properties:
        key:
          type: string
          title: Key
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        value:
          anyOf:
          - type: string
          - type: 'null'
          title: Value
      type: object
      required:
      - key
      - description
      - value
      title: VariableResponse
      description: Variable serializer for responses.
