"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class TaskInstanceKey(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DAG_ID_FIELD_NUMBER: builtins.int
    TASK_ID_FIELD_NUMBER: builtins.int
    RUN_ID_FIELD_NUMBER: builtins.int
    TRY_NUMBER_FIELD_NUMBER: builtins.int
    MAP_INDEX_FIELD_NUMBER: builtins.int
    dag_id: typing.Text
    task_id: typing.Text
    run_id: typing.Text
    try_number: builtins.int
    map_index: builtins.int
    def __init__(self,
        *,
        dag_id: typing.Text = ...,
        task_id: typing.Text = ...,
        run_id: typing.Text = ...,
        try_number: builtins.int = ...,
        map_index: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dag_id",b"dag_id","map_index",b"map_index","run_id",b"run_id","task_id",b"task_id","try_number",b"try_number"]) -> None: ...
global___TaskInstanceKey = TaskInstanceKey

class SimpleTaskInstance(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DAG_ID_FIELD_NUMBER: builtins.int
    TASK_ID_FIELD_NUMBER: builtins.int
    RUN_ID_FIELD_NUMBER: builtins.int
    START_DATE_FIELD_NUMBER: builtins.int
    END_DATE_FIELD_NUMBER: builtins.int
    TRY_NUMBER_FIELD_NUMBER: builtins.int
    MAP_INDEX_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    EXECUTOR_CONFIG_FIELD_NUMBER: builtins.int
    POOL_FIELD_NUMBER: builtins.int
    QUEUE_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    RUN_AS_USER_FIELD_NUMBER: builtins.int
    PRIORITY_WEIGHT_FIELD_NUMBER: builtins.int
    dag_id: typing.Text
    task_id: typing.Text
    run_id: typing.Text
    start_date: builtins.float
    end_date: builtins.float
    try_number: builtins.int
    map_index: builtins.int
    state: typing.Text
    executor_config: builtins.bytes
    pool: typing.Text
    queue: typing.Text
    @property
    def key(self) -> global___TaskInstanceKey: ...
    run_as_user: typing.Text
    priority_weight: builtins.int
    def __init__(self,
        *,
        dag_id: typing.Text = ...,
        task_id: typing.Text = ...,
        run_id: typing.Text = ...,
        start_date: typing.Optional[builtins.float] = ...,
        end_date: typing.Optional[builtins.float] = ...,
        try_number: builtins.int = ...,
        map_index: builtins.int = ...,
        state: typing.Text = ...,
        executor_config: builtins.bytes = ...,
        pool: typing.Text = ...,
        queue: typing.Text = ...,
        key: typing.Optional[global___TaskInstanceKey] = ...,
        run_as_user: typing.Optional[typing.Text] = ...,
        priority_weight: typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_end_date",b"_end_date","_priority_weight",b"_priority_weight","_run_as_user",b"_run_as_user","_start_date",b"_start_date","end_date",b"end_date","key",b"key","priority_weight",b"priority_weight","run_as_user",b"run_as_user","start_date",b"start_date"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_end_date",b"_end_date","_priority_weight",b"_priority_weight","_run_as_user",b"_run_as_user","_start_date",b"_start_date","dag_id",b"dag_id","end_date",b"end_date","executor_config",b"executor_config","key",b"key","map_index",b"map_index","pool",b"pool","priority_weight",b"priority_weight","queue",b"queue","run_as_user",b"run_as_user","run_id",b"run_id","start_date",b"start_date","state",b"state","task_id",b"task_id","try_number",b"try_number"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_end_date",b"_end_date"]) -> typing.Optional[typing_extensions.Literal["end_date"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_priority_weight",b"_priority_weight"]) -> typing.Optional[typing_extensions.Literal["priority_weight"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_run_as_user",b"_run_as_user"]) -> typing.Optional[typing_extensions.Literal["run_as_user"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_start_date",b"_start_date"]) -> typing.Optional[typing_extensions.Literal["start_date"]]: ...
global___SimpleTaskInstance = SimpleTaskInstance

class TaskCallbackRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FULL_FILEPATH_FIELD_NUMBER: builtins.int
    TASK_INSTANCE_FIELD_NUMBER: builtins.int
    IS_FAILURE_CALLBACK_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    full_filepath: typing.Text
    @property
    def task_instance(self) -> global___SimpleTaskInstance: ...
    is_failure_callback: builtins.bool
    message: typing.Text
    def __init__(self,
        *,
        full_filepath: typing.Text = ...,
        task_instance: typing.Optional[global___SimpleTaskInstance] = ...,
        is_failure_callback: typing.Optional[builtins.bool] = ...,
        message: typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_is_failure_callback",b"_is_failure_callback","_message",b"_message","is_failure_callback",b"is_failure_callback","message",b"message","task_instance",b"task_instance"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_is_failure_callback",b"_is_failure_callback","_message",b"_message","full_filepath",b"full_filepath","is_failure_callback",b"is_failure_callback","message",b"message","task_instance",b"task_instance"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_is_failure_callback",b"_is_failure_callback"]) -> typing.Optional[typing_extensions.Literal["is_failure_callback"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_message",b"_message"]) -> typing.Optional[typing_extensions.Literal["message"]]: ...
global___TaskCallbackRequest = TaskCallbackRequest

class DagCallbackRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FULL_FILEPATH_FIELD_NUMBER: builtins.int
    DAG_ID_FIELD_NUMBER: builtins.int
    RUN_ID_FIELD_NUMBER: builtins.int
    IS_FAILURE_CALLBACK_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    full_filepath: typing.Text
    dag_id: typing.Text
    run_id: typing.Text
    is_failure_callback: builtins.bool
    message: typing.Text
    def __init__(self,
        *,
        full_filepath: typing.Text = ...,
        dag_id: typing.Text = ...,
        run_id: typing.Text = ...,
        is_failure_callback: typing.Optional[builtins.bool] = ...,
        message: typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_is_failure_callback",b"_is_failure_callback","_message",b"_message","is_failure_callback",b"is_failure_callback","message",b"message"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_is_failure_callback",b"_is_failure_callback","_message",b"_message","dag_id",b"dag_id","full_filepath",b"full_filepath","is_failure_callback",b"is_failure_callback","message",b"message","run_id",b"run_id"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_is_failure_callback",b"_is_failure_callback"]) -> typing.Optional[typing_extensions.Literal["is_failure_callback"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_message",b"_message"]) -> typing.Optional[typing_extensions.Literal["message"]]: ...
global___DagCallbackRequest = DagCallbackRequest

class SlaCallbackRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FULL_FILEPATH_FIELD_NUMBER: builtins.int
    DAG_ID_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    full_filepath: typing.Text
    dag_id: typing.Text
    message: typing.Text
    def __init__(self,
        *,
        full_filepath: typing.Text = ...,
        dag_id: typing.Text = ...,
        message: typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_message",b"_message","message",b"message"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_message",b"_message","dag_id",b"dag_id","full_filepath",b"full_filepath","message",b"message"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_message",b"_message"]) -> typing.Optional[typing_extensions.Literal["message"]]: ...
global___SlaCallbackRequest = SlaCallbackRequest

class Callback(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TASK_REQUEST_FIELD_NUMBER: builtins.int
    DAG_REQUEST_FIELD_NUMBER: builtins.int
    SLA_REQUEST_FIELD_NUMBER: builtins.int
    @property
    def task_request(self) -> global___TaskCallbackRequest: ...
    @property
    def dag_request(self) -> global___DagCallbackRequest: ...
    @property
    def sla_request(self) -> global___SlaCallbackRequest: ...
    def __init__(self,
        *,
        task_request: typing.Optional[global___TaskCallbackRequest] = ...,
        dag_request: typing.Optional[global___DagCallbackRequest] = ...,
        sla_request: typing.Optional[global___SlaCallbackRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["callback_type",b"callback_type","dag_request",b"dag_request","sla_request",b"sla_request","task_request",b"task_request"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["callback_type",b"callback_type","dag_request",b"dag_request","sla_request",b"sla_request","task_request",b"task_request"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["callback_type",b"callback_type"]) -> typing.Optional[typing_extensions.Literal["task_request","dag_request","sla_request"]]: ...
global___Callback = Callback

class FileProcessorRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PATH_FIELD_NUMBER: builtins.int
    CALLBACKS_FIELD_NUMBER: builtins.int
    PICKLE_DAGS_FIELD_NUMBER: builtins.int
    path: typing.Text
    @property
    def callbacks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Callback]: ...
    pickle_dags: builtins.bool
    def __init__(self,
        *,
        path: typing.Text = ...,
        callbacks: typing.Optional[typing.Iterable[global___Callback]] = ...,
        pickle_dags: builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["callbacks",b"callbacks","path",b"path","pickle_dags",b"pickle_dags"]) -> None: ...
global___FileProcessorRequest = FileProcessorRequest

class FileProcessorResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DAGSFOUND_FIELD_NUMBER: builtins.int
    ERRORSFOUND_FIELD_NUMBER: builtins.int
    dagsFound: builtins.int
    errorsFound: builtins.int
    def __init__(self,
        *,
        dagsFound: builtins.int = ...,
        errorsFound: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dagsFound",b"dagsFound","errorsFound",b"errorsFound"]) -> None: ...
global___FileProcessorResponse = FileProcessorResponse
