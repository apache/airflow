#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

"""update unique constraint names

Revision ID: 050a9e234481
Revises: 0152485aedf5
Create Date: 2022-03-23 14:44:52.189181

"""

from alembic import op

# revision identifiers, used by Alembic.
revision = '050a9e234481'
down_revision = '0152485aedf5'
branch_labels = None
depends_on = None
airflow_version = '2.3.0'


def upgrade():
    """Apply fix for mysql"""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('connection', schema=None) as batch_op:
        batch_op.drop_index('unique_conn_id')
        batch_op.create_unique_constraint(batch_op.f('connection_conn_id_key'), ['conn_id'])

    with op.batch_alter_table('slot_pool', schema=None) as batch_op:
        batch_op.drop_index('pool')
        batch_op.create_unique_constraint(batch_op.f('slot_pool_pool_key'), ['pool'])

    with op.batch_alter_table('variable', schema=None) as batch_op:
        batch_op.drop_index('key')
        batch_op.create_unique_constraint(batch_op.f('variable_key_key'), ['key'])

    # ### end Alembic commands ###


def downgrade():
    """Unapply fix for mysql"""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('variable', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('variable_key_key'), type_='unique')
        batch_op.create_index('key', ['key'], unique=False)

    with op.batch_alter_table('slot_pool', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('slot_pool_pool_key'), type_='unique')
        batch_op.create_index('pool', ['pool'], unique=False)

    with op.batch_alter_table('connection', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('connection_conn_id_key'), type_='unique')
        batch_op.create_index('unique_conn_id', ['conn_id'], unique=False)

    # ### end Alembic commands ###
