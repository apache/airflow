#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

"""
make dagrun conf as json.

Revision ID: c9475b782ad4
Revises: eed27faa34e3
Create Date: 2024-11-26 06:34:43.882306

"""

from __future__ import annotations

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "c9475b782ad4"
down_revision = "eed27faa34e3"
branch_labels = None
depends_on = None
airflow_version = "3.0.0"


def upgrade():
    """Apply make dagrun conf as json."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("dag_run", schema=None) as batch_op:
        batch_op.alter_column(
            "conf",
            existing_type=postgresql.BYTEA(),
            type_=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), "postgresql"),
            existing_nullable=True,
        )

    # ### end Alembic commands ###


def downgrade():
    """Unapply make dagrun conf as json."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("dag_run", schema=None) as batch_op:
        batch_op.alter_column(
            "conf",
            existing_type=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), "postgresql"),
            type_=postgresql.BYTEA(),
            existing_nullable=True,
        )

    # ### end Alembic commands ###
