{#
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
#}
Core operators
==============
At the moment, two core operators supports OpenLineage. These operators function as a 'black box,'
capable of running any code, which might limit the extent of lineage extraction.

- :class:`~airflow.operators.python.PythonOperator` (via :class:`airflow.providers.openlineage.extractors.python.PythonExtractor`)
- :class:`~airflow.operators.bash.BashOperator` (via :class:`airflow.providers.openlineage.extractors.bash.BashExtractor`)


:class:`~airflow.providers.common.sql.operators.sql.SQLExecuteQueryOperator`
============================================================================

uses SQL parsing for lineage extraction. To extract unique data from each database type,
a dedicated Hook implementing OpenLineage methods is required. Currently, the following databases are supported:

{% for db_type, hook in db_hooks %}
- {{ db_type }} (via :class:`~{{ hook }}`)
{% endfor %}


Provider's operators
====================
The operators listed below from each provider are natively equipped with OpenLineage support.

{%for provider_name, provider_dict in providers.items() %}
{{ provider_name }}
{{ '"' * (provider_name|length) }}

{% for operator in provider_dict['operators'] %}
- :class:`~{{ operator }}`
{% endfor %}

{% endfor %}
