/*
 * Airflow API (Stable)
 * Apache Airflow management API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev@airflow.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.apache.airflow.client.api;

import org.apache.airflow.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.Variable;
import org.openapitools.client.model.VariableCollection;
import org.junit.Test;
import org.junit.Ignore;
import org.junit.Assert;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VariableApi
 */
public class VariableApiTest {

    private final VariableApi api = new VariableApi();

    /**
     * Delete variable
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteVariableTest() throws ApiException {
        //
        //String variableKey = null;
        //
        //api.deleteVariable(variableKey);

        // TODO: test validations
    }
    /**
     * Get a variable by key
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVariableTest() throws ApiException {
        //
        //String variableKey = null;
        //
        //Variable response = api.getVariable(variableKey);

        // TODO: test validations
    }
    /**
     * Get all variables
     *
     * The collection does not contain data. To get data, you must get a single entity.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVariablesTest() throws ApiException {
        //
        //Integer limit = null;
        //
        //Integer offset = null;
        //
        //VariableCollection response = api.getVariables(limit, offset);

        // TODO: test validations
    }
    /**
     * Update a variable by key
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchVariableTest() throws ApiException {
        //
        //String variableKey = null;
        //
        //Variable variable = null;
        //
        //List<String> updateMask = null;
        //
        //Variable response = api.patchVariable(variableKey, variable, updateMask);

        // TODO: test validations
    }
    /**
     * Create a variable
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postVariablesTest() throws ApiException {
        //
        //Variable variable = null;
        //
        //Variable response = api.postVariables(variable);

        // TODO: test validations
    }
}
