/*
 * Airflow API (Stable)
 * Apache Airflow management API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev@airflow.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Version information.
 */
@ApiModel(description = "Version information.")
@JsonPropertyOrder({
  VersionInfo.JSON_PROPERTY_VERSION,
  VersionInfo.JSON_PROPERTY_GIT_VERSION
})

public class VersionInfo {
  public static final String JSON_PROPERTY_VERSION = "version";
  private String version;

  public static final String JSON_PROPERTY_GIT_VERSION = "git_version";
  private JsonNullable<String> gitVersion = JsonNullable.<String>undefined();


  public VersionInfo version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * The version of Airflow
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The version of Airflow")
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersion() {
    return version;
  }


  public void setVersion(String version) {
    this.version = version;
  }


  public VersionInfo gitVersion(String gitVersion) {
    this.gitVersion = JsonNullable.<String>of(gitVersion);
    
    return this;
  }

   /**
   * The git version (including git commit hash)
   * @return gitVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The git version (including git commit hash)")
  @JsonIgnore

  public String getGitVersion() {
        return gitVersion.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GIT_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getGitVersion_JsonNullable() {
    return gitVersion;
  }
  
  @JsonProperty(JSON_PROPERTY_GIT_VERSION)
  public void setGitVersion_JsonNullable(JsonNullable<String> gitVersion) {
    this.gitVersion = gitVersion;
  }

  public void setGitVersion(String gitVersion) {
    this.gitVersion = JsonNullable.<String>of(gitVersion);
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VersionInfo versionInfo = (VersionInfo) o;
    return Objects.equals(this.version, versionInfo.version) &&
        Objects.equals(this.gitVersion, versionInfo.gitVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(version, gitVersion);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VersionInfo {\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    gitVersion: ").append(toIndentedString(gitVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

