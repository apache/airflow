# coding: utf-8

"""
    Airflow API (Stable)

    Apache Airflow management API.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: dev@airflow.apache.org
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import airflow_client
from airflow_client.models.dag_run_collection import DAGRunCollection  # noqa: E501
from airflow_client.rest import ApiException

class TestDAGRunCollection(unittest.TestCase):
    """DAGRunCollection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test DAGRunCollection
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = airflow_client.models.dag_run_collection.DAGRunCollection()  # noqa: E501
        if include_optional :
            return DAGRunCollection(
                dag_runs = [
                    airflow_client.models.dag_run.DAGRun(
                        dag_run_id = '0', 
                        dag_id = '0', 
                        execution_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        state = 'success', 
                        external_trigger = True, 
                        conf = airflow_client.models.conf.conf(), )
                    ]
            )
        else :
            return DAGRunCollection(
        )

    def testDAGRunCollection(self):
        """Test DAGRunCollection"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
