# coding: utf-8

"""
    Airflow API (Stable)

    Apache Airflow management API.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: dev@airflow.apache.org
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import airflow_client
from airflow_client.models.dag_detail import DAGDetail  # noqa: E501
from airflow_client.rest import ApiException

class TestDAGDetail(unittest.TestCase):
    """DAGDetail unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test DAGDetail
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = airflow_client.models.dag_detail.DAGDetail()  # noqa: E501
        if include_optional :
            return DAGDetail(
                dag_id = '0', 
                root_dag_id = '0', 
                is_paused = True, 
                is_subdag = True, 
                fileloc = '0', 
                file_token = '0', 
                owners = [
                    '0'
                    ], 
                description = '0', 
                schedule_interval = null, 
                tags = [
                    airflow_client.models.tag.Tag(
                        name = '0', )
                    ], 
                timezone = '0', 
                catchup = True, 
                orientation = '0', 
                concurrency = 1.337, 
                start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                dag_run_timeout = airflow_client.models.time_delta.TimeDelta(
                    __type = '0', 
                    days = 56, 
                    seconds = 56, 
                    microsecond = 56, ), 
                doc_md = '0', 
                default_view = '0'
            )
        else :
            return DAGDetail(
        )

    def testDAGDetail(self):
        """Test DAGDetail"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
