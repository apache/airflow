/**
 * Airflow API (Stable)
 * Apache Airflow management API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev@airflow.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SLAMiss from './SLAMiss';
import TaskState from './TaskState';

/**
 * The TaskInstance model module.
 * @module model/TaskInstance
 * @version 1.0.0
 */
class TaskInstance {
    /**
     * Constructs a new <code>TaskInstance</code>.
     * @alias module:model/TaskInstance
     */
    constructor() { 
        
        TaskInstance.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TaskInstance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TaskInstance} obj Optional instance to populate.
     * @return {module:model/TaskInstance} The populated <code>TaskInstance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TaskInstance();

            if (data.hasOwnProperty('task_id')) {
                obj['task_id'] = ApiClient.convertToType(data['task_id'], 'String');
            }
            if (data.hasOwnProperty('dag_id')) {
                obj['dag_id'] = ApiClient.convertToType(data['dag_id'], 'String');
            }
            if (data.hasOwnProperty('execution_date')) {
                obj['execution_date'] = ApiClient.convertToType(data['execution_date'], 'String');
            }
            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'String');
            }
            if (data.hasOwnProperty('end_date')) {
                obj['end_date'] = ApiClient.convertToType(data['end_date'], 'String');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = TaskState.constructFromObject(data['state']);
            }
            if (data.hasOwnProperty('try_number')) {
                obj['try_number'] = ApiClient.convertToType(data['try_number'], 'Number');
            }
            if (data.hasOwnProperty('max_tries')) {
                obj['max_tries'] = ApiClient.convertToType(data['max_tries'], 'Number');
            }
            if (data.hasOwnProperty('hostname')) {
                obj['hostname'] = ApiClient.convertToType(data['hostname'], 'String');
            }
            if (data.hasOwnProperty('unixname')) {
                obj['unixname'] = ApiClient.convertToType(data['unixname'], 'String');
            }
            if (data.hasOwnProperty('pool')) {
                obj['pool'] = ApiClient.convertToType(data['pool'], 'String');
            }
            if (data.hasOwnProperty('pool_slots')) {
                obj['pool_slots'] = ApiClient.convertToType(data['pool_slots'], 'Number');
            }
            if (data.hasOwnProperty('queue')) {
                obj['queue'] = ApiClient.convertToType(data['queue'], 'String');
            }
            if (data.hasOwnProperty('priority_weight')) {
                obj['priority_weight'] = ApiClient.convertToType(data['priority_weight'], 'Number');
            }
            if (data.hasOwnProperty('operator')) {
                obj['operator'] = ApiClient.convertToType(data['operator'], 'String');
            }
            if (data.hasOwnProperty('queued_when')) {
                obj['queued_when'] = ApiClient.convertToType(data['queued_when'], 'String');
            }
            if (data.hasOwnProperty('pid')) {
                obj['pid'] = ApiClient.convertToType(data['pid'], 'Number');
            }
            if (data.hasOwnProperty('executor_config')) {
                obj['executor_config'] = ApiClient.convertToType(data['executor_config'], 'String');
            }
            if (data.hasOwnProperty('sla_miss')) {
                obj['sla_miss'] = SLAMiss.constructFromObject(data['sla_miss']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} task_id
 */
TaskInstance.prototype['task_id'] = undefined;

/**
 * @member {String} dag_id
 */
TaskInstance.prototype['dag_id'] = undefined;

/**
 * @member {String} execution_date
 */
TaskInstance.prototype['execution_date'] = undefined;

/**
 * @member {String} start_date
 */
TaskInstance.prototype['start_date'] = undefined;

/**
 * @member {String} end_date
 */
TaskInstance.prototype['end_date'] = undefined;

/**
 * @member {Number} duration
 */
TaskInstance.prototype['duration'] = undefined;

/**
 * @member {module:model/TaskState} state
 */
TaskInstance.prototype['state'] = undefined;

/**
 * @member {Number} try_number
 */
TaskInstance.prototype['try_number'] = undefined;

/**
 * @member {Number} max_tries
 */
TaskInstance.prototype['max_tries'] = undefined;

/**
 * @member {String} hostname
 */
TaskInstance.prototype['hostname'] = undefined;

/**
 * @member {String} unixname
 */
TaskInstance.prototype['unixname'] = undefined;

/**
 * @member {String} pool
 */
TaskInstance.prototype['pool'] = undefined;

/**
 * @member {Number} pool_slots
 */
TaskInstance.prototype['pool_slots'] = undefined;

/**
 * @member {String} queue
 */
TaskInstance.prototype['queue'] = undefined;

/**
 * @member {Number} priority_weight
 */
TaskInstance.prototype['priority_weight'] = undefined;

/**
 * @member {String} operator
 */
TaskInstance.prototype['operator'] = undefined;

/**
 * @member {String} queued_when
 */
TaskInstance.prototype['queued_when'] = undefined;

/**
 * @member {Number} pid
 */
TaskInstance.prototype['pid'] = undefined;

/**
 * @member {String} executor_config
 */
TaskInstance.prototype['executor_config'] = undefined;

/**
 * @member {module:model/SLAMiss} sla_miss
 */
TaskInstance.prototype['sla_miss'] = undefined;






export default TaskInstance;

