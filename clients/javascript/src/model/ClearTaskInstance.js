/**
 * Airflow API (Stable)
 * Apache Airflow management API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev@airflow.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ClearTaskInstance model module.
 * @module model/ClearTaskInstance
 * @version 1.0.0
 */
class ClearTaskInstance {
    /**
     * Constructs a new <code>ClearTaskInstance</code>.
     * @alias module:model/ClearTaskInstance
     */
    constructor() { 
        
        ClearTaskInstance.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClearTaskInstance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClearTaskInstance} obj Optional instance to populate.
     * @return {module:model/ClearTaskInstance} The populated <code>ClearTaskInstance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClearTaskInstance();

            if (data.hasOwnProperty('dry_run')) {
                obj['dry_run'] = ApiClient.convertToType(data['dry_run'], 'Boolean');
            }
            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'String');
            }
            if (data.hasOwnProperty('end_date')) {
                obj['end_date'] = ApiClient.convertToType(data['end_date'], 'String');
            }
            if (data.hasOwnProperty('only_failed')) {
                obj['only_failed'] = ApiClient.convertToType(data['only_failed'], 'String');
            }
            if (data.hasOwnProperty('only_running')) {
                obj['only_running'] = ApiClient.convertToType(data['only_running'], 'String');
            }
            if (data.hasOwnProperty('include_subdags')) {
                obj['include_subdags'] = ApiClient.convertToType(data['include_subdags'], 'Boolean');
            }
            if (data.hasOwnProperty('include_parentdag')) {
                obj['include_parentdag'] = ApiClient.convertToType(data['include_parentdag'], 'Boolean');
            }
            if (data.hasOwnProperty('reset_dag_runs')) {
                obj['reset_dag_runs'] = ApiClient.convertToType(data['reset_dag_runs'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * If set, don't actually run this operation. The response will contain a list of task instances planned to be cleaned, but not modified in any way. 
 * @member {Boolean} dry_run
 * @default true
 */
ClearTaskInstance.prototype['dry_run'] = true;

/**
 * The minimum execution date to clear.
 * @member {String} start_date
 */
ClearTaskInstance.prototype['start_date'] = undefined;

/**
 * The maximum execution date to clear.
 * @member {String} end_date
 */
ClearTaskInstance.prototype['end_date'] = undefined;

/**
 * Only clear failed tasks.
 * @member {String} only_failed
 */
ClearTaskInstance.prototype['only_failed'] = undefined;

/**
 * Only clear running tasks.
 * @member {String} only_running
 */
ClearTaskInstance.prototype['only_running'] = undefined;

/**
 * Clear tasks in subdags and clear external tasks indicated by ExternalTaskMarker.
 * @member {Boolean} include_subdags
 */
ClearTaskInstance.prototype['include_subdags'] = undefined;

/**
 * Clear tasks in the parent dag of the subdag.
 * @member {Boolean} include_parentdag
 */
ClearTaskInstance.prototype['include_parentdag'] = undefined;

/**
 * Set state of DAG Runs to RUNNING.
 * @member {Boolean} reset_dag_runs
 */
ClearTaskInstance.prototype['reset_dag_runs'] = undefined;






export default ClearTaskInstance;

