/**
 * Airflow API (Stable)
 * Apache Airflow management API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev@airflow.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TimeDelta from './TimeDelta';

/**
 * The DAGDetailAllOf model module.
 * @module model/DAGDetailAllOf
 * @version 1.0.0
 */
class DAGDetailAllOf {
    /**
     * Constructs a new <code>DAGDetailAllOf</code>.
     * @alias module:model/DAGDetailAllOf
     */
    constructor() { 
        
        DAGDetailAllOf.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DAGDetailAllOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DAGDetailAllOf} obj Optional instance to populate.
     * @return {module:model/DAGDetailAllOf} The populated <code>DAGDetailAllOf</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DAGDetailAllOf();

            if (data.hasOwnProperty('timezone')) {
                obj['timezone'] = ApiClient.convertToType(data['timezone'], 'String');
            }
            if (data.hasOwnProperty('catchup')) {
                obj['catchup'] = ApiClient.convertToType(data['catchup'], 'Boolean');
            }
            if (data.hasOwnProperty('orientation')) {
                obj['orientation'] = ApiClient.convertToType(data['orientation'], 'String');
            }
            if (data.hasOwnProperty('concurrency')) {
                obj['concurrency'] = ApiClient.convertToType(data['concurrency'], 'Number');
            }
            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'Date');
            }
            if (data.hasOwnProperty('dag_run_timeout')) {
                obj['dag_run_timeout'] = TimeDelta.constructFromObject(data['dag_run_timeout']);
            }
            if (data.hasOwnProperty('doc_md')) {
                obj['doc_md'] = ApiClient.convertToType(data['doc_md'], 'String');
            }
            if (data.hasOwnProperty('default_view')) {
                obj['default_view'] = ApiClient.convertToType(data['default_view'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} timezone
 */
DAGDetailAllOf.prototype['timezone'] = undefined;

/**
 * @member {Boolean} catchup
 */
DAGDetailAllOf.prototype['catchup'] = undefined;

/**
 * @member {String} orientation
 */
DAGDetailAllOf.prototype['orientation'] = undefined;

/**
 * @member {Number} concurrency
 */
DAGDetailAllOf.prototype['concurrency'] = undefined;

/**
 * @member {Date} start_date
 */
DAGDetailAllOf.prototype['start_date'] = undefined;

/**
 * @member {module:model/TimeDelta} dag_run_timeout
 */
DAGDetailAllOf.prototype['dag_run_timeout'] = undefined;

/**
 * @member {String} doc_md
 */
DAGDetailAllOf.prototype['doc_md'] = undefined;

/**
 * @member {String} default_view
 */
DAGDetailAllOf.prototype['default_view'] = undefined;






export default DAGDetailAllOf;

