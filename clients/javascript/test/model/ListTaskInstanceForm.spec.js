/**
 * Airflow API (Stable)
 * Apache Airflow management API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev@airflow.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AirflowApiStable);
  }
}(this, function(expect, AirflowApiStable) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AirflowApiStable.ListTaskInstanceForm();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ListTaskInstanceForm', function() {
    it('should create an instance of ListTaskInstanceForm', function() {
      // uncomment below and update the code to test ListTaskInstanceForm
      //var instane = new AirflowApiStable.ListTaskInstanceForm();
      //expect(instance).to.be.a(AirflowApiStable.ListTaskInstanceForm);
    });

    it('should have the property dagIds (base name: "dag_ids")', function() {
      // uncomment below and update the code to test the property dagIds
      //var instane = new AirflowApiStable.ListTaskInstanceForm();
      //expect(instance).to.be();
    });

    it('should have the property executionDateGte (base name: "execution_date_gte")', function() {
      // uncomment below and update the code to test the property executionDateGte
      //var instane = new AirflowApiStable.ListTaskInstanceForm();
      //expect(instance).to.be();
    });

    it('should have the property executionDateLte (base name: "execution_date_lte")', function() {
      // uncomment below and update the code to test the property executionDateLte
      //var instane = new AirflowApiStable.ListTaskInstanceForm();
      //expect(instance).to.be();
    });

    it('should have the property startDateGte (base name: "start_date_gte")', function() {
      // uncomment below and update the code to test the property startDateGte
      //var instane = new AirflowApiStable.ListTaskInstanceForm();
      //expect(instance).to.be();
    });

    it('should have the property startDateLte (base name: "start_date_lte")', function() {
      // uncomment below and update the code to test the property startDateLte
      //var instane = new AirflowApiStable.ListTaskInstanceForm();
      //expect(instance).to.be();
    });

    it('should have the property endDateGte (base name: "end_date_gte")', function() {
      // uncomment below and update the code to test the property endDateGte
      //var instane = new AirflowApiStable.ListTaskInstanceForm();
      //expect(instance).to.be();
    });

    it('should have the property endDateLte (base name: "end_date_lte")', function() {
      // uncomment below and update the code to test the property endDateLte
      //var instane = new AirflowApiStable.ListTaskInstanceForm();
      //expect(instance).to.be();
    });

    it('should have the property durationGte (base name: "duration_gte")', function() {
      // uncomment below and update the code to test the property durationGte
      //var instane = new AirflowApiStable.ListTaskInstanceForm();
      //expect(instance).to.be();
    });

    it('should have the property durationLte (base name: "duration_lte")', function() {
      // uncomment below and update the code to test the property durationLte
      //var instane = new AirflowApiStable.ListTaskInstanceForm();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "State")', function() {
      // uncomment below and update the code to test the property state
      //var instane = new AirflowApiStable.ListTaskInstanceForm();
      //expect(instance).to.be();
    });

    it('should have the property pool (base name: "Pool")', function() {
      // uncomment below and update the code to test the property pool
      //var instane = new AirflowApiStable.ListTaskInstanceForm();
      //expect(instance).to.be();
    });

    it('should have the property queue (base name: "Queue")', function() {
      // uncomment below and update the code to test the property queue
      //var instane = new AirflowApiStable.ListTaskInstanceForm();
      //expect(instance).to.be();
    });

  });

}));
