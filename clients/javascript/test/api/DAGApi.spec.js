/**
 * Airflow API (Stable)
 * Apache Airflow management API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev@airflow.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AirflowApiStable);
  }
}(this, function(expect, AirflowApiStable) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AirflowApiStable.DAGApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DAGApi', function() {
    describe('airflowApiConnexionEndpointsDagEndpointGetDag', function() {
      it('should call airflowApiConnexionEndpointsDagEndpointGetDag successfully', function(done) {
        //uncomment below and update the code to test airflowApiConnexionEndpointsDagEndpointGetDag
        //instance.airflowApiConnexionEndpointsDagEndpointGetDag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('airflowApiConnexionEndpointsDagEndpointGetDagDetails', function() {
      it('should call airflowApiConnexionEndpointsDagEndpointGetDagDetails successfully', function(done) {
        //uncomment below and update the code to test airflowApiConnexionEndpointsDagEndpointGetDagDetails
        //instance.airflowApiConnexionEndpointsDagEndpointGetDagDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('airflowApiConnexionEndpointsDagEndpointGetDags', function() {
      it('should call airflowApiConnexionEndpointsDagEndpointGetDags successfully', function(done) {
        //uncomment below and update the code to test airflowApiConnexionEndpointsDagEndpointGetDags
        //instance.airflowApiConnexionEndpointsDagEndpointGetDags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('airflowApiConnexionEndpointsDagEndpointPatchDag', function() {
      it('should call airflowApiConnexionEndpointsDagEndpointPatchDag successfully', function(done) {
        //uncomment below and update the code to test airflowApiConnexionEndpointsDagEndpointPatchDag
        //instance.airflowApiConnexionEndpointsDagEndpointPatchDag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('airflowApiConnexionEndpointsDagSourceEndpointGetDagSource', function() {
      it('should call airflowApiConnexionEndpointsDagSourceEndpointGetDagSource successfully', function(done) {
        //uncomment below and update the code to test airflowApiConnexionEndpointsDagSourceEndpointGetDagSource
        //instance.airflowApiConnexionEndpointsDagSourceEndpointGetDagSource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('airflowApiConnexionEndpointsTaskEndpointGetTask', function() {
      it('should call airflowApiConnexionEndpointsTaskEndpointGetTask successfully', function(done) {
        //uncomment below and update the code to test airflowApiConnexionEndpointsTaskEndpointGetTask
        //instance.airflowApiConnexionEndpointsTaskEndpointGetTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('airflowApiConnexionEndpointsTaskEndpointGetTasks', function() {
      it('should call airflowApiConnexionEndpointsTaskEndpointGetTasks successfully', function(done) {
        //uncomment below and update the code to test airflowApiConnexionEndpointsTaskEndpointGetTasks
        //instance.airflowApiConnexionEndpointsTaskEndpointGetTasks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('airflowApiConnexionEndpointsTaskInstanceEndpointPostClearTaskInstances', function() {
      it('should call airflowApiConnexionEndpointsTaskInstanceEndpointPostClearTaskInstances successfully', function(done) {
        //uncomment below and update the code to test airflowApiConnexionEndpointsTaskInstanceEndpointPostClearTaskInstances
        //instance.airflowApiConnexionEndpointsTaskInstanceEndpointPostClearTaskInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
