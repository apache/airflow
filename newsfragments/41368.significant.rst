Support for deprecated core imports removed

Support for importing classes etc from the following locations was deprecated at various times during Airflow 2s lifecycle, and has been removed:

- ``airflow.executors``
- ``airflow.hooks``
- ``airflow.macros``
- ``airflow.operators``
- ``airflow.sensors``

Instead, import from the right provider or more specific module instead.
For example, instead of ``from airflow.sensors import TimeDeltaSensor``, use ``from airflow.sensors.time_delta import TimeDeltaSensor``.

* Types of change

  * [x] Dag changes
  * [ ] Config changes
  * [ ] API changes
  * [ ] CLI changes
  * [ ] Behaviour changes
  * [ ] Plugin changes
  * [ ] Dependency changes
  * [ ] Code interface changes

* Migration rules needed

  * ruff

    * AIR302

      * [x] ``airflow.operators.bash_operator.BashOperator`` → ``airflow.operators.bash.BashOperator``
      * [x] ``airflow.operators.branch_operator.BaseBranchOperator`` → ``airflow.operators.branch.BaseBranchOperator``
      * [ ] ``airflow.operators....EmptyOperator`` → ``airflow.providers.standard.operators.empty.EmptyOperator``
      * [ ] ``airflow.operators....DummyOperator`` → ``airflow.providers.standard.operators.empty.EmptyOperator``
      * [ ] ``airflow.operators.dummy_operator.EmptyOperator`` → ``airflow.providers.standard.operators.empty.EmptyOperator``
      * [ ] ``airflow.operators.dummy_operator.DummyOperator`` → ``airflow.providers.standard.operators.empty.EmptyOperator``
      * [x] ``airflow.operators.email_operator.EmailOperator`` → ``airflow.operators.email.EmailOperator``
      * [x] ``airflow.sensors.base_sensor_operator.BaseSensorOperator`` → ``airflow.sensors.base.BaseSensorOperator``
      * [x] ``airflow.sensors.date_time_sensor.DateTimeSensor`` → ``airflow.sensors.date_time.DateTimeSensor``
      * [x] ``airflow.sensors.external_task_sensor.ExternalTaskMarker`` → ``airflow.sensors.external_task.ExternalTaskMarker``
      * [x] ``airflow.sensors.external_task_sensor.ExternalTaskSensor`` → ``airflow.sensors.external_task.ExternalTaskSensor``
      * [x] ``airflow.sensors.external_task_sensor.ExternalTaskSensorLink`` → ``airflow.sensors.external_task.ExternalTaskSensorLink``
      * [x] ``airflow.sensors.time_delta_sensor.TimeDeltaSensor`` → ``airflow.sensors.time_delta.TimeDeltaSensor``
      * [x] ``airflow.hooks.base_hook.BaseHook`` → ``airflow.hooks.base.BaseHook``
      * [x] ``airflow.operators.dagrun_operator.TriggerDagRunLink`` → ``airflow.operators.trigger_dagrun.TriggerDagRunLink``
      * [x] ``airflow.operators.dagrun_operator.TriggerDagRunOperator`` → ``airflow.operators.trigger_dagrun.TriggerDagRunOperator``
      * [x] ``airflow.operators.python_operator.BranchPythonOperator`` → ``airflow.operators.python.BranchPythonOperator``
      * [x] ``airflow.operators.python_operator.PythonOperator`` → ``airflow.operators.python.PythonOperator``
      * [x] ``airflow.operators.python_operator.PythonVirtualenvOperator`` → ``airflow.operators.python.PythonVirtualenvOperator``
      * [x] ``airflow.operators.python_operator.ShortCircuitOperator`` → ``airflow.operators.python.ShortCircuitOperator``
      * [x] ``airflow.operators.latest_only_operator.LatestOnlyOperator`` → ``airflow.operators.latest_only.LatestOnlyOperator``

    * AIR303

      * [x] ``airflow.executors.celery_executor.CeleryExecutor`` → ``airflow.providers.celery.executors.celery_executor.CeleryExecutor``
      * [x] ``airflow.executors.celery_kubernetes_executor.CeleryKubernetesExecutor`` → ``airflow.providers.celery.executors.celery_kubernetes_executor.CeleryKubernetesExecutor``
      * [x] ``airflow.executors.dask_executor.DaskExecutor`` → ``airflow.providers.daskexecutor.executors.dask_executor.DaskExecutor``
      * [x] ``airflow.executors.kubernetes_executor.KubernetesExecutor`` → ``airflow.providers.cncf.kubernetes.executors.kubernetes_executor.KubernetesExecutor``
      * [x] ``airflow.executors.kubernetes_executor_utils.AirflowKubernetesScheduler`` → ``airflow.providers.cncf.kubernetes.executors.kubernetes_executor_utils.AirflowKubernetesScheduler``
      * [x] ``airflow.executors.kubernetes_executor_utils.KubernetesJobWatcher`` → ``airflow.providers.cncf.kubernetes.executors.kubernetes_executor_utils.KubernetesJobWatcher``
      * [x] ``airflow.executors.kubernetes_executor_utils.ResourceVersion`` → ``airflow.providers.cncf.kubernetes.executors.kubernetes_executor_utils.ResourceVersion``
      * [x] ``airflow.executors.local_kubernetes_executor.LocalKubernetesExecutor`` → ``airflow.providers.cncf.kubernetes.executors.LocalKubernetesExecutor``
      * [x] ``airflow.hooks.S3_hook.S3Hook`` → ``airflow.providers.amazon.aws.hooks.s3.S3Hook``
      * [x] ``airflow.hooks.S3_hook.provide_bucket_name`` → ``airflow.providers.amazon.aws.hooks.s3.provide_bucket_name``
      * [x] ``airflow.hooks.base_hook.BaseHook`` → ``airflow.hooks.base.BaseHook``
      * [x] ``airflow.hooks.dbapi_hook.DbApiHook`` → ``airflow.providers.common.sql.hooks.sql.DbApiHook``
      * [x] ``airflow.hooks.docker_hook.DockerHook`` → ``airflow.providers.docker.hooks.docker.DockerHook``
      * [x] ``airflow.hooks.druid_hook.DruidDbApiHook`` → ``airflow.providers.apache.druid.hooks.druid.DruidDbApiHook``
      * [x] ``airflow.hooks.druid_hook.DruidHook`` → ``airflow.providers.apache.druid.hooks.druid.DruidHook``
      * [x] ``airflow.hooks.hive_hooks.HIVE_QUEUE_PRIORITIES`` → ``airflow.providers.apache.hive.hooks.hive.HIVE_QUEUE_PRIORITIES``
      * [x] ``airflow.hooks.hive_hooks.HiveCliHook`` → ``airflow.providers.apache.hive.hooks.hive.HiveCliHook``
      * [x] ``airflow.hooks.hive_hooks.HiveMetastoreHook`` → ``airflow.providers.apache.hive.hooks.hive.HiveMetastoreHook``
      * [x] ``airflow.hooks.hive_hooks.HiveServer2Hook`` → ``airflow.providers.apache.hive.hooks.hive.HiveServer2Hook``
      * [x] ``airflow.hooks.http_hook.HttpHook`` → ``airflow.providers.http.hooks.http.HttpHook``
      * [x] ``airflow.hooks.jdbc_hook.JdbcHook`` → ``airflow.providers.jdbc.hooks.jdbc.JdbcHook``
      * [x] ``airflow.hooks.jdbc_hook.jaydebeapi`` → ``airflow.providers.jdbc.hooks.jdbc.jaydebeapi``
      * [x] ``airflow.hooks.mssql_hook.MsSqlHook`` → ``airflow.providers.microsoft.mssql.hooks.mssql.MsSqlHook``
      * [x] ``airflow.hooks.mysql_hook.MySqlHook`` → ``airflow.providers.mysql.hooks.mysql.MySqlHook``
      * [x] ``airflow.hooks.oracle_hook.OracleHook`` → ``airflow.providers.oracle.hooks.oracle.OracleHook``
      * [x] ``airflow.hooks.pig_hook.PigCliHook`` → ``airflow.providers.apache.pig.hooks.pig.PigCliHook``
      * [x] ``airflow.hooks.postgres_hook.PostgresHook`` → ``airflow.providers.postgres.hooks.postgres.PostgresHook``
      * [x] ``airflow.hooks.presto_hook.PrestoHook`` → ``airflow.providers.presto.hooks.presto.PrestoHook``
      * [x] ``airflow.hooks.samba_hook.SambaHook`` → ``airflow.providers.samba.hooks.samba.SambaHook``
      * [x] ``airflow.hooks.slack_hook.SlackHook`` → ``airflow.providers.slack.hooks.slack.SlackHook``
      * [x] ``airflow.hooks.sqlite_hook.SqliteHook`` → ``airflow.providers.sqlite.hooks.sqlite.SqliteHook``
      * [x] ``airflow.hooks.webhdfs_hook.WebHDFSHook`` → ``airflow.providers.apache.hdfs.hooks.webhdfs.WebHDFSHook``
      * [x] ``airflow.hooks.zendesk_hook.ZendeskHook`` → ``airflow.providers.zendesk.hooks.zendesk.ZendeskHook``
      * [x] ``airflow.operators.check_operator.SQLCheckOperator`` → ``airflow.providers.common.sql.operators.sql.SQLCheckOperator``
      * [x] ``airflow.operators.check_operator.SQLIntervalCheckOperator`` → ``airflow.providers.common.sql.operators.sql.SQLIntervalCheckOperator``
      * [x] ``airflow.operators.check_operator.SQLThresholdCheckOperator`` → ``airflow.providers.common.sql.operators.sql.SQLThresholdCheckOperator``
      * [x] ``airflow.operators.check_operator.SQLValueCheckOperator`` → ``airflow.providers.common.sql.operators.sql.SQLValueCheckOperator``
      * [x] ``airflow.operators.check_operator.CheckOperator`` → ``airflow.providers.common.sql.operators.sql.SQLCheckOperator``
      * [x] ``airflow.operators.check_operator.IntervalCheckOperator`` → ``airflow.providers.common.sql.operators.sql.SQLIntervalCheckOperator``
      * [x] ``airflow.operators.check_operator.ThresholdCheckOperator`` → ``airflow.providers.common.sql.operators.sql.SQLThresholdCheckOperator``
      * [x] ``airflow.operators.check_operator.ValueCheckOperator`` → ``airflow.providers.common.sql.operators.sql.SQLValueCheckOperator``
      * [x] ``airflow.operators.dagrun_operator.TriggerDagRunLink`` → ``airflow.operators.trigger_dagrun.TriggerDagRunLink``
      * [x] ``airflow.operators.dagrun_operator.TriggerDagRunOperator`` → ``airflow.operators.trigger_dagrun.TriggerDagRunOperator``
      * [x] ``airflow.operators.docker_operator.DockerOperator`` → ``airflow.providers.docker.operators.docker.DockerOperator``
      * [x] ``airflow.operators.druid_check_operator.DruidCheckOperator`` → ``airflow.providers.apache.druid.operators.druid_check.DruidCheckOperator``
      * [x] ``airflow.operators.gcs_to_s3.GCSToS3Operator`` → ``airflow.providers.amazon.aws.transfers.gcs_to_s3.GCSToS3Operator``
      * [x] ``airflow.operators.google_api_to_s3_transfer.GoogleApiToS3Operator`` → ``airflow.providers.amazon.aws.transfers.google_api_to_s3.GoogleApiToS3Operator``
      * [x] ``airflow.operators.google_api_to_s3_transfer.GoogleApiToS3Transfer`` → ``airflow.providers.amazon.aws.transfers.google_api_to_s3.GoogleApiToS3Operator``
      * [x] ``airflow.operators.hive_operator.HiveOperator`` → ``airflow.providers.apache.hive.operators.hive.HiveOperator``
      * [x] ``airflow.operators.hive_stats_operator.HiveStatsCollectionOperator`` → ``airflow.providers.apache.hive.operators.hive_stats.HiveStatsCollectionOperator``
      * [x] ``airflow.operators.hive_to_druid.HiveToDruidOperator`` → ``airflow.providers.apache.druid.transfers.hive_to_druid.HiveToDruidOperator``
      * [x] ``airflow.operators.hive_to_druid.HiveToDruidTransfer`` → ``airflow.providers.apache.druid.transfers.hive_to_druid.HiveToDruidOperator``
      * [x] ``airflow.operators.hive_to_mysql.HiveToMySqlOperator`` → ``airflow.providers.apache.hive.transfers.hive_to_mysql.HiveToMySqlOperator``
      * [x] ``airflow.operators.hive_to_mysql.HiveToMySqlTransfer`` → ``airflow.providers.apache.hive.transfers.hive_to_mysql.HiveToMySqlOperator``
      * [x] ``airflow.operators.local_kubernetes_executor.HiveToSambaOperator`` → ``airflow.providers.apache.hive.transfers.hive_to_samba.HiveToSambaOperator``
      * [x] ``airflow.operators.hive_to_samba_operator.SimpleHttpOperator`` → ``airflow.providers.http.operators.http.SimpleHttpOperator``
      * [x] ``airflow.operators.jdbc_operator.JdbcOperator`` → ``airflow.providers.jdbc.operators.jdbc.JdbcOperator``
      * [x] ``airflow.operators.latest_only_operator.LatestOnlyOperator`` → ``airflow.operators.latest_only.LatestOnlyOperator``
      * [x] ``airflow.operators.mssql_operator.MsSqlOperator`` → ``airflow.providers.microsoft.mssql.operators.mssql.MsSqlOperator``
      * [x] ``airflow.operators.mssql_to_hive.MsSqlToHiveOperator`` → ``airflow.providers.apache.hive.transfers.mssql_to_hive.MsSqlToHiveOperator``
      * [x] ``airflow.operators.mssql_to_hive.MsSqlToHiveTransfer`` → ``airflow.providers.apache.hive.transfers.mssql_to_hive.MsSqlToHiveOperator``
      * [x] ``airflow.operators.mysql_operator.MySqlOperator`` → ``airflow.providers.mysql.operators.mysql.MySqlOperator``
      * [x] ``airflow.operators.mysql_to_hive.MySqlToHiveOperator`` → ``airflow.providers.apache.hive.transfers.mysql_to_hive.MySqlToHiveOperator``
      * [x] ``airflow.operators.mysql_to_hive.MySqlToHiveTransfer`` → ``airflow.providers.apache.hive.transfers.mysql_to_hive.MySqlToHiveOperator``
      * [x] ``airflow.operators.oracle_operator.OracleOperator`` → ``airflow.providers.oracle.operators.oracle.OracleOperator``
      * [x] ``airflow.operators.papermill_operator.PapermillOperator`` → ``airflow.providers.papermill.operators.papermill.PapermillOperator``
      * [x] ``airflow.operators.pig_operator.PigOperator`` → ``airflow.providers.apache.pig.operators.pig.PigOperator``
      * [x] ``airflow.operators.postgres_operator.Mapping`` → ``airflow.providers.postgres.operators.postgres.Mapping``
      * [x] ``airflow.operators.postgres_operator.PostgresOperator`` → ``airflow.providers.postgres.operators.postgres.PostgresOperator``
      * [x] ``airflow.operators.presto_check_operator.SQLCheckOperator`` → ``airflow.providers.common.sql.operators.sql.SQLCheckOperator``
      * [x] ``airflow.operators.presto_check_operator.SQLIntervalCheckOperator`` → ``airflow.providers.common.sql.operators.sql.SQLIntervalCheckOperator``
      * [x] ``airflow.operators.presto_check_operator.SQLValueCheckOperator`` → ``airflow.providers.common.sql.operators.sql.SQLValueCheckOperator``
      * [x] ``airflow.operators.presto_check_operator.PrestoCheckOperator`` → ``airflow.providers.common.sql.operators.sql.SQLCheckOperator``
      * [x] ``airflow.operators.presto_check_operator.PrestoIntervalCheckOperator`` → ``airflow.providers.common.sql.operators.sql.SQLIntervalCheckOperator``
      * [x] ``airflow.operators.presto_check_operator.PrestoValueCheckOperator`` → ``airflow.providers.common.sql.operators.sql.SQLValueCheckOperator``
      * [x] ``airflow.operators.presto_to_mysql.PrestoToMySqlOperator`` → ``airflow.providers.mysql.transfers.presto_to_mysql.PrestoToMySqlOperator``
      * [x] ``airflow.operators.presto_to_mysql.PrestoToMySqlTransfer`` → ``airflow.providers.mysql.transfers.presto_to_mysql.PrestoToMySqlOperator``
      * [x] ``airflow.operators.python_operator.BranchPythonOperator`` → ``airflow.operators.python.BranchPythonOperator``
      * [x] ``airflow.operators.python_operator.PythonOperator`` → ``airflow.operators.python.PythonOperator``
      * [x] ``airflow.operators.python_operator.PythonVirtualenvOperator`` → ``airflow.operators.python.PythonVirtualenvOperator``
      * [x] ``airflow.operators.python_operator.ShortCircuitOperator`` → ``airflow.operators.python.ShortCircuitOperator``
      * [x] ``airflow.operators.redshift_to_s3_operator.RedshiftToS3Operator`` → ``airflow.providers.amazon.aws.transfers.redshift_to_s3.RedshiftToS3Operator``
      * [x] ``airflow.operators.redshift_to_s3_operator.RedshiftToS3Transfer`` → ``airflow.providers.amazon.aws.transfers.redshift_to_s3.RedshiftToS3Operator``
      * [x] ``airflow.operators.s3_file_transform_operator.S3FileTransformOperator`` → ``airflow.providers.amazon.aws.operators.s3_file_transform.S3FileTransformOperator``
      * [x] ``airflow.operators.s3_to_hive_operator.S3ToHiveOperator`` → ``airflow.providers.apache.hive.transfers.s3_to_hive.S3ToHiveOperator``
      * [x] ``airflow.operators.s3_to_hive_operator.S3ToHiveTransfer`` → ``airflow.providers.apache.hive.transfers.s3_to_hive.S3ToHiveOperator``
      * [x] ``airflow.operators.s3_to_redshift_operator.S3ToRedshiftOperator`` → ``airflow.providers.amazon.aws.transfers.s3_to_redshift.S3ToRedshiftOperator``
      * [x] ``airflow.operators.s3_to_redshift_operator.S3ToRedshiftTransfer`` → ``airflow.providers.amazon.aws.transfers.s3_to_redshift.S3ToRedshiftOperator``
      * [x] ``airflow.operators.slack_operator.SlackAPIOperator`` → ``airflow.providers.slack.operators.slack.SlackAPIOperator``
      * [x] ``airflow.operators.slack_operator.SlackAPIPostOperator`` → ``airflow.providers.slack.operators.slack.SlackAPIPostOperator``
      * [x] ``airflow.operators.sql.BaseSQLOperator`` → ``airflow.providers.common.sql.operators.sql.BaseSQLOperator``
      * [x] ``airflow.operators.sql.BranchSQLOperator`` → ``airflow.providers.common.sql.operators.sql.BranchSQLOperator``
      * [x] ``airflow.operators.sql.SQLCheckOperator`` → ``airflow.providers.common.sql.operators.sql.SQLCheckOperator``
      * [x] ``airflow.operators.sql.SQLColumnCheckOperator`` → ``airflow.providers.common.sql.operators.sql.SQLColumnCheckOperator``
      * [x] ``airflow.operators.sql.SQLIntervalCheckOperator`` → ``airflow.providers.common.sql.operators.sql.SQLIntervalCheckOperator``
      * [x] ``airflow.operators.sql.SQLTableCheckOperator`` → ``airflow.providers.common.sql.operators.sql.SQLTableCheckOperator``
      * [x] ``airflow.operators.sql.SQLThresholdCheckOperator`` → ``airflow.providers.common.sql.operators.sql.SQLThresholdCheckOperator``
      * [x] ``airflow.operators.sql.SQLValueCheckOperator`` → ``airflow.providers.common.sql.operators.sql.SQLValueCheckOperator``
      * [x] ``airflow.operators.sql._convert_to_float_if_possible`` → ``airflow.providers.common.sql.operators.sql._convert_to_float_if_possible``
      * [x] ``airflow.operators.sql.parse_boolean`` → ``airflow.providers.common.sql.operators.sql.parse_boolean``
      * [x] ``airflow.operators.sql_branch_operator.BranchSQLOperator`` → ``airflow.providers.common.sql.operators.sql.BranchSQLOperator``
      * [x] ``airflow.operators.sql_branch_operator.BranchSqlOperator`` → ``airflow.providers.common.sql.operators.sql.BranchSQLOperator``
      * [x] ``airflow.operators.sqlite_operator.SqliteOperator`` → ``airflow.providers.sqlite.operators.sqlite.SqliteOperator``
      * [x] ``airflow.sensors.hive_partition_sensor.HivePartitionSensor`` → ``airflow.providers.apache.hive.sensors.hive_partition.HivePartitionSensor``
      * [x] ``airflow.sensors.http_sensor.HttpSensor`` → ``airflow.providers.http.sensors.http.HttpSensor``
      * [x] ``airflow.sensors.metastore_partition_sensor.MetastorePartitionSensor`` → ``airflow.providers.apache.hive.sensors.metastore_partition.MetastorePartitionSensor``
      * [x] ``airflow.sensors.named_hive_partition_sensor.NamedHivePartitionSensor`` → ``airflow.providers.apache.hive.sensors.named_hive_partition.NamedHivePartitionSensor``
      * [x] ``airflow.sensors.s3_key_sensor.S3KeySensor`` → ``airflow.providers.amazon.aws.sensors.s3.S3KeySensor``
      * [x] ``airflow.sensors.sql.SqlSensor`` → ``airflow.providers.common.sql.sensors.sql.SqlSensor``
      * [x] ``airflow.sensors.sql_sensor.SqlSensor`` → ``airflow.providers.common.sql.sensors.sql.SqlSensor``
      * [x] ``airflow.sensors.web_hdfs_sensor.WebHdfsSensor`` → ``airflow.providers.apache.hdfs.sensors.web_hdfs.WebHdfsSensor``
      * [x] ``airflow.executors.kubernetes_executor_types.ALL_NAMESPACES`` → ``airflow.providers.cncf.kubernetes.executors.kubernetes_executor_types.ALL_NAMESPACES``
      * [x] ``airflow.executors.kubernetes_executor_types.POD_EXECUTOR_DONE_KEY`` → ``airflow.providers.cncf.kubernetes.executors.kubernetes_executor_types.POD_EXECUTOR_DONE_KEY``
      * [x] ``airflow.hooks.hive_hooks.HIVE_QUEUE_PRIORITIES`` → ``airflow.providers.apache.hive.hooks.hive.HIVE_QUEUE_PRIORITIES``
      * [x] ``airflow.executors.celery_executor.app`` → ``airflow.providers.celery.executors.celery_executor_utils.app``
      * [x] ``airflow.macros.hive.closest_ds_partition`` → ``airflow.providers.apache.hive.macros.hive.closest_ds_partition``
      * [x] ``airflow.macros.hive.max_partition`` → ``airflow.providers.apache.hive.macros.hive.max_partition``
