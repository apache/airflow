[
    {
        "eventType": "START",
        "eventTime": "{{ is_datetime(result) }}",
        "producer": "{{ regex_match(result, \"^https:\\/\\/github.com/apache/airflow/tree/providers-openlineage\\/[\\d]+\\.[\\d]+\\.[\\d]+.*$\") }}",
        "schemaURL": "{{ regex_match(result, \"^https:\\/\\/openlineage.io\\/spec\\/[\\d-]+\\/OpenLineage.json\\#\\/\\$defs\\/RunEvent$\") }}",
        "inputs": [],
        "outputs": [],
        "run": {
            "runId": "{{ is_uuid(result) }}",
            "facets": {
                "airflowDagRun": {
                    "dag": {
                        "dag_id": "openlineage_trigger_dag_child__notrigger",
                        "fileloc": "{{ result.endswith('openlineage/example_openlineage_trigger_dag.py') }}",
                        "owner": "airflow",
                        "owner_links": {},
                        "start_date": "{{ is_datetime(result) }}",
                        "tags": "{{ result[1:-1].split(', ') | sort == ['\"with\\'quote\"', \"'first'\", \"'second@'\", '\\'z\"e\\''] }}",
                        "timetable": {}
                    },
                    "dagRun": {
                        "conf": {
                            "some_config": "value1"
                        },
                        "dag_id": "openlineage_trigger_dag_child__notrigger",
                        "data_interval_end": "{{ is_datetime(result) }}",
                        "data_interval_start": "{{ is_datetime(result) }}",
                        "logical_date": "{{ is_datetime(result) }}",
                        "run_id": "{{ result.startswith('openlineage_trigger_dag_triggering_child') }}",
                        "run_type": "manual",
                        "start_date": "{{ is_datetime(result) }}"
                    },
                    "_producer": "{{ regex_match(result, \"^https:\\/\\/github.com/apache/airflow/tree/providers-openlineage\\/[\\d]+\\.[\\d]+\\.[\\d]+.*$\") }}",
                    "_schemaURL": "{{ regex_match(result, \"^https:\\/\\/openlineage.io\\/spec\\/[\\d-]+\\/OpenLineage.json\\#\\/\\$defs\\/RunFacet\") }}"
                },
                "nominalTime": {
                    "nominalEndTime": "{{ is_datetime(result) }}",
                    "nominalStartTime": "{{ is_datetime(result) }}",
                    "_producer": "{{ regex_match(result, \"^https:\\/\\/github.com/apache/airflow/tree/providers-openlineage\\/[\\d]+\\.[\\d]+\\.[\\d]+.*$\") }}",
                    "_schemaURL": "{{ regex_match(result, \"^https:\\/\\/openlineage.io\\/spec\\/facets\\/[\\d-]+\\/NominalTimeRunFacet.json\\#\\/\\$defs\\/NominalTimeRunFacet$\") }}"
                },
                "processing_engine": {
                    "name": "Airflow",
                    "openlineageAdapterVersion": "{{ regex_match(result, \"^[\\d]+\\.[\\d]+\\.[\\d]+.*\") }}",
                    "version": "{{ regex_match(result, \"^[\\d]+\\.[\\d]+\\.[\\d]+.*\") }}",
                    "_producer": "{{ regex_match(result, \"^https:\\/\\/github.com/apache/airflow/tree/providers-openlineage\\/[\\d]+\\.[\\d]+\\.[\\d]+.*$\") }}",
                    "_schemaURL": "{{ regex_match(result, \"^https:\\/\\/openlineage.io\\/spec\\/facets\\/[\\d-]+\\/ProcessingEngineRunFacet.json\\#\\/\\$defs\\/ProcessingEngineRunFacet$\") }}"
                }
            }
        },
        "job": {
            "namespace": "{{ result is string }}",
            "name": "openlineage_trigger_dag_child__notrigger",
            "facets": {
                "jobType": {
                    "integration": "AIRFLOW",
                    "jobType": "DAG",
                    "processingType": "BATCH",
                    "_producer": "{{ regex_match(result, \"^https:\\/\\/github.com/apache/airflow/tree/providers-openlineage\\/[\\d]+\\.[\\d]+\\.[\\d]+.*$\") }}",
                    "_schemaURL": "{{ regex_match(result, \"^https:\\/\\/openlineage.io\\/spec\\/facets\\/[\\d-]+\\/JobTypeJobFacet.json\\#\\/\\$defs\\/JobTypeJobFacet\") }}"
                },
                "ownership": {
                    "owners": [
                        {
                            "name": "airflow"
                        }
                    ],
                    "_producer": "{{ regex_match(result, \"^https:\\/\\/github.com/apache/airflow/tree/providers-openlineage\\/[\\d]+\\.[\\d]+\\.[\\d]+.*$\") }}",
                    "_schemaURL": "{{ regex_match(result, \"^https:\\/\\/openlineage.io\\/spec\\/facets\\/[\\d-]+\\/OwnershipJobFacet.json\\#\\/\\$defs\\/OwnershipJobFacet\") }}"
                },
                "tags": {
                  "tags": [
                      {
                          "key": "first",
                          "value": "first",
                          "source": "AIRFLOW"
                      },
                      {
                          "key": "second@",
                          "value": "second@",
                          "source": "AIRFLOW"
                      },
                      {
                          "key": "with'quote",
                          "value": "with'quote",
                          "source": "AIRFLOW"
                      },
                      {
                          "key": "z\"e",
                          "value": "z\"e",
                          "source": "AIRFLOW"
                      }
                  ],
                  "_producer": "{{ regex_match(result, \"^https:\\/\\/github.com/apache/airflow/tree/providers-openlineage\\/[\\d]+\\.[\\d]+\\.[\\d]+.*$\") }}",
                  "_schemaURL": "{{ regex_match(result, \"^https:\\/\\/openlineage.io\\/spec\\/facets\\/[\\d-]+\\/TagsJobFacet.json\\#\\/\\$defs\\/TagsJobFacet\") }}"
                },
                "airflow": {
                    "taskGroups": {},
                    "taskTree": {},
                    "tasks": {
                        "do_nothing_task": {
                            "downstream_task_ids": [],
                            "emits_ol_events": "{{ result == true }}",
                            "is_setup": false,
                            "is_teardown": false,
                            "operator": "airflow.providers.standard.operators.bash.BashOperator",
                            "ui_label": "do_nothing_task"
                        }
                    },
                    "_producer": "{{ regex_match(result, \"^https:\\/\\/github.com/apache/airflow/tree/providers-openlineage\\/[\\d]+\\.[\\d]+\\.[\\d]+.*$\") }}",
                    "_schemaURL": "{{ regex_match(result, \"^https:\\/\\/openlineage.io\\/spec\\/[\\d-]+\\/OpenLineage.json\\#\\/\\$defs\\/JobFacet\") }}"
                }
            }
        }
    },
    {
        "eventType": "COMPLETE",
        "eventTime": "{{ is_datetime(result) }}",
        "producer": "{{ regex_match(result, \"^https:\\/\\/github.com/apache/airflow/tree/providers-openlineage\\/[\\d]+\\.[\\d]+\\.[\\d]+.*$\") }}",
        "schemaURL": "{{ regex_match(result, \"^https:\\/\\/openlineage.io\\/spec\\/[\\d-]+\\/OpenLineage.json\\#\\/\\$defs\\/RunEvent$\") }}",
        "inputs": [],
        "outputs": [],
        "run": {
            "runId": "{{ is_uuid(result) }}",
            "facets": {
                "airflowState": {
                    "dagRunState": "success",
                    "tasksState": {
                        "do_nothing_task": "success"
                    },
                    "_producer": "{{ regex_match(result, \"^https:\\/\\/github.com/apache/airflow/tree/providers-openlineage\\/[\\d]+\\.[\\d]+\\.[\\d]+.*$\") }}",
                    "_schemaURL": "{{ regex_match(result, \"^https:\\/\\/openlineage.io\\/spec\\/[\\d-]+\\/OpenLineage.json\\#\\/\\$defs\\/RunFacet\") }}"
                },
                "airflowDagRun": {
                    "dag": {
                        "dag_id": "openlineage_trigger_dag_child__notrigger",
                        "fileloc": "{{ result.endswith('openlineage/example_openlineage_trigger_dag.py') }}",
                        "owner": "airflow",
                        "owner_links": {},
                        "start_date": "{{ is_datetime(result) }}",
                        "tags": "{{ result[1:-1].split(', ') | sort == ['\"with\\'quote\"', \"'first'\", \"'second@'\", '\\'z\"e\\''] }}",
                        "timetable": {}
                    },
                    "dagRun": {
                        "conf": {
                            "some_config": "value1"
                        },
                        "dag_id": "openlineage_trigger_dag_child__notrigger",
                        "data_interval_end": "{{ is_datetime(result) }}",
                        "data_interval_start": "{{ is_datetime(result) }}",
                        "logical_date": "{{ is_datetime(result) }}",
                        "run_id": "{{ result.startswith('openlineage_trigger_dag_triggering_child') }}",
                        "run_type": "manual",
                        "start_date": "{{ is_datetime(result) }}",
                        "duration": "{{ result is number }}"
                    },
                    "_producer": "{{ regex_match(result, \"^https:\\/\\/github.com/apache/airflow/tree/providers-openlineage\\/[\\d]+\\.[\\d]+\\.[\\d]+.*$\") }}",
                    "_schemaURL": "{{ regex_match(result, \"^https:\\/\\/openlineage.io\\/spec\\/[\\d-]+\\/OpenLineage.json\\#\\/\\$defs\\/RunFacet\") }}"
                },
                "nominalTime": {
                    "nominalEndTime": "{{ is_datetime(result) }}",
                    "nominalStartTime": "{{ is_datetime(result) }}",
                    "_producer": "{{ regex_match(result, \"^https:\\/\\/github.com/apache/airflow/tree/providers-openlineage\\/[\\d]+\\.[\\d]+\\.[\\d]+.*$\") }}",
                    "_schemaURL": "{{ regex_match(result, \"^https:\\/\\/openlineage.io\\/spec\\/facets\\/[\\d-]+\\/NominalTimeRunFacet.json\\#\\/\\$defs\\/NominalTimeRunFacet$\") }}"
                },
                "processing_engine": {
                    "name": "Airflow",
                    "openlineageAdapterVersion": "{{ regex_match(result, \"^[\\d]+\\.[\\d]+\\.[\\d]+.*\") }}",
                    "version": "{{ regex_match(result, \"^[\\d]+\\.[\\d]+\\.[\\d]+.*\") }}",
                    "_producer": "{{ regex_match(result, \"^https:\\/\\/github.com/apache/airflow/tree/providers-openlineage\\/[\\d]+\\.[\\d]+\\.[\\d]+.*$\") }}",
                    "_schemaURL": "{{ regex_match(result, \"^https:\\/\\/openlineage.io\\/spec\\/facets\\/[\\d-]+\\/ProcessingEngineRunFacet.json\\#\\/\\$defs\\/ProcessingEngineRunFacet$\") }}"
                }
            }
        },
        "job": {
            "namespace": "{{ result is string }}",
            "name": "openlineage_trigger_dag_child__notrigger",
            "facets": {
                "ownership": {
                    "owners": [
                        {
                            "name": "airflow"
                        }
                    ],
                    "_producer": "{{ regex_match(result, \"^https:\\/\\/github.com/apache/airflow/tree/providers-openlineage\\/[\\d]+\\.[\\d]+\\.[\\d]+.*$\") }}",
                    "_schemaURL": "{{ regex_match(result, \"^https:\\/\\/openlineage.io\\/spec\\/facets\\/[\\d-]+\\/OwnershipJobFacet.json\\#\\/\\$defs\\/OwnershipJobFacet\") }}"
                },
                "tags": {
                  "tags": [
                      {
                          "key": "first",
                          "value": "first",
                          "source": "AIRFLOW"
                      },
                      {
                          "key": "second@",
                          "value": "second@",
                          "source": "AIRFLOW"
                      },
                      {
                          "key": "with'quote",
                          "value": "with'quote",
                          "source": "AIRFLOW"
                      },
                      {
                          "key": "z\"e",
                          "value": "z\"e",
                          "source": "AIRFLOW"
                      }
                  ],
                  "_producer": "{{ regex_match(result, \"^https:\\/\\/github.com/apache/airflow/tree/providers-openlineage\\/[\\d]+\\.[\\d]+\\.[\\d]+.*$\") }}",
                  "_schemaURL": "{{ regex_match(result, \"^https:\\/\\/openlineage.io\\/spec\\/facets\\/[\\d-]+\\/TagsJobFacet.json\\#\\/\\$defs\\/TagsJobFacet\") }}"
                },
                "jobType": {
                    "integration": "AIRFLOW",
                    "jobType": "DAG",
                    "processingType": "BATCH",
                    "_producer": "{{ regex_match(result, \"^https:\\/\\/github.com/apache/airflow/tree/providers-openlineage\\/[\\d]+\\.[\\d]+\\.[\\d]+.*$\") }}",
                    "_schemaURL": "{{ regex_match(result, \"^https:\\/\\/openlineage.io\\/spec\\/facets\\/[\\d-]+\\/JobTypeJobFacet.json\\#\\/\\$defs\\/JobTypeJobFacet\") }}"
                }
            }
        }
    },
    {
        "eventType": "START",
        "run": {
            "facets": {
                "airflow": {
                    "task": {
                        "trigger_dag_id": "openlineage_trigger_dag_child__notrigger"
                    }
                }
            }
        },
        "job": {
            "name": "openlineage_trigger_dag.trigger_dagrun"
        }
    },
    {
        "eventType": "COMPLETE",
        "run": {
            "facets": {
                "airflow": {
                    "task": {
                        "trigger_dag_id": "openlineage_trigger_dag_child__notrigger"
                    }
                }
            }
        },
        "job": {
            "name": "openlineage_trigger_dag.trigger_dagrun"
        }
    }
]
