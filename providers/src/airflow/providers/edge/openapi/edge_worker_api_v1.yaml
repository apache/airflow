# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

---
openapi: 3.0.2
info:
  title: Airflow Edge Worker API
  version: 1.0.0
  description: |
    This is Airflow Edge Worker API - which is a the access endpoint for workers
    running on remote sites serving for Apache Airflow jobs. It also proxies internal API
    to edge endpoints.

    It is not intended to be used by any external code.

    You can find more information in AIP-69
    https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=301795932


servers:
  - url: /edge_worker/v1
    description: Airflow Edge Worker API
paths:
  /worker/{worker_name}:
    patch:
      description: Set state of worker and returns the current assigned queues.
      x-openapi-router-controller: airflow.providers.edge.worker_api.routes._v2_routes
      operationId: set_state_v2
      parameters:
      - description: Hostname or instance name of the worker
        in: path
        name: worker_name
        required: true
        schema:
          description: Hostname or instance name of the worker
          title: Worker Name
          type: string
      - description: JWT Authorization Token
        in: header
        name: authorization
        required: true
        schema:
          description: JWT Authorization Token
          title: Authorization
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkerStateBody'
              description: State of the worker with details
              examples:
              - jobs_active: 3
                queues:
                - large_node
                - wisconsin_site
                state: running
                sysinfo:
                  airflow_version: 2.10.0
                  concurrency: 4
                  edge_provider_version: 1.0.0
              title: Worker State
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - items:
                    type: string
                  type: array
                - type: object
                  nullable: true
                title: Response Set State
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Set State
      tags:
      - Worker
    post:
      description: Register a new worker to the backend.
      x-openapi-router-controller: airflow.providers.edge.worker_api.routes._v2_routes
      operationId: register_v2
      parameters:
      - description: Hostname or instance name of the worker
        in: path
        name: worker_name
        required: true
        schema:
          description: Hostname or instance name of the worker
          title: Worker Name
          type: string
      - description: JWT Authorization Token
        in: header
        name: authorization
        required: true
        schema:
          description: JWT Authorization Token
          title: Authorization
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkerStateBody'
              description: State of the worker with details
              examples:
              - jobs_active: 3
                queues:
                - large_node
                - wisconsin_site
                state: running
                sysinfo:
                  airflow_version: 2.10.0
                  concurrency: 4
                  edge_provider_version: 1.0.0
              title: Worker State
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                format: date-time
                title: Response Register
                type: string
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Register
      tags:
      - Worker
  /logs/logfile_path/{dag_id}/{task_id}/{run_id}/{try_number}/{map_index}:
    get:
      description: Elaborate the path and filename to expect from task execution.
      x-openapi-router-controller: airflow.providers.edge.worker_api.routes._v2_routes
      operationId: logfile_path_v2
      parameters:
      - description: Identifier of the DAG to which the task belongs.
        in: path
        name: dag_id
        required: true
        schema:
          description: Identifier of the DAG to which the task belongs.
          title: Dag ID
          type: string
      - description: Task name in the DAG.
        in: path
        name: task_id
        required: true
        schema:
          description: Task name in the DAG.
          title: Task ID
          type: string
      - description: Run ID of the DAG execution.
        in: path
        name: run_id
        required: true
        schema:
          description: Run ID of the DAG execution.
          title: Run ID
          type: string
      - description: The number of attempt to execute this task.
        in: path
        name: try_number
        required: true
        schema:
          description: The number of attempt to execute this task.
          title: Try Number
          type: integer
      - description: For dynamically mapped tasks the mapping number, -1 if the task
          is not mapped.
        in: path
        name: map_index
        required: true
        schema:
          description: For dynamically mapped tasks the mapping number, -1 if the
            task is not mapped.
          title: Map Index
          type: string  # This should be integer, but Connexion/Flask do not support negative integers in path parameters
      - description: JWT Authorization Token
        in: header
        name: authorization
        required: true
        schema:
          description: JWT Authorization Token
          title: Authorization
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Logfile Path
                type: string
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Logfile Path
      tags:
      - Logs
  /logs/push/{dag_id}/{task_id}/{run_id}/{try_number}/{map_index}:
    post:
      description: Push an incremental log chunk from Edge Worker to central site.
      x-openapi-router-controller: airflow.providers.edge.worker_api.routes._v2_routes
      operationId: push_logs_v2
      parameters:
      - description: Identifier of the DAG to which the task belongs.
        in: path
        name: dag_id
        required: true
        schema:
          description: Identifier of the DAG to which the task belongs.
          title: Dag ID
          type: string
      - description: Task name in the DAG.
        in: path
        name: task_id
        required: true
        schema:
          description: Task name in the DAG.
          title: Task ID
          type: string
      - description: Run ID of the DAG execution.
        in: path
        name: run_id
        required: true
        schema:
          description: Run ID of the DAG execution.
          title: Run ID
          type: string
      - description: The number of attempt to execute this task.
        in: path
        name: try_number
        required: true
        schema:
          description: The number of attempt to execute this task.
          title: Try Number
          type: integer
      - description: For dynamically mapped tasks the mapping number, -1 if the task
          is not mapped.
        in: path
        name: map_index
        required: true
        schema:
          description: For dynamically mapped tasks the mapping number, -1 if the
            task is not mapped.
          title: Map Index
          type: string  # This should be integer, but Connexion/Flask do not support negative integers in path parameters
      - description: JWT Authorization Token
        in: header
        name: authorization
        required: true
        schema:
          description: JWT Authorization Token
          title: Authorization
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushLogsBody'
              description: The worker remote has no access to log sink and with this
                can send log chunks to the central site.
              title: Log data chunks
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Push Logs
                type: object
                nullable: true
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Push Logs
      tags:
      - Logs
  /rpcapi:
    post:
      deprecated: false
      x-openapi-router-controller: airflow.providers.edge.worker_api.routes._v2_routes
      operationId: rpcapi_v2
      tags:
      - JSONRPC
      parameters: []
      responses:
        '200':
          description: Successful response
      requestBody:
        x-body-name: body
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - method
              - jsonrpc
              - params
              properties:
                jsonrpc:
                  type: string
                  default: '2.0'
                  description: JSON-RPC Version (2.0)
                method:
                  type: string
                  description: Method name
                params:
                  title: Parameters
                  type: object
  /health:
    get:
      operationId: health
      deprecated: false
      x-openapi-router-controller: airflow.providers.edge.worker_api.routes.health
      tags:
      - JSONRPC
      parameters: []
      responses:
        '200':
          description: Successful response
x-headers: []
x-explorer-enabled: true
x-proxy-enabled: true
components:
  schemas:
    JsonRpcRequired:
      type: object
      required:
      - method
      - jsonrpc
      properties:
        method:
          type: string
          description: Method name
        jsonrpc:
          type: string
          default: '2.0'
          description: JSON-RPC Version (2.0)
      discriminator:
        propertyName: method_name
    EdgeWorkerState:
      description: Status of a Edge Worker instance.
      enum:
      - starting
      - running
      - idle
      - terminating
      - offline
      - unknown
      title: EdgeWorkerState
      type: string
    WorkerStateBody:
      description: Details of the worker state sent to the scheduler.
      type: object
      required:
      - state
      - queues
      - sysinfo
      properties:
        jobs_active:
          default: 0
          description: Number of active jobs the worker is running.
          title: Jobs Active
          type: integer
        queues:
          anyOf:
          - items:
              type: string
            type: array
          - type: object
            nullable: true
          description: List of queues the worker is pulling jobs from. If not provided,
            worker pulls from all queues.
          title: Queues
        state:
          $ref: '#/components/schemas/EdgeWorkerState'
          description: State of the worker from the view of the worker.
        sysinfo:
          description: System information of the worker.
          title: Sysinfo
          type: object
      title: WorkerStateBody
    PushLogsBody:
      description: Incremental new log content from worker.
      properties:
        log_chunk_data:
          description: Log chunk data as incremental log text.
          title: Log Chunk Data
          type: string
        log_chunk_time:
          description: Time of the log chunk at point of sending.
          format: date-time
          title: Log Chunk Time
          type: string
      required:
      - log_chunk_time
      - log_chunk_data
      title: PushLogsBody
      type: object
    HTTPExceptionResponse:
      description: HTTPException Model used for error response.
      properties:
        detail:
          anyOf:
          - type: string
          - type: object
          title: Detail
      required:
      - detail
      title: HTTPExceptionResponse
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object

tags: []
