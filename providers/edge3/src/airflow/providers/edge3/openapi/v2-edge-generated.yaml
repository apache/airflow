openapi: 3.1.0
info:
  title: Airflow Edge Worker API
  description: 'This is Airflow Edge Worker API - this is a the access endpoint for
    workers running on remote sites serving for Apache Airflow jobs. It also serves
    for the Edge Worker UI and provides endpoints for React web app.

    All endpoints under ``/edge_worker/v1`` are used by remote workers and need a
    specific JWT token.

    All endpoints under ``/edge_worker/ui`` are used by UI and can be accessed with
    normal authentication. Please assume UI endpoints to change and not be stable.'
  version: 0.1.0
paths:
  /edge_worker/v1/jobs/fetch/{worker_name}:
    post:
      tags:
      - Jobs
      summary: Fetch
      description: Fetch a job to execute on the edge worker.
      operationId: fetch
      parameters:
      - name: worker_name
        in: path
        required: true
        schema:
          type: string
          title: Worker Name
      - name: authorization
        in: header
        required: true
        schema:
          type: string
          description: JWT Authorization Token
          title: Authorization
        description: JWT Authorization Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkerQueuesBody'
              title: Log data chunks
              description: The queues and capacity from which the worker can fetch
                jobs.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/EdgeJobFetched'
                - type: 'null'
                title: Response Fetch
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /edge_worker/v1/jobs/state/{dag_id}/{task_id}/{run_id}/{try_number}/{map_index}/{state}:
    patch:
      tags:
      - Jobs
      summary: State
      description: Update the state of a job running on the edge worker.
      operationId: state
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag ID
          description: Identifier of the DAG to which the task belongs.
        description: Identifier of the DAG to which the task belongs.
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          title: Task ID
          description: Task name in the DAG.
        description: Task name in the DAG.
      - name: run_id
        in: path
        required: true
        schema:
          type: string
          title: Run ID
          description: Run ID of the DAG execution.
        description: Run ID of the DAG execution.
      - name: try_number
        in: path
        required: true
        schema:
          type: integer
          title: Try Number
          description: The number of attempt to execute this task.
        description: The number of attempt to execute this task.
      - name: map_index
        in: path
        required: true
        schema:
          type: integer
          title: Map Index
          description: For dynamically mapped tasks the mapping number, -1 if the
            task is not mapped.
        description: For dynamically mapped tasks the mapping number, -1 if the task
          is not mapped.
      - name: state
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TaskInstanceState'
          title: Task State
          description: State of the assigned task under execution.
        description: State of the assigned task under execution.
      - name: authorization
        in: header
        required: true
        schema:
          type: string
          description: JWT Authorization Token
          title: Authorization
        description: JWT Authorization Token
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: 'null'
                title: Response State
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /edge_worker/v1/logs/logfile_path/{dag_id}/{task_id}/{run_id}/{try_number}/{map_index}:
    get:
      tags:
      - Logs
      summary: Logfile Path
      description: Elaborate the path and filename to expect from task execution.
      operationId: logfile_path
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag ID
          description: Identifier of the DAG to which the task belongs.
        description: Identifier of the DAG to which the task belongs.
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          title: Task ID
          description: Task name in the DAG.
        description: Task name in the DAG.
      - name: run_id
        in: path
        required: true
        schema:
          type: string
          title: Run ID
          description: Run ID of the DAG execution.
        description: Run ID of the DAG execution.
      - name: try_number
        in: path
        required: true
        schema:
          type: integer
          title: Try Number
          description: The number of attempt to execute this task.
        description: The number of attempt to execute this task.
      - name: map_index
        in: path
        required: true
        schema:
          type: integer
          title: Map Index
          description: For dynamically mapped tasks the mapping number, -1 if the
            task is not mapped.
        description: For dynamically mapped tasks the mapping number, -1 if the task
          is not mapped.
      - name: authorization
        in: header
        required: true
        schema:
          type: string
          description: JWT Authorization Token
          title: Authorization
        description: JWT Authorization Token
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: string
                title: Response Logfile Path
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /edge_worker/v1/logs/push/{dag_id}/{task_id}/{run_id}/{try_number}/{map_index}:
    post:
      tags:
      - Logs
      summary: Push Logs
      description: Push an incremental log chunk from Edge Worker to central site.
      operationId: push_logs
      parameters:
      - name: dag_id
        in: path
        required: true
        schema:
          type: string
          title: Dag ID
          description: Identifier of the DAG to which the task belongs.
        description: Identifier of the DAG to which the task belongs.
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          title: Task ID
          description: Task name in the DAG.
        description: Task name in the DAG.
      - name: run_id
        in: path
        required: true
        schema:
          type: string
          title: Run ID
          description: Run ID of the DAG execution.
        description: Run ID of the DAG execution.
      - name: try_number
        in: path
        required: true
        schema:
          type: integer
          title: Try Number
          description: The number of attempt to execute this task.
        description: The number of attempt to execute this task.
      - name: map_index
        in: path
        required: true
        schema:
          type: integer
          title: Map Index
          description: For dynamically mapped tasks the mapping number, -1 if the
            task is not mapped.
        description: For dynamically mapped tasks the mapping number, -1 if the task
          is not mapped.
      - name: authorization
        in: header
        required: true
        schema:
          type: string
          description: JWT Authorization Token
          title: Authorization
        description: JWT Authorization Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushLogsBody'
              title: Log data chunks
              description: The worker remote has no access to log sink and with this
                can send log chunks to the central site.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: 'null'
                title: Response Push Logs
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /edge_worker/v1/worker/{worker_name}:
    post:
      tags:
      - Worker
      summary: Register
      description: Register a new worker to the backend.
      operationId: register
      parameters:
      - name: worker_name
        in: path
        required: true
        schema:
          type: string
          title: Worker Name
          description: Hostname or instance name of the worker
        description: Hostname or instance name of the worker
      - name: authorization
        in: header
        required: true
        schema:
          type: string
          description: JWT Authorization Token
          title: Authorization
        description: JWT Authorization Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkerStateBody'
              title: Worker State
              description: State of the worker with details
              examples:
              - state: running
                jobs_active: 3
                queues:
                - large_node
                - wisconsin_site
                sysinfo:
                  concurrency: 4
                  airflow_version: 2.10.0
                  edge_provider_version: 1.0.0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkerRegistrationReturn'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
      - Worker
      summary: Set State
      description: Set state of worker and returns the current assigned queues.
      operationId: set_state
      parameters:
      - name: worker_name
        in: path
        required: true
        schema:
          type: string
          title: Worker Name
          description: Hostname or instance name of the worker
        description: Hostname or instance name of the worker
      - name: authorization
        in: header
        required: true
        schema:
          type: string
          description: JWT Authorization Token
          title: Authorization
        description: JWT Authorization Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkerStateBody'
              title: Worker State
              description: State of the worker with details
              examples:
              - state: running
                jobs_active: 3
                queues:
                - large_node
                - wisconsin_site
                sysinfo:
                  concurrency: 4
                  airflow_version: 2.10.0
                  edge_provider_version: 1.0.0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkerSetStateReturn'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /edge_worker/v1/worker/queues/{worker_name}:
    patch:
      tags:
      - Worker
      summary: Update Queues
      operationId: update_queues
      parameters:
      - name: worker_name
        in: path
        required: true
        schema:
          type: string
          title: Worker Name
          description: Hostname or instance name of the worker
        description: Hostname or instance name of the worker
      - name: authorization
        in: header
        required: true
        schema:
          type: string
          description: JWT Authorization Token
          title: Authorization
        description: JWT Authorization Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkerQueueUpdateBody'
              title: Changes in worker queues
              description: Changes to be applied to current queues of worker
              examples:
              - new_queues:
                - new_queue
                remove_queues:
                - old_queue
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: 'null'
                title: Response Update Queues
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /edge_worker/v1/health:
    get:
      tags:
      - Monitor
      summary: Health
      description: Report API Health.
      operationId: health
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
                title: Response Health
  /edge_worker/ui/worker:
    get:
      tags:
      - UI
      summary: Worker
      description: Return Edge Workers.
      operationId: worker
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkerCollectionResponse'
      security:
      - OAuth2PasswordBearer: []
      - HTTPBearer: []
  /edge_worker/ui/jobs:
    get:
      tags:
      - UI
      summary: Jobs
      description: Return Edge Jobs.
      operationId: jobs
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCollectionResponse'
      security:
      - OAuth2PasswordBearer: []
      - HTTPBearer: []
  /edge_worker/ui/worker/{worker_name}/maintenance:
    post:
      tags:
      - UI
      summary: Request Worker Maintenance
      description: Put a worker into maintenance mode.
      operationId: request_worker_maintenance
      security:
      - OAuth2PasswordBearer: []
      - HTTPBearer: []
      parameters:
      - name: worker_name
        in: path
        required: true
        schema:
          type: string
          title: Worker Name
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenanceRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: 'null'
                title: Response Request Worker Maintenance
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
      - UI
      summary: Update Worker Maintenance
      description: Update maintenance comments for a worker.
      operationId: update_worker_maintenance
      security:
      - OAuth2PasswordBearer: []
      - HTTPBearer: []
      parameters:
      - name: worker_name
        in: path
        required: true
        schema:
          type: string
          title: Worker Name
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenanceRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: 'null'
                title: Response Update Worker Maintenance
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - UI
      summary: Exit Worker Maintenance
      description: Exit a worker from maintenance mode.
      operationId: exit_worker_maintenance
      security:
      - OAuth2PasswordBearer: []
      - HTTPBearer: []
      parameters:
      - name: worker_name
        in: path
        required: true
        schema:
          type: string
          title: Worker Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: 'null'
                title: Response Exit Worker Maintenance
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /edge_worker/ui/worker/{worker_name}/shutdown:
    post:
      tags:
      - UI
      summary: Request Worker Shutdown
      description: Request shutdown of a worker.
      operationId: request_worker_shutdown
      security:
      - OAuth2PasswordBearer: []
      - HTTPBearer: []
      parameters:
      - name: worker_name
        in: path
        required: true
        schema:
          type: string
          title: Worker Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: 'null'
                title: Response Request Worker Shutdown
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /edge_worker/ui/worker/{worker_name}:
    delete:
      tags:
      - UI
      summary: Delete Worker
      description: Delete a worker record from the system.
      operationId: delete_worker
      security:
      - OAuth2PasswordBearer: []
      - HTTPBearer: []
      parameters:
      - name: worker_name
        in: path
        required: true
        schema:
          type: string
          title: Worker Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: 'null'
                title: Response Delete Worker
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /edge_worker/ui/worker/{worker_name}/queues/{queue_name}:
    put:
      tags:
      - UI
      summary: Add Worker Queue
      description: Add a queue to a worker.
      operationId: add_worker_queue
      security:
      - OAuth2PasswordBearer: []
      - HTTPBearer: []
      parameters:
      - name: worker_name
        in: path
        required: true
        schema:
          type: string
          title: Worker Name
      - name: queue_name
        in: path
        required: true
        schema:
          type: string
          title: Queue Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: 'null'
                title: Response Add Worker Queue
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - UI
      summary: Remove Worker Queue
      description: Remove a queue from a worker.
      operationId: remove_worker_queue
      security:
      - OAuth2PasswordBearer: []
      - HTTPBearer: []
      parameters:
      - name: worker_name
        in: path
        required: true
        schema:
          type: string
          title: Worker Name
      - name: queue_name
        in: path
        required: true
        schema:
          type: string
          title: Queue Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: 'null'
                title: Response Remove Worker Queue
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    BundleInfo:
      properties:
        name:
          type: string
          title: Name
        version:
          anyOf:
          - type: string
          - type: 'null'
          title: Version
      type: object
      required:
      - name
      title: BundleInfo
      description: Schema for telling task which bundle to run with.
    EdgeJobFetched:
      properties:
        dag_id:
          type: string
          title: Dag ID
          description: Identifier of the DAG to which the task belongs.
        task_id:
          type: string
          title: Task ID
          description: Task name in the DAG.
        run_id:
          type: string
          title: Run ID
          description: Run ID of the DAG execution.
        map_index:
          type: integer
          title: Map Index
          description: For dynamically mapped tasks the mapping number, -1 if the
            task is not mapped.
        try_number:
          type: integer
          title: Try Number
          description: The number of attempt to execute this task.
        command:
          $ref: '#/components/schemas/ExecuteTask'
          title: Command
          description: Command line to use to execute the job in Airflow 2. Task definition
            in Airflow 3
        concurrency_slots:
          type: integer
          title: Concurrency Slots
          description: Number of concurrency slots the job requires.
      type: object
      required:
      - dag_id
      - task_id
      - run_id
      - map_index
      - try_number
      - command
      - concurrency_slots
      title: EdgeJobFetched
      description: Job that is to be executed on the edge worker.
    EdgeWorkerState:
      type: string
      enum:
      - starting
      - running
      - idle
      - shutdown request
      - terminating
      - offline
      - unknown
      - maintenance request
      - maintenance pending
      - maintenance mode
      - maintenance exit
      - offline maintenance
      title: EdgeWorkerState
      description: Status of a Edge Worker instance.
    ExecuteTask:
      properties:
        token:
          type: string
          title: Token
        ti:
          $ref: '#/components/schemas/TaskInstance'
        dag_rel_path:
          type: string
          format: path
          title: Dag Rel Path
        bundle_info:
          $ref: '#/components/schemas/BundleInfo'
        log_path:
          anyOf:
          - type: string
          - type: 'null'
          title: Log Path
        type:
          type: string
          const: ExecuteTask
          title: Type
          default: ExecuteTask
      type: object
      required:
      - token
      - ti
      - dag_rel_path
      - bundle_info
      - log_path
      title: ExecuteTask
      description: Execute the given Task.
    HTTPExceptionResponse:
      properties:
        detail:
          anyOf:
          - type: string
          - additionalProperties: true
            type: object
          title: Detail
      type: object
      required:
      - detail
      title: HTTPExceptionResponse
      description: HTTPException Model used for error response.
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    Job:
      properties:
        dag_id:
          type: string
          title: Dag ID
          description: Identifier of the DAG to which the task belongs.
        task_id:
          type: string
          title: Task ID
          description: Task name in the DAG.
        run_id:
          type: string
          title: Run ID
          description: Run ID of the DAG execution.
        map_index:
          type: integer
          title: Map Index
          description: For dynamically mapped tasks the mapping number, -1 if the
            task is not mapped.
        try_number:
          type: integer
          title: Try Number
          description: The number of attempt to execute this task.
        state:
          $ref: '#/components/schemas/TaskInstanceState'
          description: State of the job from the view of the executor.
        queue:
          type: string
          title: Queue
          description: Queue for which the task is scheduled/running.
        queued_dttm:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Queued Dttm
          description: When the job was queued.
        edge_worker:
          anyOf:
          - type: string
          - type: 'null'
          title: Edge Worker
          description: The worker processing the job during execution.
        last_update:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Update
          description: Last heartbeat of the job.
      type: object
      required:
      - dag_id
      - task_id
      - run_id
      - map_index
      - try_number
      - state
      - queue
      title: Job
      description: Details of the job sent to the scheduler.
    JobCollectionResponse:
      properties:
        jobs:
          items:
            $ref: '#/components/schemas/Job'
          type: array
          title: Jobs
        total_entries:
          type: integer
          title: Total Entries
      type: object
      required:
      - jobs
      - total_entries
      title: JobCollectionResponse
      description: Job Collection serializer.
    MaintenanceRequest:
      properties:
        maintenance_comment:
          type: string
          title: Maintenance Comment
          description: Comment describing the maintenance reason.
      type: object
      required:
      - maintenance_comment
      title: MaintenanceRequest
      description: Request body for maintenance operations.
    PushLogsBody:
      properties:
        log_chunk_time:
          type: string
          format: date-time
          title: Log Chunk Time
          description: Time of the log chunk at point of sending.
        log_chunk_data:
          type: string
          title: Log Chunk Data
          description: Log chunk data as incremental log text.
      type: object
      required:
      - log_chunk_time
      - log_chunk_data
      title: PushLogsBody
      description: Incremental new log content from worker.
    TaskInstance:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        dag_version_id:
          type: string
          format: uuid
          title: Dag Version Id
        task_id:
          type: string
          title: Task Id
        dag_id:
          type: string
          title: Dag Id
        run_id:
          type: string
          title: Run Id
        try_number:
          type: integer
          title: Try Number
        map_index:
          type: integer
          title: Map Index
          default: -1
        pool_slots:
          type: integer
          title: Pool Slots
        queue:
          type: string
          title: Queue
        priority_weight:
          type: integer
          title: Priority Weight
        parent_context_carrier:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Parent Context Carrier
        context_carrier:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Context Carrier
      type: object
      required:
      - id
      - dag_version_id
      - task_id
      - dag_id
      - run_id
      - try_number
      - pool_slots
      - queue
      - priority_weight
      title: TaskInstance
      description: Schema for TaskInstance with minimal required fields needed for
        Executors and Task SDK.
    TaskInstanceState:
      type: string
      enum:
      - removed
      - scheduled
      - queued
      - running
      - success
      - restarting
      - failed
      - up_for_retry
      - up_for_reschedule
      - upstream_failed
      - skipped
      - deferred
      title: TaskInstanceState
      description: 'All possible states that a Task Instance can be in.


        Note that None is also allowed, so always use this in a type hint with Optional.'
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
    Worker:
      properties:
        queues:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Queues
          description: List of queues the worker is pulling jobs from. If not provided,
            worker pulls from all queues.
        state:
          $ref: '#/components/schemas/EdgeWorkerState'
          description: State of the worker from the view of the worker.
        jobs_active:
          type: integer
          title: Jobs Active
          description: Number of active jobs the worker is running.
          default: 0
        sysinfo:
          additionalProperties:
            anyOf:
            - type: string
            - type: integer
          type: object
          title: Sysinfo
          description: System information of the worker.
          examples:
          - airflow_version: 2.0.0
            concurrency: 4
            edge_provider_version: 1.0.0
            free_concurrency: 3
        maintenance_comments:
          anyOf:
          - type: string
          - type: 'null'
          title: Maintenance Comments
          description: Comments about the maintenance state of the worker.
        worker_name:
          type: string
          title: Worker Name
          description: Name of the worker.
        first_online:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: First Online
          description: When the worker was first online.
        last_heartbeat:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Heartbeat
          description: When the worker last sent a heartbeat.
      type: object
      required:
      - state
      - sysinfo
      - worker_name
      title: Worker
      description: Details of the worker state sent to the scheduler.
    WorkerCollectionResponse:
      properties:
        workers:
          items:
            $ref: '#/components/schemas/Worker'
          type: array
          title: Workers
        total_entries:
          type: integer
          title: Total Entries
      type: object
      required:
      - workers
      - total_entries
      title: WorkerCollectionResponse
      description: Worker Collection serializer.
    WorkerQueueUpdateBody:
      properties:
        new_queues:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: New Queues
          description: Additional queues to be added to worker.
        remove_queues:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Remove Queues
          description: Queues to remove from worker.
      type: object
      required:
      - new_queues
      - remove_queues
      title: WorkerQueueUpdateBody
      description: Changed queues for the worker.
    WorkerQueuesBody:
      properties:
        queues:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Queues
          description: List of queues the worker is pulling jobs from. If not provided,
            worker pulls from all queues.
        free_concurrency:
          type: integer
          title: Free Concurrency
          description: Number of free concurrency slots on the worker.
      type: object
      required:
      - free_concurrency
      title: WorkerQueuesBody
      description: Queues that a worker supports to run jobs on.
    WorkerRegistrationReturn:
      properties:
        last_update:
          type: string
          format: date-time
          title: Last Update
          description: Time of the last update of the worker.
      type: object
      required:
      - last_update
      title: WorkerRegistrationReturn
      description: The return class for the worker registration.
    WorkerSetStateReturn:
      properties:
        state:
          $ref: '#/components/schemas/EdgeWorkerState'
          description: State of the worker from the view of the server.
        queues:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Queues
          description: List of queues the worker is pulling jobs from. If not provided,
            worker pulls from all queues.
        maintenance_comments:
          anyOf:
          - type: string
          - type: 'null'
          title: Maintenance Comments
          description: Comments about the maintenance state of the worker.
      type: object
      required:
      - state
      - queues
      title: WorkerSetStateReturn
      description: The return class for the worker set state.
    WorkerStateBody:
      properties:
        queues:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Queues
          description: List of queues the worker is pulling jobs from. If not provided,
            worker pulls from all queues.
        state:
          $ref: '#/components/schemas/EdgeWorkerState'
          description: State of the worker from the view of the worker.
        jobs_active:
          type: integer
          title: Jobs Active
          description: Number of active jobs the worker is running.
          default: 0
        sysinfo:
          additionalProperties:
            anyOf:
            - type: string
            - type: integer
          type: object
          title: Sysinfo
          description: System information of the worker.
          examples:
          - airflow_version: 2.0.0
            concurrency: 4
            edge_provider_version: 1.0.0
            free_concurrency: 3
        maintenance_comments:
          anyOf:
          - type: string
          - type: 'null'
          title: Maintenance Comments
          description: Comments about the maintenance state of the worker.
      type: object
      required:
      - state
      - sysinfo
      title: WorkerStateBody
      description: Details of the worker state sent to the scheduler.
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      description: To authenticate Airflow API requests, clients must include a JWT
        (JSON Web Token) in the Authorization header of each request. This token is
        used to verify the identity of the client and ensure that they have the appropriate
        permissions to access the requested resources. You can use the endpoint ``POST
        /auth/token`` in order to generate a JWT token. Upon successful authentication,
        the server will issue a JWT token that contains the necessary information
        (such as user identity and scope) to authenticate subsequent requests. To
        learn more about Airflow public API authentication, please read https://airflow.apache.org/docs/apache-airflow/stable/security/api.html.
      flows:
        password:
          scopes: {}
          tokenUrl: /auth/token
    HTTPBearer:
      type: http
      scheme: bearer
