openapi: 3.1.0
info:
  title: FAB auth manager API
  description: This is FAB auth manager API. This API is only available if the auth
    manager used in the Airflow environment is FAB auth manager. This API provides
    endpoints to manage users and permissions managed by the FAB auth manager.
  version: 0.1.0
paths:
  /auth/token:
    post:
      tags:
      - FabAuthManager
      summary: Create Token
      description: Generate a new API token.
      operationId: create_token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginBody'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /auth/token/cli:
    post:
      tags:
      - FabAuthManager
      summary: Create Token Cli
      description: Generate a new CLI API token.
      operationId: create_token_cli
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginBody'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /auth/fab/v1/roles:
    post:
      tags:
      - FabAuthManager
      summary: Create Role
      description: Create a new role (actions can be empty).
      operationId: create_role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPExceptionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
      - HTTPBearer: []
components:
  schemas:
    ActionResourceResponse:
      properties:
        action:
          $ref: '#/components/schemas/ActionResponse'
        resource:
          $ref: '#/components/schemas/ResourceResponse'
      type: object
      required:
      - action
      - resource
      title: ActionResourceResponse
      description: Pairing of an action with a resource.
    ActionResponse:
      properties:
        name:
          type: string
          title: Name
      type: object
      required:
      - name
      title: ActionResponse
      description: Outgoing representation of an action (permission name).
    HTTPExceptionResponse:
      properties:
        detail:
          anyOf:
          - type: string
          - additionalProperties: true
            type: object
          title: Detail
      type: object
      required:
      - detail
      title: HTTPExceptionResponse
      description: HTTPException Model used for error response.
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    LoginBody:
      properties:
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
      type: object
      required:
      - username
      - password
      title: LoginBody
      description: API Token serializer for requests.
    LoginResponse:
      properties:
        access_token:
          type: string
          title: Access Token
      type: object
      required:
      - access_token
      title: LoginResponse
      description: API Token serializer for responses.
    ResourceResponse:
      properties:
        name:
          type: string
          title: Name
      type: object
      required:
      - name
      title: ResourceResponse
      description: Outgoing representation of a resource.
    RoleBody:
      properties:
        name:
          type: string
          minLength: 1
          title: Name
        actions:
          items:
            $ref: '#/components/schemas/ActionResourceResponse'
          type: array
          title: Actions
      additionalProperties: false
      type: object
      required:
      - name
      title: RoleBody
      description: Incoming payload for creating/updating a role.
    RoleResponse:
      properties:
        name:
          type: string
          title: Name
        actions:
          items:
            $ref: '#/components/schemas/ActionResourceResponse'
          type: array
          title: Actions
      type: object
      required:
      - name
      title: RoleResponse
      description: Outgoing representation of a role and its permissions.
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      description: To authenticate Airflow API requests, clients must include a JWT
        (JSON Web Token) in the Authorization header of each request. This token is
        used to verify the identity of the client and ensure that they have the appropriate
        permissions to access the requested resources. You can use the endpoint ``POST
        /auth/token`` in order to generate a JWT token. Upon successful authentication,
        the server will issue a JWT token that contains the necessary information
        (such as user identity and scope) to authenticate subsequent requests. To
        learn more about Airflow public API authentication, please read https://airflow.apache.org/docs/apache-airflow/stable/security/api.html.
      flows:
        password:
          scopes: {}
          tokenUrl: /auth/token
    HTTPBearer:
      type: http
      scheme: bearer
