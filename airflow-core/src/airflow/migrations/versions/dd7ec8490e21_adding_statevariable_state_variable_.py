#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

"""Adding StateVariable (state_variable) model to DB

Revision ID: dd7ec8490e21
Revises: ab6dc0c82d0e
Create Date: 2025-09-24 14:59:25.355881

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import mysql

import airflow

# revision identifiers, used by Alembic.
revision = "dd7ec8490e21"
down_revision = "ab6dc0c82d0e"
branch_labels = None
depends_on = None


def upgrade():
    """Apply Adding StateVariable (state_variable) model to DB"""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('state_variable',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('key', sa.String(length=250), nullable=True),
    sa.Column('value', sa.Text().with_variant(mysql.MEDIUMTEXT(), 'mysql'), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('state_variable_pkey')),
    sa.UniqueConstraint('key', name=op.f('state_variable_key_uq'))
    )
    with op.batch_alter_table('hitl_detail', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', airflow.utils.sqlalchemy.UtcDateTime(timezone=True), nullable=False))

    # ### end Alembic commands ###


def downgrade():
    """Unapply Adding StateVariable (state_variable) model to DB"""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('hitl_detail', schema=None) as batch_op:
        batch_op.drop_column('created_at')

    op.drop_table('state_variable')
    # ### end Alembic commands ###
