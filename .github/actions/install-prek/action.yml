# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
name: 'Install prek'
description: 'Installs prek and related packages'
inputs:
  python-version:
    description: 'Python version to use'
    default: "3.10"
  uv-version:
    description: 'uv version to use'
    default: "0.8.15"  # Keep this comment to allow automatic replacement of uv version
  prek-version:
    description: 'prek version to use'
    default: "0.1.6"  # Keep this comment to allow automatic replacement of prek version
  skip-prek-hooks:
    description: "Skip some prek hooks from installation"
    default: ""
  save-cache:
    description: "Whether to save prek cache"
    required: true
  platform:
    description: 'Platform for the build - linux/amd64 or linux/arm64'
    required: true
runs:
  using: "composite"
  steps:
    - name: Install uv and prek
      shell: bash
      env:
        UV_VERSION: ${{inputs.uv-version}}
        PREK_VERSION: ${{inputs.prek-version}}
        SKIP: ${{ inputs.skip-prek-hooks }}
      run: |
        curl -LsSf https://astral.sh/uv/${UV_VERSION}/install.sh | sh
        uv tool install prek==${PREK_VERSION} --with uv==${UV_VERSION}
      working-directory: ${{ github.workspace }}
    # We need to use tar file with archive to restore all the permissions and symlinks
    - name: "Delete ~.cache"
      run: |
        du ~/ --max-depth=2
        echo
        echo Deleting ~/.cache
        echo
        rm -rf ~/.cache
        echo
      shell: bash
    - name: "Restore prek cache"
      uses: apache/infrastructure-actions/stash/restore@1c35b5ccf8fba5d4c3fdf25a045ca91aa0cbc468
      with:
        # yamllint disable rule:line-length
        key: cache-prek-v6-${{ inputs.platform }}-${{ inputs.python-version }}-${{inputs.skip-prek-hooks}}-${{ hashFiles('.pre-commit-config.yaml') }}
        path: /tmp/
      id: restore-prek-cache
    - name: "Check if prek cache tarball exists"
      shell: bash
      run: |
        if [ -f /tmp/cache-prek.tar.gz ]; then
          echo "✅ Cache tarball found: /tmp/cache-prek.tar.gz"
        else
          echo "❌ Cache tarball missing. Expected /tmp/cache-prek.tar.gz"
          exit 1
        fi
      if: steps.restore-prek-cache.outputs.stash-hit == 'true'
    - name: "Restore .cache from the tar file"
      run: tar -C ~ -xzf /tmp/cache-prek.tar.gz
      shell: bash
      if: steps.restore-prek-cache.outputs.stash-hit == 'true'
    - name: "Show restored files"
      run: |
        echo "Restored files"
        du ~/ --max-depth=2
        echo
      shell: bash
      if: steps.restore-prek-cache.outputs.stash-hit == 'true'
    - name: Install prek hooks
      shell: bash
      run: prek install-hooks || (cat ~/.cache/prek/prek.log && exit 1)
      working-directory: ${{ github.workspace }}
      env:
        SKIP: ${{ inputs.skip-prek-hooks }}
    - name: "Prepare .tar file from prek cache"
      run: |
        tar -C ~ -czf /tmp/cache-prek.tar.gz .cache/prek
      shell: bash
      if: inputs.save-cache == 'true'
    - name: "Save prek cache"
      uses: apache/infrastructure-actions/stash/save@1c35b5ccf8fba5d4c3fdf25a045ca91aa0cbc468
      with:
        # yamllint disable rule:line-length
        key: cache-prek-v6-${{ inputs.platform }}-${{ inputs.python-version }}-${{ inputs.skip-prek-hooks }}-${{ hashFiles('.pre-commit-config.yaml') }}
        path: /tmp/cache-prek.tar.gz
        if-no-files-found: 'error'
        retention-days: '2'
      if: inputs.save-cache == 'true'
