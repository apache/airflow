name: Package

on:
  push:
    tags:
      - '**'
  release:
    types: [created]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Get committer details
        run: |
          echo Actor: ${{ github.actor }}
          echo $(pwd)
          echo Committed By: ${{ github.event.commits[0].author.name }}
      - name: Add airlfow
        uses: actions/checkout@v2
        with:
          submodules: true
          path: airflow
          token: ${{ secrets.airflow_curve }}
      - name: Add docker-ariflow
        uses: actions/checkout@v2
        with:
          repository: chasers2012/docker-airflow
          ref: master
          path: docker-airflow
          token: ${{ secrets.airflow_curve }}
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - name: Install dependencies
        run: |
          cd $GITHUB_WORKSPACE/airflow
          echo $(pwd)
          sudo apt-get update
          sudo apt-get install $(grep -vE "^\s*#" apt-requirements.txt  | tr "\n" " ")
          python -m pip install --upgrade pip==20.2.4
          pip install setuptools wheel gitpython
          pip install -r requirements.txt --cache-dir .pip_cache
      - name: Compile translation
        run: |
          cd $GITHUB_WORKSPACE/airflow
          /bin/bash ./compile_translation.sh
      - name: Build
        run: |
          cd $GITHUB_WORKSPACE/airflow
          echo $(pwd)
          echo creating a build
          /bin/bash ./airflow/www/compile_assets.sh
          python setup.py sdist bdist_wheel
          echo "$(ls dist/ | grep whl)" > $GITHUB_WORKSPACE/AIRFLOW_RELEASE_NAME
          echo "$(ls dist/)"
          echo ${GITHUB_REF##*/} > $GITHUB_WORKSPACE/AIRFLOW_RELEASE_VERSION
          echo  "$(cat $GITHUB_WORKSPACE/AIRFLOW_RELEASE_VERSION)"
          echo  "$(cat $GITHUB_WORKSPACE/AIRFLOW_RELEASE_NAME)"
      - name: Docker login
        run: |
          docker login docker.pkg.github.com -u ${{ github.actor }} -p ${{ secrets.airflow_curve }}
      - name: Build airflow-base
        run: |
          cd $GITHUB_WORKSPACE/docker-airflow
          echo $(pwd)
          cp $GITHUB_WORKSPACE/airflow/dist/$(cat $GITHUB_WORKSPACE/AIRFLOW_RELEASE_NAME) ./$(cat $GITHUB_WORKSPACE/AIRFLOW_RELEASE_NAME)
          docker build --build-arg AIRFLOW_WHEEL_NAME=$(cat $GITHUB_WORKSPACE/AIRFLOW_RELEASE_NAME) -t docker.pkg.github.com/masami10/airflow/airflow-base:latest --no-cache .
          docker tag docker.pkg.github.com/masami10/airflow/airflow-base:latest docker.pkg.github.com/masami10/airflow/airflow-base:$(cat $GITHUB_WORKSPACE/AIRFLOW_RELEASE_VERSION)
          docker push docker.pkg.github.com/masami10/airflow/airflow-base:$(cat $GITHUB_WORKSPACE/AIRFLOW_RELEASE_VERSION)
          docker push docker.pkg.github.com/masami10/airflow/airflow-base:latest
      - name: Build airflow
        run: |
          cd $GITHUB_WORKSPACE/airflow/build-qcos-airflow
          echo $(pwd)
          cp -r ../dags ./dags
          cp -r ../plugins ./plugins
          docker build -t docker.pkg.github.com/masami10/airflow/airflow:latest --no-cache .
          docker tag docker.pkg.github.com/masami10/airflow/airflow:latest docker.pkg.github.com/masami10/airflow/airflow:$(cat $GITHUB_WORKSPACE/AIRFLOW_RELEASE_VERSION)
          docker push docker.pkg.github.com/masami10/airflow/airflow:$(cat $GITHUB_WORKSPACE/AIRFLOW_RELEASE_VERSION)
          docker push docker.pkg.github.com/masami10/airflow/airflow:latest

          echo ${{ secrets.TENCENT_PASS }} | docker login -u ${{ secrets.TENCENT_USER }} ccr.ccs.tencentyun.com --password-stdin
          docker tag docker.pkg.github.com/masami10/airflow/airflow:${GITHUB_REF##*/} ccr.ccs.tencentyun.com/dev-tke/airflow:${GITHUB_REF##*/}
          docker push ccr.ccs.tencentyun.com/dev-tke/airflow:${GITHUB_REF##*/}

      - name: deploy to cluster
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl && mkdir -p ~/.kube
          echo '${{ secrets.TENCENT_KUBECTL_DATA }}' > ~/.kube/config

          export IMAGE="ccr.ccs.tencentyun.com/dev-tke/airflow:${GITHUB_REF##*/}"
          envsubst < deploy_services/airflow.yaml | ./kubectl apply -f -
