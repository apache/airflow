# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
name: Integration tests
on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      runs-on-as-json-public:
        description: "The array of labels (in json form) determining public runners."
        required: true
        type: string
      image-tag:
        description: "Tag to set for the image"
        required: true
        type: string
      testable-integrations:
        description: "The list of testable integrations as JSON array."
        required: true
        type: string
      default-postgres-version:
        description: "Default version of Postgres to use"
        required: true
        type: string
      default-mysql-version:
        description: "Default version of MySQL to use"
        required: true
        type: string
      skip-provider-tests:
        description: "Skip provider tests (true/false)"
        required: true
        type: string
      run-coverage:
        description: "Run coverage (true/false)"
        required: true
        type: string
      default-python-version:
        description: "Which version of python should be used by default"
        required: true
        type: string
      debug-resources:
        description: "Debug resources (true/false)"
        required: true
        type: string
jobs:
  tests-integration:
    timeout-minutes: 130
    name: "Integration Tests: ${{ matrix.integration }}"
    runs-on: ${{ fromJSON(inputs.runs-on-as-json-public) }}
    strategy:
      fail-fast: false
      matrix:
        integration: ${{ fromJSON(inputs.testable-integrations) }}
    env:
      IMAGE_TAG: "${{ inputs.image-tag }}"
      BACKEND: "postgres"
      BACKEND_VERSION: ${{ inputs.default-postgres-version }}"
      PYTHON_MAJOR_MINOR_VERSION: "${{ inputs.default-python-version }}"
      JOB_ID: "integration-${{ matrix.integration }}"
      SKIP_PROVIDER_TESTS: "${{ inputs.skip-provider-tests }}"
      ENABLE_COVERAGE: "${{ inputs.run-coverage}}"
      DEBUG_RESOURCES: "${{ inputs.debug-resources }}"
      GITHUB_REPOSITORY: ${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_USERNAME: ${{ github.actor }}
      VERBOSE: "true"
    steps:
      - name: "Cleanup repo"
        shell: bash
        run: docker run -v "${GITHUB_WORKSPACE}:/workspace" -u 0:0 bash -c "rm -rf /workspace/*"
      - name: "Checkout ${{ github.ref }} ( ${{ github.sha }} )"
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: "Cleanup docker"
        run: ./scripts/ci/cleanup_docker.sh
      - name: "Prepare breeze & CI image: ${{ inputs.default-python-version }}:${{ inputs.image-tag }}"
        uses: ./.github/actions/prepare_breeze_and_image
      - name: "Integration Tests: ${{ matrix.integration }}"
        run: ./scripts/ci/testing/run_integration_tests_with_retry.sh ${{ matrix.integration }}
      - name: "Post Tests success: Integration Tests ${{ matrix.integration }}"
        uses: ./.github/actions/post_tests_success
        with:
          codecov-token: ${{ secrets.CODECOV_TOKEN }}
          python-version: ${{ inputs.default-python-version }}
      - name: "Post Tests failure: Integration Tests ${{ matrix.integration }}"
        uses: ./.github/actions/post_tests_failure
        if: failure()
