# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
name: Special tests
on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      runs-on:
        description: "The array of labels (in json form) determining type of the runner to use for the build."
        required: false
        default: '["ubuntu-22.04"]'
        type: string
      image-tag:
        description: "Tag to set for the image"
        required: true
        type: string
      parallel-test-types-list-as-string:
        description: "The list of parallel test types to run separated by spaces"
        required: true
        type: string
      run-coverage:
        description: "Whether to run coverage or not (true/false)"
        required: true
        type: string
      default-python-version:
        description: "Which version of python should be used by default"
        required: true
        type: string
      default-postgres-version:
        description: "The default version of the postgres to use"
        required: true
        type: string
      canary-run:
        description: "Whether to run canary tests or not (true/false)"
        required: true
        type: string
      upgrade-to-newer-dependencies:
        description: "Whether to upgrade to newer dependencies or not (true/false)"
        required: true
        type: string
      debug-resources:
        description: "Whether to debug resources or not (true/false)"
        required: true
        type: string
jobs:
  tests-min-sqlalchemy:
    name: "Min SQLAlchemy test"
    uses: ./.github/workflows/run-unit-tests.yml
    permissions:
      contents: read
      packages: read
    secrets: inherit
    if: inputs.canary-run == 'true' || inputs.upgrade-to-newer-dependencies == 'true'
    with:
      runs-on: ${{ inputs.runs-on }}
      downgrade-sqlalchemy: "true"
      test-name: "MinSQLAlchemy-Postgres"
      test-scope: "DB"
      backend: "postgres"
      image-tag: ${{ inputs.image-tag }}
      python-versions: "['${{ inputs.default-python-version }}']"
      backend-versions: "['${{ inputs.default-postgres-version }}']"
      excludes: "[]"
      parallel-test-types-list-as-string: ${{ inputs.parallel-test-types-list-as-string }}
      include-success-outputs: ${{ needs.build-info.outputs.include-success-outputs }}
      run-coverage: ${{ inputs.run-coverage }}
      debug-resources: ${{ inputs.debug-resources }}

  tests-boto:
    name: "Latest Boto test"
    uses: ./.github/workflows/run-unit-tests.yml
    permissions:
      contents: read
      packages: read
    secrets: inherit
    if: inputs.canary-run == 'true' || inputs.upgrade-to-newer-dependencies == 'true'
    with:
      runs-on: ${{ inputs.runs-on }}
      upgrade-boto: "true"
      test-name: "LatestBoto-Postgres"
      test-scope: "All"
      backend: "postgres"
      image-tag: ${{ inputs.image-tag }}
      python-versions: "['${{ inputs.default-python-version }}']"
      backend-versions: "['${{ inputs.default-postgres-version }}']"
      excludes: "[]"
      parallel-test-types-list-as-string: ${{ inputs.parallel-test-types-list-as-string }}
      include-success-outputs: ${{ needs.build-info.outputs.include-success-outputs }}
      run-coverage: ${{ inputs.run-coverage }}
      debug-resources: ${{ inputs.debug-resources }}

  tests-pydantic-v1:
    name: "Pydantic v1 test"
    uses: ./.github/workflows/run-unit-tests.yml
    permissions:
      contents: read
      packages: read
    secrets: inherit
    if: inputs.canary-run == 'true' || inputs.upgrade-to-newer-dependencies == 'true'
    with:
      runs-on: ${{ inputs.runs-on }}
      pydantic: "v1"
      test-name: "Pydantic-V1-Postgres"
      test-scope: "All"
      backend: "postgres"
      image-tag: ${{ inputs.image-tag }}
      python-versions: "['${{ inputs.default-python-version }}']"
      backend-versions: "['${{ inputs.default-postgres-version }}']"
      excludes: "[]"
      parallel-test-types-list-as-string: ${{ inputs.parallel-test-types-list-as-string }}
      include-success-outputs: ${{ needs.build-info.outputs.include-success-outputs }}
      run-coverage: ${{ inputs.run-coverage }}
      debug-resources: ${{ inputs.debug-resources }}

  tests-pydantic-none:
    name: "Pydantic removed test"
    uses: ./.github/workflows/run-unit-tests.yml
    permissions:
      contents: read
      packages: read
    secrets: inherit
    if: inputs.canary-run == 'true' || inputs.upgrade-to-newer-dependencies == 'true'
    with:
      runs-on: ${{ inputs.runs-on }}
      pydantic: "none"
      test-name: "Pydantic-Removed-Postgres"
      test-scope: "All"
      backend: "postgres"
      image-tag: ${{ inputs.image-tag }}
      python-versions: "['${{ inputs.default-python-version }}']"
      backend-versions: "['${{ inputs.default-postgres-version }}']"
      excludes: "[]"
      parallel-test-types-list-as-string: ${{ inputs.parallel-test-types-list-as-string }}
      include-success-outputs: ${{ needs.build-info.outputs.include-success-outputs }}
      run-coverage: ${{ inputs.run-coverage }}
      debug-resources: ${{ inputs.debug-resources }}

  tests-pendulum-2:
    name: "Pendulum2 test"
    uses: ./.github/workflows/run-unit-tests.yml
    permissions:
      contents: read
      packages: read
    secrets: inherit
    if: inputs.canary-run == 'true' || inputs.upgrade-to-newer-dependencies == 'true'
    with:
      runs-on: ${{ inputs.runs-on }}
      downgrade-pendulum: "true"
      test-name: "Pendulum2-Postgres"
      test-scope: "All"
      backend: "postgres"
      image-tag: ${{ inputs.image-tag }}
      python-versions: "['${{ inputs.default-python-version }}']"
      backend-versions: "['${{ inputs.default-postgres-version }}']"
      excludes: "[]"
      parallel-test-types-list-as-string: ${{ inputs.parallel-test-types-list-as-string }}
      include-success-outputs: ${{ needs.build-info.outputs.include-success-outputs }}
      run-coverage: ${{ inputs.run-coverage }}
      debug-resources: ${{ inputs.debug-resources }}

  tests-in-progress-disabled:
    name: "In progress disabled test"
    uses: ./.github/workflows/run-unit-tests.yml
    permissions:
      contents: read
      packages: read
    secrets: inherit
    if: inputs.canary-run == 'true' || inputs.upgrade-to-newer-dependencies == 'true'
    with:
      runs-on: ${{ inputs.runs-on }}
      enable-aip-44: "false"
      test-name: "InProgressDisabled-Postgres"
      test-scope: "All"
      backend: "postgres"
      image-tag: ${{ inputs.image-tag }}
      python-versions: "['${{ inputs.default-python-version }}']"
      backend-versions: "['${{ inputs.default-postgres-version }}']"
      excludes: "[]"
      parallel-test-types-list-as-string: ${{ inputs.parallel-test-types-list-as-string }}
      include-success-outputs: ${{ needs.build-info.outputs.include-success-outputs }}
      run-coverage: ${{ inputs.run-coverage }}
      debug-resources: ${{ inputs.debug-resources }}

  tests-quarantined:
    name: "Quarantined test"
    uses: ./.github/workflows/run-unit-tests.yml
    permissions:
      contents: read
      packages: read
    secrets: inherit
    if: inputs.canary-run == 'true' || inputs.upgrade-to-newer-dependencies == 'true'
    with:
      runs-on: ${{ inputs.runs-on }}
      test-name: "Postgres"
      test-scope: "Quarantined"
      backend: "postgres"
      image-tag: ${{ inputs.image-tag }}
      python-versions: "['${{ inputs.default-python-version }}']"
      backend-versions: "['${{ inputs.default-postgres-version }}']"
      excludes: "[]"
      parallel-test-types-list-as-string: ${{ inputs.parallel-test-types-list-as-string }}
      include-success-outputs: ${{ needs.build-info.outputs.include-success-outputs }}
      run-coverage: ${{ inputs.run-coverage }}
      debug-resources: ${{ inputs.debug-resources }}

  tests-arm-collection:
    name: "ARM Collection test"
    uses: ./.github/workflows/run-unit-tests.yml
    permissions:
      contents: read
      packages: read
    secrets: inherit
    if: inputs.canary-run == 'true' || inputs.upgrade-to-newer-dependencies == 'true'
    with:
      runs-on: ${{ inputs.runs-on }}
      test-name: "Postgres"
      test-scope: "ARM collection"
      backend: "postgres"
      image-tag: ${{ inputs.image-tag }}
      python-versions: "['${{ inputs.default-python-version }}']"
      backend-versions: "['${{ inputs.default-postgres-version }}']"
      excludes: "[]"
      parallel-test-types-list-as-string: ${{ inputs.parallel-test-types-list-as-string }}
      include-success-outputs: ${{ needs.build-info.outputs.include-success-outputs }}
      run-coverage: ${{ inputs.run-coverage }}
      debug-resources: ${{ inputs.debug-resources }}
