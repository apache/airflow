# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
name: Additional PROD image tests
on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      runs-on-as-json-public:
        description: "The array of labels (in json form) determining public runners."
        required: true
        type: string
      default-branch:
        description: "The default branch for the repository"
        required: true
        type: string
      constraints-branch:
        description: "Branch used to construct constraints URL from."
        required: true
        type: string
      image-tag:
        description: "Tag to set for the image"
        required: true
        type: string
      upgrade-to-newer-dependencies:
        description: "Whether to upgrade to newer dependencies (true/false)"
        required: true
        type: string
      chicken-egg-providers:
        description: "Whether to build chicken-egg provider packages in the same run (true/false)"
        required: true
        type: string
      docker-cache:
        description: "Docker cache specification to build the image (registry, local, disabled)."
        required: true
        type: string
      canary-run:
        description: "Whether to run the canary run (true/false)"
        required: true
        type: string
      default-python-version:
        description: "Which version of python should be used by default"
        required: true
        type: string
jobs:
  prod-image-extra-checks-main:
    name: PROD image extra checks (main)
    uses: ./.github/workflows/prod-image-extra-checks.yml
    with:
      runs-on-as-json-public: ${{ inputs.runs-on-as-json-public }}
      python-versions: "[ '${{ inputs.default-python-version }}' ]"
      default-python-version: ${{ inputs.default-python-version }}
      branch: ${{ inputs.default-branch }}
      use-uv: "true"
      image-tag: ${{ inputs.image-tag }}
      build-provider-packages: ${{ inputs.default-branch == 'main' }}
      upgrade-to-newer-dependencies: ${{ inputs.upgrade-to-newer-dependencies }}
      chicken-egg-providers: ${{ inputs.chicken-egg-providers }}
      constraints-branch: ${{ inputs.constraints-branch }}
      docker-cache: ${{ inputs.docker-cache }}
    if: inputs.default-branch == 'main' && inputs.canary-run == 'true'

  prod-image-extra-checks-release-branch:
    name: PROD image extra checks (release)
    uses: ./.github/workflows/prod-image-extra-checks.yml
    with:
      runs-on-as-json-public: ${{ inputs.runs-on-as-json-public }}
      python-versions: "[ '${{ inputs.default-python-version }}' ]"
      default-python-version: ${{ inputs.default-python-version }}
      branch: ${{ inputs.default-branch }}
      use-uv: "false"
      image-tag: ${{ inputs.image-tag }}
      build-provider-packages: ${{ inputs.default-branch == 'main' }}
      upgrade-to-newer-dependencies: ${{ inputs.upgrade-to-newer-dependencies }}
      chicken-egg-providers: ${{ inputs.chicken-egg-providers }}
      constraints-branch: ${{ inputs.constraints-branch }}
      docker-cache: ${{ inputs.docker-cache }}
    if: inputs.default-branch != 'main' && inputs.canary-run == 'true'

  test-examples-of-prod-image-building:
    timeout-minutes: 60
    name: "Test examples of POD image building"
    runs-on: ${{ fromJSON(inputs.runs-on-as-json-public) }}
    env:
      GITHUB_REPOSITORY: ${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_USERNAME: ${{ github.actor }}
      VERBOSE: "true"
    steps:
      - name: "Cleanup repo"
        shell: bash
        run: docker run -v "${GITHUB_WORKSPACE}:/workspace" -u 0:0 bash -c "rm -rf /workspace/*"
      - name: "Checkout ${{ github.ref }} ( ${{ github.sha }} )"
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          persist-credentials: false
      - name: "Cleanup docker"
        run: ./scripts/ci/cleanup_docker.sh
      - name: "Install Breeze"
        uses: ./.github/actions/breeze
      - name: Login to ghcr.io
        shell: bash
        run: echo "${{ env.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Pull PROD image ${{ inputs.default-python-version}}:${{ inputs.image-tag }}
        run: breeze prod-image pull --tag-as-latest
        env:
          PYTHON_MAJOR_MINOR_VERSION: "${{ inputs.default-python-version }}"
          IMAGE_TAG: "${{ inputs.image-tag }}"
      - name: "Setup python"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.default-python-version }}
          cache: 'pip'
          cache-dependency-path: ./dev/requirements.txt
      - name: "Test examples of PROD image building"
        run: "
          cd ./docker_tests && \
          python -m pip install -r requirements.txt && \
          TEST_IMAGE=\"ghcr.io/${{ github.repository }}/${{ inputs.default-branch }}\
          /prod/python${{ inputs.default-python-version }}:${{ inputs.image-tag }}\" \
          python -m pytest test_examples_of_prod_image_building.py -n auto --color=yes"

  test-docker-compose-quick-start:
    timeout-minutes: 60
    name: "Docker-compose quick start with PROD image verifying"
    runs-on: ${{ fromJSON(inputs.runs-on-as-json-public) }}
    env:
      IMAGE_TAG: "${{ inputs.image-tag }}"
      PYTHON_MAJOR_MINOR_VERSION: "${{ inputs.default-python-version }}"
      GITHUB_REPOSITORY: ${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_USERNAME: ${{ github.actor }}
      VERBOSE: "true"
    steps:
      - name: "Cleanup repo"
        shell: bash
        run: docker run -v "${GITHUB_WORKSPACE}:/workspace" -u 0:0 bash -c "rm -rf /workspace/*"
      - name: "Checkout ${{ github.ref }} ( ${{ github.sha }} )"
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          persist-credentials: false
      - name: "Cleanup docker"
        run: ./scripts/ci/cleanup_docker.sh
      - name: "Install Breeze"
        uses: ./.github/actions/breeze
      - name: Login to ghcr.io
        shell: bash
        run: echo "${{ env.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: "Pull image ${{ inputs.default-python-version}}:${{ inputs.image-tag }}"
        run: breeze prod-image pull --tag-as-latest
      - name: "Test docker-compose quick start"
        run: breeze testing docker-compose-tests
