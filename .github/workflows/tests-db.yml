# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
name: DB tests
on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      run-tests:
        description: "Whether to run tests or not (true/false)"
        required: true
        type: string
      runs-on-as-json-default:
        description: "The array of labels (in json form) determining default runner used for the build."
        required: true
        type: string
      image-tag:
        description: "Tag to set for the image"
        required: true
        type: string
      python-versions:
        description: "The list of python versions (stringified JSON array) to run the tests on."
        required: true
        type: string
      postgres-versions:
        description: "The list of postgres versions (stringified JSON array) to run the tests on."
        required: true
        type: string
      mysql-versions:
        description: "The list of mysql versions (stringified JSON array) to run the tests on."
        required: true
        type: string
      postgres-exclude:
        description: >
          Excluded postgres combos (stringified JSON array of python-version/postgre-version dicts)
        required: true
        type: string
      mysql-exclude:
        description: >
          Excluded postgres combos (stringified JSON array of python-version/postgre-version dicts)
        required: true
        type: string
      sqlite-exclude:
        description: >
          Excluded postgres combos (stringified JSON array of python-version/postgre-version dicts)
        required: true
        type: string
      parallel-test-types-list-as-string:
        description: "The list of parallel test types to run separated by spaces"
        required: true
        type: string
      include-success-outputs:
        description: "Whether to include success outputs or not (true/false)"
        required: false
        default: "false"
        type: string
      run-coverage:
        description: "Whether to run coverage or not (true/false)"
        required: true
        type: string
      debug-resources:
        description: "Whether to debug resources or not (true/false)"
        required: true
        type: string
jobs:
  tests-postgres:
    name: "Postgres tests"
    uses: ./.github/workflows/run-unit-tests.yml
    needs: [build-info, wait-for-ci-images]
    permissions:
      contents: read
      packages: read
    secrets: inherit
    with:
      runs-on-as-json-default: ${{ inputs.runs-on-as-json-default }}
      backend: "postgres"
      test-name: "Postgres"
      test-scope: "DB"
      image-tag: ${{ inputs.image-tag }}
      python-versions: ${{ inputs.python-versions }}
      backend-versions: ${{ inputs.postgres-versions }}
      excludes: ${{ inputs.postgres-exclude }}
      parallel-test-types-list-as-string: ${{ inputs.parallel-test-types-list-as-string }}
      include-success-outputs: ${{ inputs.include-success-outputs }}
      run-migration-tests: "true"
      run-coverage: ${{ inputs.run-coverage }}
      debug-resources: ${{ inputs.debug-resources }}
    if: inputs.run-tests == 'true'

  tests-mysql:
    name: "MySQL tests"
    uses: ./.github/workflows/run-unit-tests.yml
    needs: [build-info, wait-for-ci-images]
    permissions:
      contents: read
      packages: read
    secrets: inherit
    with:
      runs-on-as-json-default: ${{ inputs.runs-on-as-json-default }}
      backend: "mysql"
      test-name: "MySQL"
      test-scope: "DB"
      image-tag: ${{ inputs.image-tag }}
      python-versions: ${{ inputs.python-versions }}
      backend-versions: ${{ inputs.mysql-versions }}
      excludes: ${{ inputs.mysql-exclude }}
      parallel-test-types-list-as-string: ${{ inputs.parallel-test-types-list-as-string }}
      include-success-outputs: ${{ inputs.include-success-outputs }}
      run-coverage: ${{ inputs.run-coverage }}
      run-migration-tests: "true"
      debug-resources: ${{ inputs.debug-resources }}
    if: inputs.run-tests == 'true'

  tests-sqlite:
    name: "Sqlite tests"
    uses: ./.github/workflows/run-unit-tests.yml
    needs: [build-info, wait-for-ci-images]
    permissions:
      contents: read
      packages: read
    secrets: inherit
    with:
      runs-on-as-json-default: ${{ inputs.runs-on-as-json-default }}
      backend: "sqlite"
      test-name: "Sqlite"
      test-name-separator: ""
      test-scope: "DB"
      image-tag: ${{ inputs.image-tag }}
      python-versions: ${{ inputs.python-versions }}
      # No versions for sqlite
      backend-versions: "['']"
      excludes: ${{ inputs.sqlite-exclude }}
      parallel-test-types-list-as-string: ${{ inputs.parallel-test-types-list-as-string }}
      include-success-outputs: ${{ inputs.include-success-outputs }}
      run-coverage: ${{ inputs.run-coverage }}
      run-migration-tests: "true"
      debug-resources: ${{ inputs.debug-resources }}
    if: inputs.run-tests == 'true'
